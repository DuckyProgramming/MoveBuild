class combatant{
    constructor(layer,battle,x,y,relativeX,relativeY,tileX,tileY,type,team,id,direction,minion=false){
        this.layer=layer
        this.battle=battle
        this.position={x:x,y:y}
        this.relativePosition={x:relativeX,y:relativeY}
        this.tilePosition={x:tileX,y:tileY}
        this.type=type
        this.team=team
        this.id=id
        this.minion=minion
        this.offset={position:{x:0,y:0},life:{x:0,y:25}}

        this.fade=0
        this.time=0

        this.name=types.combatant[this.type].name
        this.life=types.combatant[this.type].life
        this.behavior=types.combatant[this.type].behavior
        this.spec=types.combatant[this.type].spec
        this.move=types.combatant[this.type].move
        this.attack=copyArray(types.combatant[this.type].attack)
        this.description=types.combatant[this.type].description

        if(this.team==0&&this.battle.players>1){
            this.life*=1.5
            for(let a=0,la=this.attack.length;a<la;a++){
                if(types.attack[this.attack[a].type].class==0){
                    this.attack[a].effect[0]=round(this.attack[a].effect[0]*1.5)
                }
            }
        }

        this.order=0
        this.moved=false
        this.aggressor=false
        this.dead=false
        this.respawn=false
        this.graphic=false
        this.blocked=0
        this.taken=0
        this.base={position:{x:this.position.x,y:this.position.y},life:this.life}
        this.collect={life:this.life}
        this.infoAnim={life:1,block:0,size:1,description:0,upSize:false,intent:[],flash:[0,0,0],upFlash:[false,false,false]}

        this.block=0
        this.dodges=[]
        this.status={main:[],name:[
            'Double Damage','Counter','Cannot Be Pushed','Dodge','Energy Next Turn','Bleed','Strength','Dexterity','Weak','Frail',
            'Vulnerable','Retain Block','Single Damage','Block Next Turn','Armor','Control','Cannot Gain Block','Temporary Strength','Temporary Dexterity','Metallicize',
            'Weak Next Turn','Buffer','Free Attack','Double Play','Take Half Damage','Intangible','Counter All','Free Card', 'Cannot Move','Cannot Move Next Turn',
            'Strength Per Turn','Poison','Stun','Regeneration','Dexterity Per Turn','Extra Turn','Counter Combat','Cannot Gain Block Next Turn','Counter Push','Counter Bleed',
            'Temporary Damage Up','Temporary Draw','Currency','Strength on Hit','Weak on Kill','Vulnerable on Kill','Anti-Control','Counter Combat Turn','Distracted','Burn',
            'Single Counter Block','Invisible','Dissipating','Take Third Damage','Speed Up','Strength Next Turn','Temporary Strength on Hit','Take 3/4 Damage','Temporary Strength Next Turn','Temporary Speed Up',
            'Untargettable From Front','Cancel Exhaust','Must Attack or Take Damage','Damage Taken Up','Energy on Hit','Conditioning','Shiv Per Turn','Remove Combo','Combo Per Hit Boost','Attack Draw',
            'Combo on Block','Combo Per Turn','Combo Next Turn','2 Range Counter','Card Play Block','Temporary Damage Down','Shiv Boost','Take Per Card Played','Counter All Combat',
            ],next:[],display:[],active:[],position:[],size:[],
            behavior:[
                0,2,1,0,2,1,0,0,3,1,//1
                1,0,0,2,0,0,1,2,2,0,//2
                2,0,0,0,1,1,0,0,1,2,//3
                0,1,1,1,0,0,0,2,1,2,//4
                2,2,0,0,0,0,2,0,0,0,//5
                0,1,0,1,0,2,2,1,2,2,//6
                1,0,2,0,2,0,0,1,0,0,//7
                0,0,2,2,0,2,0,2,0,
                'Take Per Card Played','Counter All Combat',
            ],
            class:[
                0,0,0,0,2,1,0,0,1,1,
                0,0,0,0,0,0,1,0,0,0,
                1,0,2,2,0,0,0,2,3,1,
                0,1,1,0,0,2,0,1,0,0,
                0,2,3,0,2,2,1,0,1,1,
                0,0,3,0,2,0,0,0,0,1,
                2,2,1,1,2,0,2,3,2,2,
                2,2,2,0,2,0,2,1,0,
            ]}
        //0-none, 1-decrement, 2-remove, 3-early decrement, player
        //0-good, 1-bad, 2-nonclassified good, 3-nonclassified bad
        for(let a=0;a<this.status.name.length;a++){
            this.status.main.push(0)
            this.status.next.push(0)
            this.status.active.push(false)
            this.status.position.push(0)
            this.status.size.push(0)
        }

        for(let a=0,la=this.attack.length;a<la;a++){
            this.infoAnim.intent.push(0)
        }

        this.direction=0
        this.size=1

        this.combo=0
        this.armed=true

        this.intent=0
        this.activated=false
        this.target=floor(random(0,this.battle.players))

        switch(this.name){
            case 'George':
                this.anim={direction:direction,head:direction,mouth:{x:8,y:5,open:0},eye:[0,0],eyeStyle:[0,0],
                    legs:[{top:9,bottom:0,length:{top:18,bottom:18}},{top:9,bottom:0,length:{top:18,bottom:18}}],
                    arms:[{top:24,bottom:9,length:{top:18,bottom:18}},{top:24,bottom:9,length:{top:18,bottom:18}}]}
                this.spin={legs:[{top:-60,bottom:-120},{top:60,bottom:120}],arms:[{top:-93,bottom:-75,lock:0},{top:93,bottom:75,lock:0}],eye:[-18,18],mouth:216,sword:0}
                this.color={skin:{head:[240,220,180],body:[35,40,40],legs:[25,30,30],arms:[30,35,35]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]},helmet:[40,45,45],visor:[200,200,200],belt:[30,25,0],badge:[[240,240,200],[240,240,40]]}
                this.parts={eyeLevel:-81,mouth:-73,minor:15,
                    legs:[{top:{x:3.5,y:-36},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:3.5,y:-36},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                    arms:[{top:{x:4,y:-64},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:4,y:-64},middle:{x:0,y:0},bottom:{x:0,y:0}}]}
                this.graphics={
                    legs:[{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                    arms:[{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}}]}
                this.fades={eye:[1,1],mouth:1,skin:{legs:1,arms:1,body:1,head:1},helmet:1,visor:1,belt:1,badge:1}
                this.trigger={display:{mouth:true,eye:[true,true],skin:{legs:true,arms:true,body:true,head:true},helmet:true,visor:true,belt:true,badge:true,extra:{damage:false}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0,hand:0,foot:0}
                this.goal={anim:{direction:this.anim.direction,sword:false}}
            break
            case 'Lira':
                this.anim={direction:direction,head:direction,sword:1,mouth:{x:8,y:5,open:0},
                    eye:[0,0],eyeStyle:[0,0],under:{top:{x:1,y:1},bottom:{x:1,y:1},bow:{top:{position:{x:1,y:1},size:{x:1,y:1}},bottom:{position:{x:1,y:1},size:{x:1,y:1}}},under:{bottom:1}},
                    kimono:{bow:{position:{x:1,y:1},size:{x:1,y:1}}},
                    legs:[
                        {top:9,bottom:0,length:{top:16,bottom:16,sandal:{back:15.5,front:14.5}}},
                        {top:9,bottom:0,length:{top:16,bottom:16,sandal:{back:15.5,front:14.5}}}
                    ],arms:[
                        {top:24,bottom:9,length:{top:16,bottom:16}},
                        {top:24,bottom:9,length:{top:16,bottom:16}}
                    ]}

                this.kimono={decoration:[]}

                this.spin={
                    legs:[{top:-60,bottom:-120},{top:60,bottom:120}],
                    arms:[{top:-93,bottom:-75,lock:0},{top:93,bottom:75,lock:0}],
                    bow:{center:0,loop:[-24,24]},
                    under:{top:[],bottom:[],tanga:24,piece:36,under:{top:[-40,40],button:[-39,39],bottom:[0,-15,15,-9,9]}},
                    underBow:{top:{center:0,end:[-4,4],loop:[-12,12]},bottom:{center:0,end:[-5,5],loop:[-15,15]}},
                    sandal:[6,-6],eye:[-18,18],flower:[54,48,56],button:0,sword:75,mouth:216}

                this.color=graphics.combatant[0].color

                this.parts={eyeLevel:-72,flowerLevel:[-77.5,-75,-71.5],mouth:-65,
                    under:{top:-51,bottom:-31,bow:{top:2.75,bottom:-5}},
                    kimono:{main:-58,outside:-59,bow:-53},
                    minor:15,
                    legs:[
                        {top:{x:3,y:-32},middle:{x:0,y:0},bottom:{x:0,y:0},sandal:{back:{x:0,y:0},front:{x:0,y:0}}},
                        {top:{x:3,y:-32},middle:{x:0,y:0},bottom:{x:0,y:0},sandal:{back:{x:0,y:0},front:{x:0,y:0}}}
                    ],arms:[
                        {top:{x:3.5,y:-55},middle:{x:0,y:0},bottom:{x:0,y:0}},
                        {top:{x:3.5,y:-55},middle:{x:0,y:0},bottom:{x:0,y:0}}
                    ],}

                this.graphics={
                    legs:[
                        {top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},sandal:{back:{x:0,y:0},front:{x:0,y:0}}},
                        {top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},sandal:{back:{x:0,y:0},front:{x:0,y:0}}}
                    ],arms:[
                        {top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}},
                        {top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}}
                    ]}

                this.fades={flower:[1,1,1],eye:[1,1],band:[1,1],mouth:1,
                    sandal:{back:[1,1],front:[1,1]},
                    skin:{legs:1,arms:1,body:1,head:1,button:1},
                    kimono:{decoration:{fade:1,position:{x:1,y:1},size:{x:1,y:1}},
                    main:{back:{x:1,y:1},front:{x:1,y:1}},outside:{back:{x:1,y:1},front:{x:1,y:1}},bow:1},
                    under:{top:1,bottom:1,tanga:1,bow:{top:1,bottom:1},under:{top:1,button:1,bottom:1}},
                }

                if(options.alt){
                    this.trigger={display:{flower:[true,true,true],band:[false,true],mouth:true,
                        hair:{back:true,front:true,glow:true},eye:[true,true],sandal:{back:[false,false],front:[false,false]},
                        skin:{legs:true,arms:true,body:true,head:true,button:false},
                        kimono:{main:{back:false,front:false},outside:{back:false,front:false},bow:false,decoration:false},
                        under:{top:true,bottom:true,tanga:false,bow:{top:true,bottom:true},under:{top:true,button:false,bottom:false}},
                    }}
                }else{
                    this.trigger={display:{flower:[true,true,true],band:[true,true],mouth:true,
                        hair:{back:true,front:true,glow:true},eye:[true,true],sandal:{back:[true,true],front:[true,true]},
                        skin:{legs:true,arms:true,body:true,head:true,button:false},
                        kimono:{main:{back:true,front:true},outside:{back:true,front:true},bow:true,decoration:true},
                        under:{top:false,bottom:false,tanga:false,bow:{top:false,bottom:false},under:{top:true,button:false,bottom:false}},
                    }}
                }

                this.trigger.display.mode={
                    sandal:{edge:0},
                }

                this.trigger.display.extra={sword:true,damage:false}

                this.calc={int:[0,0,0,0]}

                this.sprites={spin:0,detail:15,spinDetail:0,spinDetailHead:0,temp:0}

                this.animSet={loop:0,flip:0,hand:1,foot:1}

                this.goal={anim:{direction:this.anim.direction,sword:true}}

                for(let g=0;g<25;g++){
                    this.spin.under.top.push(g*72/5)
                }
                for(let g=0;g<20;g++){
                    this.spin.under.bottom.push(g*18)
                }
                for(let g=0;g<2;g++){
                    this.kimono.decoration.push({spin:90-g*47.5,rotate:random(0,360),y:46-g*4.5,width:0.2,height:1,type:0})
                }
                this.kimono.decoration.push({spin:134,rotate:random(0,360),y:49,width:0.2,height:1,type:0})
                this.kimono.decoration.push({spin:180,rotate:random(0,360),y:50,width:0.2,height:1,type:0})
                this.kimono.decoration.push({spin:226,rotate:random(0,360),y:49,width:0.2,height:1,type:0})
                for(let g=0;g<7;g++){
                    this.kimono.decoration.push({spin:270+g*47.5,rotate:random(0,360),y:46-g*4.5,width:0.2,height:1,type:0})
                }
            
                this.kimono.decoration.push({spin:78,rotate:random(0,360),y:38,width:0.2,height:1,type:0})
                this.kimono.decoration.push({spin:118,rotate:random(0,360),y:42,width:0.2,height:1,type:0})
                this.kimono.decoration.push({spin:156,rotate:random(0,360),y:44,width:0.2,height:1,type:0})
                this.kimono.decoration.push({spin:204,rotate:random(0,360),y:44,width:0.2,height:1,type:0})
                this.kimono.decoration.push({spin:242,rotate:random(0,360),y:42,width:0.2,height:1,type:0})
                for(let g=0;g<5;g++){
                    this.kimono.decoration.push({spin:282+g*47.5,rotate:random(0,360),y:38-g*4.4,width:0.2,height:1,type:0})
                }
            
                this.kimono.decoration.push({spin:96,rotate:random(0,360),y:34,width:0.2,height:1,type:0})
                this.kimono.decoration.push({spin:138,rotate:random(0,360),y:36,width:0.2,height:1,type:0})
                this.kimono.decoration.push({spin:180,rotate:random(0,360),y:38,width:0.2,height:1,type:0})
                this.kimono.decoration.push({spin:222,rotate:random(0,360),y:36,width:0.2,height:1,type:0})
                for(let g=0;g<4;g++){
                    this.kimono.decoration.push({spin:264+g*47.5,rotate:random(0,360),y:32.5-g*4.4,width:0.2,height:1,type:0})
                }
            
                this.kimono.decoration.push({spin:154,rotate:random(0,360),y:30,width:0.2,height:1,type:0})
                this.kimono.decoration.push({spin:206,rotate:random(0,360),y:30,width:0.2,height:1,type:0})
                this.kimono.decoration.push({spin:254,rotate:random(0,360),y:27,width:0.2,height:1,type:0})
                this.kimono.decoration.push({spin:302,rotate:random(0,360),y:22,width:0.2,height:1,type:0})
            
                this.kimono.decoration.push({spin:218,rotate:random(0,360),y:24,width:0.2,height:1,type:0})
            break
            case 'Sakura':
                this.anim={direction:direction,head:direction,sword:1,sword2:0,mouth:{x:8,y:5,open:0},
                    eye:[0,0],eyeStyle:[0,0],under:{top:{x:1,y:1},bottom:{x:1,y:1},bow:{top:{position:{x:1,y:1},size:{x:1,y:1}},bottom:{position:{x:1,y:1},size:{x:1,y:1}}},under:{bottom:1}},
                    kimono:{bow:{position:{x:1,y:1},size:{x:1,y:1}}},
                    wrap:{bow:{position:{x:1,y:1}}},
                    legs:[
                        {top:9,bottom:0,length:{top:16,bottom:16,sandal:{back:15.5,front:14.5}}},
                        {top:9,bottom:0,length:{top:16,bottom:16,sandal:{back:15.5,front:14.5}}}
                    ],arms:[
                        {top:27,bottom:9,length:{top:16,bottom:16}},
                        {top:27,bottom:9,length:{top:16,bottom:16}}
                    ]}

                this.kimono={decoration:{large:[],small:[]},string:[]}

                this.under={dressDecoration:{large:[]}}

                this.spin={
                    legs:[{top:-60,bottom:-120},{top:60,bottom:120}],
                    arms:[{top:-93,bottom:-75,lock:0},{top:93,bottom:75,lock:0}],
                    bow:{center:0,end:[-5,5],loop:[-20,20]},
                    under:{top:[[],[]],bottom:[[],[]],tanga:30,under:{top:[-40,40],button:[-39,39],bottom:[0,-15,15,-9,9]}},
                    underBow:{top:{center:0,end:[-4,4],loop:[-16,16]},bottom:{center:0,end:[-4,4],loop:[-16,16]}},
                    necklaceBow:{center:180,end:[172,-172],loop:[160,-160]},
                    wrap:{bow:180,bar:33,center:0},
                    sleeve:{decoration:[]},
                    sandal:[10,-10],eye:[-18,18],flower:[-48,-30],necklace:[-45,45,0],button:0,tail:108,sword:75,mouth:36}

                this.color=graphics.combatant[1].color

                this.parts={eyeLevel:-71.5,flowerLevel:-77.5,necklaceBow:-59,mouth:-68.5,
                    under:{dress:-58,top:-50,bottom:-31,bow:{top:3,bottom:-6.25}},
                    kimono:{main:-58,outside:-62,fringe:-38,shadow:-37.5,bow:-51.5,string:9,flowerLevel:-44},
                    wrap:{bow:-44,bar:7.5},
                    minor:15,
                    legs:[
                        {top:{x:3,y:-32},middle:{x:0,y:0},bottom:{x:0,y:0},sandal:{back:{x:0,y:0},front:{x:0,y:0}}},
                        {top:{x:3,y:-32},middle:{x:0,y:0},bottom:{x:0,y:0},sandal:{back:{x:0,y:0},front:{x:0,y:0}}}
                    ],arms:[
                        {top:{x:3.5,y:-55},middle:{x:0,y:0},bottom:{x:0,y:0}},
                        {top:{x:3.5,y:-55},middle:{x:0,y:0},bottom:{x:0,y:0}}
                    ]}

                this.graphics={
                    legs:[
                        {top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},sandal:{back:{x:0,y:0},front:{x:0,y:0}}},
                        {top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},sandal:{back:{x:0,y:0},front:{x:0,y:0}}}
                    ],arms:[
                        {top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}},
                        {top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}}
                    ]}

                this.fades={flower:1,flower2:1,eye:[1,1],mouth:1,
                    sandal:{back:[1,1],front:[1,1]},necklace:{back:1,front:1},sleeve:1,sleeveDecoration:1,
                    skin:{legs:1,arms:1,body:1,head:1,button:1},
                    kimono:{decoration:{fade:{large:1,small:1},position:{large:{x:1,y:1},small:{x:1,y:1}},size:{large:{x:1,y:1},small:{x:1,y:1}}},
                    main:{back:{x:1,y:1},front:{x:1,y:1}},outside:{back:{x:1,y:1},front:{x:1,y:1}},fringe:{back:{x:1,y:1},front:{x:1,y:1}},shadow:{x:1,y:1},bow:1,string:1,flower:1},
                    under:{dress:{back:{x:1,y:1},front:{x:1,y:1},decoration:{fade:{large:1},position:{large:{x:1,y:1}},size:{large:{x:1,y:1}}}},towel:1,top:1,bottom:1,tanga:1,bow:{top:1,bottom:1},under:{top:1,button:1,bottom:1}},
                    wrap:{round:1,bow:1,bar:1,sleeve:1},
                }

                if(options.alt){
                    this.trigger={display:{flower:true,flower2:false,mouth:true,
                        hair:{back:true,front:true,tail:true,glow:true},eye:[true,true],sandal:{back:[false,false],front:[false,false]},sleeve:false,sleeveDecoration:false,necklace:{back:true,front:true},
                        skin:{legs:true,arms:true,body:true,head:true,button:true},
                        kimono:{main:{back:false,front:false},outside:{back:false,front:false},fringe:{back:false,front:false},decoration:{large:false,small:false},shadow:false,bow:false,string:false,flower:false},
                        wrap:{round:false,bow:false,bar:false,sleeve:false},
                        under:{dress:{back:false,front:false,decoration:{large:false}},towel:false,top:true,bottom:true,tanga:false,bow:{top:true,bottom:true},under:{top:true,button:false,bottom:false}},
                    }}
                }else{
                    this.trigger={display:{flower:true,flower2:false,mouth:true,
                        hair:{back:true,front:true,tail:true,glow:true},eye:[true,true],sandal:{back:[true,true],front:[true,true]},sleeve:true,sleeveDecoration:true,necklace:{back:true,front:true},
                        skin:{legs:true,arms:true,body:true,head:true,button:false},
                        kimono:{main:{back:true,front:true},outside:{back:true,front:true},fringe:{back:true,front:true},decoration:{large:true,small:true},shadow:true,bow:true,string:true,flower:true},
                        wrap:{round:true,bow:true,bar:true,sleeve:true},
                        under:{dress:{back:false,front:false,decoration:{large:false}},towel:false,top:false,bottom:false,tanga:false,bow:{top:false,bottom:false},under:{top:true,button:false,bottom:false}},
                    }}
                }

                this.trigger.display.mode={
                    kimono:{main:1},
                    sandal:{edge:0},
                }

                this.trigger.display.extra={sword:true,sword2:true,damage:false}

                this.calc={int:[0,0,0,0]}

                this.sprites={spin:0,detail:15,spinDetail:0,spinDetailHead:0,temp:0}

                this.animSet={loop:0,flip:0,hand:0,foot:0}

                this.goal={anim:{direction:this.anim.direction,sword:true,sword2:true}}

                for(let g=0;g<2;g++){
                    this.kimono.decoration.large.push({spin:90-g*47.5,rotate:24,y:50-g*5,width:0.35,height:1})
                }
                this.kimono.decoration.large.push({spin:134,rotate:12,y:54,width:0.35,height:1})
                this.kimono.decoration.large.push({spin:180,rotate:0,y:55,width:0.35,height:1})
                this.kimono.decoration.large.push({spin:226,rotate:-12,y:54,width:0.35,height:1})
                for(let g=0;g<7;g++){
                    this.kimono.decoration.large.push({spin:270+g*47.5,rotate:-24,y:50-g*5,width:0.35,height:1})
                }
                for(let g=0;g<2;g++){
                    this.kimono.decoration.small.push({spin:66-g*47.5,rotate:24,y:47-g*5,width:0.6,height:0.8})
                }
                this.kimono.decoration.small.push({spin:112,rotate:21,y:52,width:0.6,height:0.8})
                this.kimono.decoration.small.push({spin:156,rotate:6,y:54.5,width:0.6,height:0.8})
                this.kimono.decoration.small.push({spin:204,rotate:-6,y:54.5,width:0.6,height:0.8})
                this.kimono.decoration.small.push({spin:248,rotate:-21,y:52,width:0.6,height:0.8})
                for(let g=0;g<7;g++){
                    this.kimono.decoration.small.push({spin:294+g*47.5,rotate:-24,y:47-g*5,width:0.6,height:0.8})
                }
                for(let g=0;g<15;g++){
                    this.spin.under.top[0].push(g*24)
                    this.spin.under.bottom[0].push(g*24+12)
                }
                for(let g=0;g<20;g++){
                    this.spin.under.top[1].push(g*18)
                    this.spin.under.bottom[1].push(g*18+9)
                }
                for(let g=0;g<21;g++){
                    this.kimono.string.push(g*120/7)
                }
                for(let g=0;g<4;g++){
                    this.spin.sleeve.decoration.push({spin:g*90,rotate:random(0,360),part:0,length:0.3,type:floor(random(0,this.color.sleeve.decoration.length))})
                    this.spin.sleeve.decoration.push({spin:45+g*90,rotate:random(0,360),part:1,length:0.3,type:floor(random(0,this.color.sleeve.decoration.length))})
                    this.spin.sleeve.decoration.push({spin:45+g*90,rotate:random(0,360),part:0,length:0.65,type:floor(random(0,this.color.sleeve.decoration.length))})
                    this.spin.sleeve.decoration.push({spin:g*90,rotate:random(0,360),part:1,length:0.65,type:floor(random(0,this.color.sleeve.decoration.length))})
                    this.spin.sleeve.decoration.push({spin:g*90,rotate:random(0,360),part:0,length:1,type:floor(random(0,this.color.sleeve.decoration.length))})
                    this.spin.sleeve.decoration.push({spin:45+g*90,rotate:random(0,360),part:1,length:1,type:floor(random(0,this.color.sleeve.decoration.length))})
                    this.spin.sleeve.decoration.push({spin:45+g*90,rotate:random(0,360),part:0,length:1.45,type:floor(random(0,this.color.sleeve.decoration.length))})
                    this.spin.sleeve.decoration.push({spin:g*90,rotate:random(0,360),part:1,length:1.45,type:floor(random(0,this.color.sleeve.decoration.length))})
                    this.spin.sleeve.decoration.push({spin:g*90,rotate:random(0,360),part:0,length:1.8,type:floor(random(0,this.color.sleeve.decoration.length))})
                    this.spin.sleeve.decoration.push({spin:45+g*90,rotate:random(0,360),part:1,length:1.8,type:floor(random(0,this.color.sleeve.decoration.length))})
                }
                for(let h=0;h<2;h++){
                    for(let g=0,lg=8+h*2;g<lg;g++){
                        this.under.dressDecoration.large.push({spin:360*g/lg+10,rotate:random(0,360),y:22+(g%2)+h*10,width:0.3,height:1.5,type:0})
                        this.under.dressDecoration.large.push({spin:360*g/lg+180/lg+10,rotate:random(0,360),y:27+(g%2)+h*10,width:0.3,height:1.5,type:0})
                    }
                }
            break
            case 'Certes':
                this.anim={direction:direction,head:direction,mouth:{x:8,y:4,open:0},
                    eye:[0,0],eyeStyle:[0,0],under:{bow:{position:{x:1,y:1},size:{x:1,y:1}}},
                    legs:[
                        {top:9,bottom:0,length:{top:16,bottom:16}},
                        {top:9,bottom:0,length:{top:16,bottom:16}}
                    ],arms:[
                        {top:27,bottom:9,length:{top:16,bottom:16}},
                        {top:27,bottom:9,length:{top:16,bottom:16}}
                    ]}

                this.spin={
                    legs:[{top:-60,bottom:-120},{top:60,bottom:120}],
                    arms:[{top:-93,bottom:-75,lock:0},{top:93,bottom:75,lock:0}],
                    bow:{center:0,end:[-5,5],loop:[-20,20]},
                    eye:[-18,18],mouth:36}

                this.color=graphics.combatant[2].color

                this.parts={eyeLevel:-71.5,mouth:-68.5,
                    under:{dress:-58,bow:3},
                    minor:15,
                    legs:[
                        {top:{x:3,y:-32},middle:{x:0,y:0},bottom:{x:0,y:0}},
                        {top:{x:3,y:-32},middle:{x:0,y:0},bottom:{x:0,y:0}}
                    ],arms:[
                        {top:{x:3.5,y:-55},middle:{x:0,y:0},bottom:{x:0,y:0}},
                        {top:{x:3.5,y:-55},middle:{x:0,y:0},bottom:{x:0,y:0}}
                    ]}

                this.graphics={
                    legs:[
                        {top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}},
                        {top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}}
                    ],arms:[
                        {top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}},
                        {top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}}
                    ]}

                this.fades={eye:[1,1],mouth:1,
                    skin:{legs:1,arms:1,body:1,head:1},
                    under:{dress:{back:{x:1,y:1},front:{x:1,y:1}},bow:1},
                }

                this.trigger={display:{mouth:true,
                    hair:{back:true,front:true,glow:true},eye:[true,true],
                    skin:{legs:true,arms:true,body:true,head:true},
                    under:{dress:{back:true,front:true},bow:true},
                }}

                this.trigger.display.extra={damage:false}

                this.calc={int:[0,0,0,0]}

                this.sprites={spin:0,detail:15,spinDetail:0,spinDetailHead:0,temp:0}

                this.animSet={loop:0,flip:0,hand:0,foot:0}

                this.goal={anim:{direction:this.anim.direction}}
            break
            case 'Ume':
                this.anim={direction:direction,head:direction,sword:1,mouth:{x:6,y:4,open:0},
                    eye:[0,0],eyeStyle:[0,0],under:{top:{x:1,y:1},bottom:{x:1,y:1},bow:{
                        top:[{position:{x:1,y:1},size:{x:1,y:1}},{position:{x:1,y:1},size:{x:1,y:1}}],
                        bottom:[{position:{x:1,y:1},size:{x:1,y:1}},{position:{x:1,y:1},size:{x:1,y:1}}],
                        extra:{position:{x:1,y:1},size:{x:1,y:1}}},under:{bottom:1}},
                    kimono:{bow:{position:{x:1,y:1},size:{x:1,y:1}}},
                    wrap:{bow:{position:{x:1,y:1}}},
                    legs:[
                        {top:9,bottom:0,length:{top:16,bottom:16,sandal:{back:15.5,front:14.5}}},
                        {top:9,bottom:0,length:{top:16,bottom:16,sandal:{back:15.5,front:14.5}}}
                    ],arms:[
                        {top:27,bottom:9,length:{top:16,bottom:16}},
                        {top:27,bottom:9,length:{top:16,bottom:16}}
                    ]}

                this.spin={
                    legs:[{top:-60,bottom:-120},{top:60,bottom:120}],
                    arms:[{top:-93,bottom:-75,lock:0},{top:93,bottom:75,lock:0}],
                    bow:{center:-36},
                    under:{top:[[[],[]],[[],[]],[[],[]],[[],[]],[[],[]]],bottom:[[],[],[],[],[]],shawl:[],piece:54,tanga:30,under:{top:[-40,40],button:[-39,39],bottom:[0,-15,15,-9,9]}},
                    underBow:{top:[{center:-40,end:[-43,-37],loop:[-49,-31]},{center:40,end:[37,43],loop:[31,49]}],bottom:[{center:-90,loop:[-120,-60]},{center:90,loop:[60,120]}],extra:{center:0,end:[-5,5],loop:[-15,15]}},
                    necklaceBow:{center:180,end:[172,-172],loop:[160,-160]},
                    hair:{pin:[-85,85]},
                    wrap:{bow:24,center:0},
                    sleeve:{decoration:[]},
                    sandal:[10,-10],eye:[-18,18],blush:[-17,17],button:0,sword:75,mouth:216}

                this.color=graphics.combatant[10].color

                this.parts={eyeLevel:-72,mouth:-65,blush:-68.5,
                    under:{top:-51,bottom:-31,bow:{top:[-1.8,-1.8],bottom:[-5.8,-5.8],extra:2.5}},
                    kimono:{main:-58,bow:-42},
                    wrap:{bow:-45.5},
                    minor:15,
                    legs:[
                        {top:{x:3,y:-32},middle:{x:0,y:0},bottom:{x:0,y:0},sandal:{back:{x:0,y:0},front:{x:0,y:0}}},
                        {top:{x:3,y:-32},middle:{x:0,y:0},bottom:{x:0,y:0},sandal:{back:{x:0,y:0},front:{x:0,y:0}}}
                    ],arms:[
                        {top:{x:3.5,y:-55},middle:{x:0,y:0},bottom:{x:0,y:0}},
                        {top:{x:3.5,y:-55},middle:{x:0,y:0},bottom:{x:0,y:0}}
                    ]}

                this.graphics={
                    legs:[
                        {top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},sandal:{back:{x:0,y:0},front:{x:0,y:0}}},
                        {top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},sandal:{back:{x:0,y:0},front:{x:0,y:0}}}
                    ],arms:[
                        {top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}},
                        {top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}}
                    ]}

                this.fades={eye:[1,1],mouth:1,
                    sandal:{back:[1,1],front:[1,1]},
                    hair:{pin:1},
                    sleeve:1,sleeveDecoration:1,
                    skin:{legs:1,arms:1,body:1,head:1,button:1,blush:1},
                    kimono:{main:{back:{x:1,y:1},front:{x:1,y:1}},decoration:{fade:{large:1},position:{large:{x:1,y:1}},size:{large:{x:1,y:1}}},bow:1},
                    under:{top:1,bottom:1,shawl:1,bow:{top:[1,1],bottom:[1,1],extra:1},tanga:1,under:{top:1,button:1,bottom:1}},
                    wrap:{round:1,bow:1,sleeve:1},
                }

                if(options.alt){
                    this.trigger={display:{mouth:true,
                        hair:{back:true,front:true,pin:true,glow:true},eye:[true,true],sleeve:false,sleeveDecoration:false,sandal:{back:[false,false],front:[false,false]},
                        skin:{legs:true,arms:true,body:true,head:true,button:true,blush:true},
                        kimono:{main:{back:false,front:false},decoration:{large:false},bow:false},
                        wrap:{round:false,bow:false,sleeve:false},
                        under:{top:true,bottom:true,shawl:true,bow:{top:[true,true],bottom:[true,true],extra:true},tanga:false,under:{top:true,button:false,bottom:false}},
                    }}
                }else{
                    this.trigger={display:{mouth:true,
                        hair:{back:true,front:true,pin:true,glow:true},eye:[true,true],sleeve:true,sleeveDecoration:true,sandal:{back:[true,true],front:[true,true]},
                        skin:{legs:true,arms:true,body:true,head:true,button:true,blush:true},
                        kimono:{main:{back:true,front:true},decoration:{large:true},bow:true},
                        wrap:{round:true,bow:true,sleeve:true},
                        under:{top:false,bottom:false,shawl:false,bow:{top:[false,false],bottom:[false,false],extra:false},tanga:false,under:{top:true,button:false,bottom:false}},
                    }}
                }

                this.trigger.display.mode={
                    kimono:{main:1},
                    sandal:{edge:0},
                }

                this.trigger.display.extra={sword:true,damage:false}

                this.calc={int:[0,0,0,0]}

                this.sprites={spin:0,detail:15,spinDetail:0,spinDetailHead:0,temp:0}

                this.animSet={loop:0,flip:0,hand:0,foot:1}

                this.goal={anim:{direction:this.anim.direction,sword:true}}

                this.spin.sleeve.decoration.push({spin:0,rotate:random(0,360),part:0,length:0.4,type:floor(random(0,15))})
                this.spin.sleeve.decoration.push({spin:120,rotate:random(0,360),part:0,length:0.4,type:floor(random(0,15))})
                this.spin.sleeve.decoration.push({spin:240,rotate:random(0,360),part:0,length:0.4,type:floor(random(0,15))})
                this.spin.sleeve.decoration.push({spin:60,rotate:random(0,360),part:0,length:0.95,type:floor(random(0,15))})
                this.spin.sleeve.decoration.push({spin:180,rotate:random(0,360),part:0,length:0.95,type:floor(random(0,15))})
                this.spin.sleeve.decoration.push({spin:300,rotate:random(0,360),part:0,length:0.95,type:floor(random(0,15))})
                this.spin.sleeve.decoration.push({spin:0,rotate:random(0,360),part:0,length:1.35,type:floor(random(0,15))})
                this.spin.sleeve.decoration.push({spin:120,rotate:random(0,360),part:0,length:1.35,type:floor(random(0,15))})
                this.spin.sleeve.decoration.push({spin:240,rotate:random(0,360),part:0,length:1.35,type:floor(random(0,15))})
                this.spin.sleeve.decoration.push({spin:60,rotate:random(0,360),part:0,length:1.7,type:floor(random(0,15))})
                this.spin.sleeve.decoration.push({spin:180,rotate:random(0,360),part:0,length:1.7,type:floor(random(0,15))})
                this.spin.sleeve.decoration.push({spin:300,rotate:random(0,360),part:0,length:1.7,type:floor(random(0,15))})

                this.spin.sleeve.decoration.push({spin:60,rotate:random(0,360),part:1,length:0.4,type:floor(random(0,15))})
                this.spin.sleeve.decoration.push({spin:180,rotate:random(0,360),part:1,length:0.4,type:floor(random(0,15))})
                this.spin.sleeve.decoration.push({spin:300,rotate:random(0,360),part:1,length:0.4,type:floor(random(0,15))})
                this.spin.sleeve.decoration.push({spin:0,rotate:random(0,360),part:1,length:0.95,type:floor(random(0,15))})
                this.spin.sleeve.decoration.push({spin:120,rotate:random(0,360),part:1,length:0.95,type:floor(random(0,15))})
                this.spin.sleeve.decoration.push({spin:240,rotate:random(0,360),part:1,length:0.95,type:floor(random(0,15))})
                this.spin.sleeve.decoration.push({spin:60,rotate:random(0,360),part:1,length:1.35,type:floor(random(0,15))})
                this.spin.sleeve.decoration.push({spin:180,rotate:random(0,360),part:1,length:1.35,type:floor(random(0,15))})
                this.spin.sleeve.decoration.push({spin:300,rotate:random(0,360),part:1,length:1.35,type:floor(random(0,15))})
                this.spin.sleeve.decoration.push({spin:0,rotate:random(0,360),part:1,length:1.7,type:floor(random(0,15))})
                this.spin.sleeve.decoration.push({spin:120,rotate:random(0,360),part:1,length:1.7,type:floor(random(0,15))})
                this.spin.sleeve.decoration.push({spin:240,rotate:random(0,360),part:1,length:1.7,type:floor(random(0,15))})

                for(let h=0;h<5;h++){
                    for(let g=0,lg=3-h/2;g<lg;g++){
                        if(lg==1){
                            this.spin.under.top[h][1].push(-40)
                            this.spin.under.top[h][1].push(40)
                        }else{
                            this.spin.under.top[h][0].push(-40-(lg-1)*8+g/(ceil(lg-1))*(lg-1)*16)
                            this.spin.under.top[h][1].push(40-(lg-1)*8+g/ceil(lg-1)*(lg-1)*16)
                        }
                    }
                }
                for(let g=0;g<12;g++){
                    for(let h=0;h<5;h++){
                        this.spin.under.bottom[h].push(g*30+h*18)
                    }
                }
            break
            case 'Drunk Boss': case 'Enforcer': case 'Bomber Boy': case 'Chief Engineering Officer': case 'Gangmaster':
                this.anim={direction:direction,head:direction,mouth:{x:8,y:5,open:0},eye:[0,0],eyeStyle:[0,0],
                    legs:[{top:9,bottom:0,length:{top:19,bottom:19}},{top:9,bottom:0,length:{top:19,bottom:19}}],
                    arms:[{top:24,bottom:9,length:{top:19,bottom:19}},{top:24,bottom:9,length:{top:19,bottom:19}}]}
                this.spin={legs:[{top:-60,bottom:-120},{top:60,bottom:120}],arms:[{top:-93,bottom:-75,lock:0},{top:93,bottom:75,lock:0}],eye:[-18,18],mouth:216}
                this.parts={eyeLevel:-87,mouth:-79,minor:15,
                    legs:[{top:{x:4,y:-38},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:4,y:-38},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                    arms:[{top:{x:7,y:-67},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:7,y:-67},middle:{x:0,y:0},bottom:{x:0,y:0}}]}
                this.graphics={
                    legs:[{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                    arms:[{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}}]}
                this.fades={eye:[1,1],mouth:1,skin:{legs:1,arms:1,body:1,head:1}}
                this.trigger={display:{mouth:true,eye:[true,true],skin:{legs:true,arms:true,body:true,head:true}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                switch(this.name){
                    case 'Drunk Boss':
                        this.color={skin:{head:[240,220,180],body:[120,60,20],legs:[120,60,20],arms:[120,60,20]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.belt=[90,45,15]
                        this.color.bottle=[60,30,15]
                        this.fades.belt=1
                        this.fades.bottle=1
                        this.trigger.display.belt=true
                        this.trigger.display.bottle=true
                    break
                    case 'Enforcer':
                        this.color={skin:{head:[240,220,180],body:[125,200,125],legs:[120,200,120],arms:[115,195,115]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.button=[75,150,75]
                        this.color.glasses=[[40,40,40],[255,255,255]]
                        this.fades.button=1
                        this.fades.glasses=1
                        this.trigger.display.button=true
                        this.trigger.display.glasses=true
                    break
                    case 'Bomber Boy':
                        this.color={skin:{head:[240,220,180],body:[180,60,60],legs:[175,55,55],arms:[170,50,50]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.helmet=[120,40,40]
                        this.color.logo=[135,45,45]
                        this.color.emblem=[220,220,220]
                        this.fades.helmet=1
                        this.fades.logo=1
                        this.fades.emblem=1
                        this.trigger.display.helmet=true
                        this.trigger.display.logo=true
                        this.trigger.display.emblem=true
                    break
                    case 'Chief Engineering Officer':
                        this.color={skin:{head:[240,220,180],body:[70,70,70],legs:[60,60,60],arms:[255,200,25]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.skin.upperBody=[20,60,100]
                        this.color.tie=[[160,200,220],[255,150,0]]
                        this.color.coat=[255,225,50]
                        this.color.hat=[255,255,100]
                        this.color.belt=[160,100,20]
                        this.fades.tie=1
                        this.fades.coat=1
                        this.fades.hat=1
                        this.fades.belt=1
                        this.trigger.display.tie=true
                        this.trigger.display.coat=true
                        this.trigger.display.hat=true
                        this.trigger.display.belt=true
                    break
                    case 'Gangmaster':
                        this.color={skin:{head:[240,220,180],body:[60,20,50],legs:[50,10,40],arms:[50,10,40]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.tie=[[240,240,240],[40,0,30]]
                        this.color.pocket=[220,220,220]
                        this.color.beard=[60,60,60]
                        this.fades.tie=1
                        this.fades.pocket=1
                        this.fades.beard=1
                        this.trigger.display.tie=true
                        this.trigger.display.pocket=true
                        this.trigger.display.beard=true
                    break
                }
            break
            case 'Pointy': case 'Little Guy':
                this.anim={direction:direction,head:direction,mouth:{x:8,y:5,open:0},eye:[0,0],eyeStyle:[0,0],
                    legs:[{top:12,bottom:0,length:{top:14,bottom:14}},{top:12,bottom:0,length:{top:14,bottom:14}}],
                    arms:[{top:27,bottom:12,length:{top:14,bottom:14}},{top:27,bottom:12,length:{top:14,bottom:14}}]}
                this.spin={legs:[{top:-60,bottom:-120},{top:60,bottom:120}],arms:[{top:-93,bottom:-75,lock:0},{top:93,bottom:75,lock:0}],eye:[-18,18],mouth:216}
                this.parts={eyeLevel:-69,mouth:-61,minor:15,
                    legs:[{top:{x:3.5,y:-31},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:3.5,y:-31},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                    arms:[{top:{x:4,y:-55},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:4,y:-55},middle:{x:0,y:0},bottom:{x:0,y:0}}]}
                this.graphics={
                    legs:[{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                    arms:[{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}}]}
                this.fades={eye:[1,1],mouth:1,skin:{legs:1,arms:1,body:1,head:1}}
                this.trigger={display:{mouth:true,eye:[true,true],skin:{legs:true,arms:true,body:true,head:true}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                switch(this.name){
                    case 'Pointy':
                        this.color={skin:{head:[240,220,150],body:[50,150,200],legs:[50,150,200],arms:[200,50,50]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.skin.upperBody=[200,50,50]
                        this.anim.sword=1
                        this.spin.sword=75
                        this.fades.sword=1
                        this.trigger.display.extra={sword:true}
                    break
                    case 'Little Guy':
                        this.color={skin:{head:[240,220,150],body:[120,80,40],legs:[110,70,30],arms:[150,200,200]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.skin.upperBody=[150,200,200]
                    break
                }
            break
            case 'Duck': case 'Fungal Duck': case 'Duckforce': case 'Blue Duck':
                this.anim={direction:direction,eye:[0,0],legs:[{top:24,length:{top:10}},{top:24,length:{top:10}}],arms:[{top:54,length:{top:10}},{top:54,length:{top:10}}]}
                this.fades={eye:[1,1],beak:{main:1,mouth:1,nostril:1},skin:{legs:1,arms:1,body:1,head:1}}
                this.spin={legs:[{top:-90},{top:90}],arms:[{top:-90},{top:90}],eye:[-18,18]}
                this.parts={eyeLevel:-40,beakLevel:-33,legs:[{top:{x:3,y:-15},middle:{x:0,y:0}},{top:{x:3,y:-15},middle:{x:0,y:0}}],arms:[{top:{x:3.5,y:-25},middle:{x:0,y:0}},{top:{x:3.5,y:-25},middle:{x:0,y:0}}]}
                this.graphics={legs:[{top:{x:0,y:0},middle:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0}}],arms:[{top:{x:0,y:0},middle:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0}}]}
                this.trigger={display:{eye:[true,true],beak:{main:true,mouth:true,nostril:true},skin:{legs:true,arms:true,body:true,head:true}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                switch(this.name){
                    case 'Duck':
                        this.color={eye:{back:[0,0,0]},beak:{main:[255,140,25],mouth:[0,0,0],nostril:[0,0,0]},skin:{head:[255,235,25],body:[255,225,15],legs:[255,210,0],arms:[255,215,5]}}
                    break
                    case 'Fungal Duck':
                        this.color={eye:{back:[0,0,0]},beak:{main:[255,140,25],mouth:[0,0,0],nostril:[0,0,0]},skin:{head:[255,235,25],body:[255,225,15],legs:[255,210,0],arms:[255,215,5]}}
                        this.color.fungus=[[200,160,120],[180,170,160]]
                        this.fades.fungus=1
                        this.trigger.display.fungus=true
                    break
                    case 'Duckforce':
                        this.color={eye:{back:[0,0,0]},beak:{main:[255,140,25],mouth:[0,0,0],nostril:[0,0,0]},skin:{head:[255,235,25],body:[66,22,22],legs:[72,24,24],arms:[78,26,26]}}
                        this.color.helmet=[60,20,20]
                        this.fades.helmet=1
                        this.trigger.display.helmet=true
                    break
                    case 'Blue Duck':
                        this.color={eye:{back:[0,0,0]},beak:{main:[255,140,25],mouth:[0,0,0],nostril:[0,0,0]},skin:{head:[90,0,255],body:[75,0,215],legs:[60,0,175],arms:[65,0,180]}}
                    break
                }
            break
            case 'Big Duck': case 'Agent Duck': case 'General Duckion':
                this.anim={direction:direction,eye:[0,0],legs:[{top:24,length:{top:15}},{top:24,length:{top:15}}],arms:[{top:54,length:{top:15}},{top:54,length:{top:15}}]}
                this.fades={eye:[1,1],beak:{main:1,mouth:1,nostril:1},skin:{legs:1,arms:1,body:1,head:1}}
                this.spin={legs:[{top:-90},{top:90}],arms:[{top:-90},{top:90}],eye:[-18,18]}
                this.color={eye:{back:[0,0,0]},beak:{main:[255,140,25],mouth:[0,0,0],nostril:[0,0,0]},skin:{head:[255,235,25],body:[255,225,15],legs:[255,210,0],arms:[255,215,5]}}
                this.parts={eyeLevel:-56,beakLevel:-49,legs:[{top:{x:5,y:-21},middle:{x:0,y:0}},{top:{x:5,y:-21},middle:{x:0,y:0}}],arms:[{top:{x:4,y:-36},middle:{x:0,y:0}},{top:{x:4,y:-36},middle:{x:0,y:0}}]}
                this.graphics={legs:[{top:{x:0,y:0},middle:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0}}],arms:[{top:{x:0,y:0},middle:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0}}]}
                this.trigger={display:{eye:[true,true],beak:{main:true,mouth:true,nostril:true},skin:{legs:true,arms:true,body:true,head:true}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                switch(this.name){
                    case 'Big Duck':
                        this.color={eye:{back:[0,0,0]},beak:{main:[255,140,25],mouth:[0,0,0],nostril:[0,0,0]},skin:{head:[255,235,25],body:[255,225,15],legs:[255,210,0],arms:[255,215,5]}}
                    break
                    case 'Agent Duck':
                        this.color={eye:{back:[0,0,0]},beak:{main:[255,140,25],mouth:[0,0,0],nostril:[0,0,0]},skin:{head:[255,235,25],body:[60,60,60],legs:[255,210,0],arms:[255,215,5]}}
                        this.color.tie=[[240,240,240],[100,150,255]]
                        this.color.hat=[40,40,40]
                        this.color.sunglasses=[0,0,0]
                        this.fades.tie=1
                        this.fades.hat=1
                        this.fades.sunglasses=1
                        this.trigger.display.tie=true
                        this.trigger.display.hat=true
                        this.trigger.display.sunglasses=true
                    break
                    case 'General Duckion':
                        this.color={eye:{back:[0,0,0]},beak:{main:[255,140,25],mouth:[0,0,0],nostril:[0,0,0]},skin:{head:[255,235,25],body:[66,22,22],legs:[72,24,24],arms:[78,26,26]}}
                        this.color.helmet=[60,20,20]
                        this.color.badge=[[200,200,200],[255,255,150]]
                        this.fades.helmet=1
                        this.fades.badge=1
                        this.trigger.display.helmet=true
                        this.trigger.display.badge=true
                    break
                }
            break
            case 'Monkey': case 'Monkey Gangster':
                this.anim={direction:direction,head:direction,mouth:{x:12,y:8,open:0},eye:[0,0],eyeStyle:[0,0],
                    legs:[{top:9,bottom:0,length:{top:9,bottom:9}},{top:9,bottom:0,length:{top:9,bottom:9}}],
                    arms:[{top:24,bottom:9,length:{top:9,bottom:9}},{top:24,bottom:9,length:{top:9,bottom:9}}]}
                this.spin={legs:[{top:-60,bottom:-120},{top:60,bottom:120}],arms:[{top:-93,bottom:-75,lock:0},{top:93,bottom:75,lock:0}],eye:[-18,18],mouth:216}
                this.parts={eyeLevel:-60,mouth:-48,minor:20,
                    legs:[{top:{x:4,y:-18},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:4,y:-18},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                    arms:[{top:{x:8,y:-30},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:8,y:-30},middle:{x:0,y:0},bottom:{x:0,y:0}}]}
                this.graphics={
                    legs:[{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                    arms:[{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}}]}
                this.fades={eye:[1,1],mouth:1,skin:{legs:1,arms:1,body:1,head:1}}
                this.trigger={display:{mouth:true,eye:[true,true],skin:{legs:true,arms:true,body:true,head:true}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                switch(this.name){
                    case 'Monkey':
                        this.color={skin:{head:[190,95,0],body:[170,85,0],legs:[160,80,0],arms:[160,80,0]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                    break
                    case 'Monkey Gangster':
                        this.color={skin:{head:[190,95,0],body:[225,225,225],legs:[220,220,220],arms:[215,215,215]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.tie=[[250,250,250],[100,200,200]]
                        this.color.hat=[210,210,210]
                        this.fades.tie=1
                        this.fades.hat=1
                        this.trigger.display.tie=true
                        this.trigger.display.hat=true
                    break
                }
            break
            case 'Orb Walker':
                this.anim={direction:direction,legs:[{top:39,length:{top:36}},{top:39,length:{top:36}},{top:39,length:{top:36}},{top:39,length:{top:36}}]}
                this.fades={body:1,cover:1,legs:1}
                this.spin={legs:[{top:-45},{top:-135},{top:135},{top:45}]}
                this.color={body:[[30,120,110],[30,210,200]],cover:[200,180,120],outer:[130,110,75]}
                this.parts={legs:[{top:{x:0,y:-30},middle:{x:0,y:0}},{top:{x:0,y:-30},middle:{x:0,y:0}},{top:{x:0,y:-30},middle:{x:0,y:0}},{top:{x:0,y:-30},middle:{x:0,y:0}}]}
                this.graphics={legs:[{top:{x:0,y:0},middle:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0}}]}
                this.trigger={display:{body:true,cover:true,legs:true}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
            break
            case 'Modicum':
                this.anim={direction:direction,eye:[0,0],arms:[{top:54,length:{top:6}},{top:54,length:{top:6}}]}
                this.fades={eye:[1,1],skin:{arms:1,body:1}}
                this.spin={arms:[{top:-90},{top:90}],eye:[-24,24]}
                this.parts={eyeLevel:-18,arms:[{top:{x:14,y:-14},middle:{x:0,y:0}},{top:{x:14,y:-14},middle:{x:0,y:0}}]}
                this.graphics={arms:[{top:{x:0,y:0},middle:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0}}]}
                this.trigger={display:{eye:[true,true],skin:{arms:true,body:true}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                this.color={eye:{back:[0,0,0]},skin:{body:[240,240,220],arms:[235,235,215]}}
            break
            case 'Slime': case 'Spike Slime': case 'Slimoid':
                this.anim={direction:direction,eye:[0,0],arms:[{top:54,length:{top:10}},{top:54,length:{top:10}}]}
                this.fades={eye:[1,1],skin:{arms:1,body:1}}
                this.spin={arms:[{top:-90},{top:90}],eye:[-24,24]}
                this.parts={eyeLevel:-30,arms:[{top:{x:30,y:-20},middle:{x:0,y:0}},{top:{x:30,y:-20},middle:{x:0,y:0}}]}
                this.graphics={arms:[{top:{x:0,y:0},middle:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0}}]}
                this.trigger={display:{eye:[true,true],skin:{arms:true,body:true}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                switch(this.name){
                    case 'Slime':
                        this.color={eye:{back:[0,0,0]},skin:{body:[150,255,50],arms:[140,245,40]}}
                    break
                    case 'Spike Slime':
                        this.color={eye:{back:[0,0,0]},skin:{body:[150,100,50],arms:[145,95,45]}}
                    break
                    case 'Slimoid':
                        this.color={eye:{back:[0,0,0]},skin:{body:[240,240,220],arms:[235,235,215]}}
                    break
                }
            break
            case 'Big Slime': case 'Big Spike Slime': case 'Big Slimoid':
                this.anim={direction:direction,eye:[0,0],arms:[{top:54,length:{top:15}},{top:54,length:{top:15}}]}
                this.fades={eye:[1,1],skin:{arms:1,body:1}}
                this.spin={arms:[{top:-90},{top:90}],eye:[-24,24]}
                this.parts={eyeLevel:-45,arms:[{top:{x:45,y:-30},middle:{x:0,y:0}},{top:{x:45,y:-30},middle:{x:0,y:0}}]}
                this.graphics={arms:[{top:{x:0,y:0},middle:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0}}]}
                this.trigger={display:{eye:[true,true],skin:{arms:true,body:true}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                switch(this.name){
                    case 'Big Slime':
                        this.color={eye:{back:[0,0,0]},skin:{body:[150,255,50],arms:[140,245,40]}}
                    break
                    case 'Big Spike Slime':
                        this.color={eye:{back:[0,0,0]},skin:{body:[150,100,50],arms:[145,95,45]}}
                    break
                    case 'Big Slimoid':
                        this.color={eye:{back:[0,0,0]},skin:{body:[240,240,220],arms:[235,235,215]}}
                    break
                }
            break
            case 'Slime Boss':
                this.anim={direction:direction,eye:[0,0],arms:[{top:54,length:{top:22.5}},{top:54,length:{top:22.5}}]}
                this.fades={eye:[1,1],skin:{arms:1,body:1}}
                this.spin={arms:[{top:-90},{top:90}],eye:[-24,24]}
                this.parts={eyeLevel:-67.5,arms:[{top:{x:67.5,y:-45},middle:{x:0,y:0}},{top:{x:67.5,y:-45},middle:{x:0,y:0}}]}
                this.graphics={arms:[{top:{x:0,y:0},middle:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0}}]}
                this.trigger={display:{eye:[true,true],skin:{arms:true,body:true}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                this.color={eye:{back:[0,0,0]},skin:{body:[150,255,50],arms:[140,245,40]}}
            break
            case 'Spheron':
                this.anim={direction:direction}
                this.fades={body:1,balls:1}
                this.spin={legs:[{top:-45},{top:-135},{top:135},{top:45}]}
                this.color={body:[225,220,200],balls:[220,215,195],highlight:[235,120,110]}
                this.trigger={display:{body:true,balls:true}}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
            break
            case 'Rock Golem': case 'Shield Particle':
                this.anim={direction:direction,eye:[0,0],arms:[{top:54,length:{top:36}},{top:54,length:{top:36}}]}
                this.fades={eye:[1,1],skin:{arms:1,body:1}}
                this.spin={arms:[{top:-90},{top:90}],eye:[-36,36]}
                this.parts={eyeLevel:-46,arms:[{top:{x:0,y:-48},middle:{x:0,y:0}},{top:{x:0,y:-48},middle:{x:0,y:0}}]}
                this.graphics={arms:[{top:{x:0,y:0},middle:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0}}]}
                this.trigger={display:{eye:[true,true],skin:{arms:true,body:true}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                switch(this.name){
                    case 'Rock Golem':
                        this.color={eye:{back:[32,30,28]},skin:{body:[80,75,70]}}
                    break
                    case 'Shield Particle':
                        this.color={eye:{back:[90,10,60]},skin:{body:[180,20,120]}}
                    break
                }
            break
            case 'Goblin': case 'Sneaky Gremlin': case 'Fat Gremlin': case 'Angry Gremlin': case 'Gremlin': case 'Elf Archer':
                this.spin={legs:[{top:-60,bottom:-120},{top:60,bottom:120}],arms:[{top:-93,bottom:-75,lock:0},{top:93,bottom:75,lock:0}],eye:[-18,18],mouth:216}
                this.graphics={
                    legs:[{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                    arms:[{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}}]}
                this.fades={eye:[1,1],mouth:1,skin:{legs:1,arms:1,body:1,head:1}}
                this.trigger={display:{mouth:true,eye:[true,true],skin:{legs:true,arms:true,body:true,head:true}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                switch(this.name){
                    case 'Goblin':
                        this.color={skin:{head:[150,200,50],body:[100,150,50],legs:[95,145,45],arms:[90,140,40]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.trigger.display.ear=true
                        this.anim={direction:direction,head:direction,thick:4,mouth:{x:8,y:5,open:0},eye:[0,0],eyeStyle:[0,0],
                            legs:[{top:9,bottom:0,length:{top:9,bottom:9}},{top:9,bottom:0,length:{top:9,bottom:9}}],
                            arms:[{top:24,bottom:9,length:{top:9,bottom:9}},{top:24,bottom:9,length:{top:9,bottom:9}}]}
                        this.parts={eyeLevel:-44,mouth:-36,minor:12,
                            legs:[{top:{x:3.5,y:-18},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:3.5,y:-18},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                            arms:[{top:{x:4,y:-30},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:4,y:-30},middle:{x:0,y:0},bottom:{x:0,y:0}}]}
                    break
                    case 'Sneaky Gremlin':
                        this.color={skin:{head:[175,75,125],body:[150,50,100],legs:[145,45,95],arms:[140,40,90]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.trigger.display.ear=true
                        this.anim={direction:direction,head:direction,thick:3,mouth:{x:8,y:5,open:0},eye:[0,0],eyeStyle:[0,0],
                            legs:[{top:9,bottom:0,length:{top:10,bottom:10}},{top:9,bottom:0,length:{top:10,bottom:10}}],
                            arms:[{top:24,bottom:9,length:{top:10,bottom:10}},{top:24,bottom:9,length:{top:10,bottom:10}}]}
                        this.parts={eyeLevel:-52,mouth:-44,minor:12,
                            legs:[{top:{x:3,y:-20},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:3,y:-20},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                            arms:[{top:{x:3.5,y:-36},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:3.5,y:-36},middle:{x:0,y:0},bottom:{x:0,y:0}}]}
                    break
                    case 'Fat Gremlin':
                        this.color={skin:{head:[175,100,75],body:[150,75,50],legs:[145,70,45],arms:[140,65,40]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.trigger.display.ear=true
                        this.anim={direction:direction,head:direction,thick:5,mouth:{x:8,y:5,open:0},eye:[0,0],eyeStyle:[0,0],
                            legs:[{top:9,bottom:0,length:{top:7,bottom:7}},{top:9,bottom:0,length:{top:7,bottom:7}}],
                            arms:[{top:24,bottom:9,length:{top:7,bottom:7}},{top:24,bottom:9,length:{top:7,bottom:7}}]}
                        this.parts={eyeLevel:-46,mouth:-38,minor:15,
                            legs:[{top:{x:5,y:-14},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:5,y:-14},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                            arms:[{top:{x:6,y:-24},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:6,y:-24},middle:{x:0,y:0},bottom:{x:0,y:0}}]}
                    break
                    case 'Angry Gremlin':
                        this.color={skin:{head:[175,50,50],body:[150,25,25],legs:[145,20,20],arms:[140,15,15]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.trigger.display.ear=true
                        this.anim={direction:direction,head:direction,thick:4,mouth:{x:8,y:5,open:0},eye:[0,0],eyeStyle:[0,0],
                            legs:[{top:9,bottom:0,length:{top:14,bottom:14}},{top:9,bottom:0,length:{top:14,bottom:14}}],
                            arms:[{top:24,bottom:9,length:{top:14,bottom:14}},{top:24,bottom:9,length:{top:14,bottom:14}}]}
                        this.parts={eyeLevel:-64,mouth:-56,minor:12,
                            legs:[{top:{x:3,y:-28},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:3,y:-28},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                            arms:[{top:{x:4,y:-48},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:4,y:-48},middle:{x:0,y:0},bottom:{x:0,y:0}}]}
                    break
                    case 'Gremlin':
                        this.color={skin:{head:[50,200,150],body:[50,150,100],legs:[45,145,95],arms:[40,140,90]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.trigger.display.ear=true
                        this.anim={direction:direction,head:direction,thick:3,mouth:{x:8,y:5,open:0},eye:[0,0],eyeStyle:[0,0],
                            legs:[{top:9,bottom:0,length:{top:10,bottom:10}},{top:9,bottom:0,length:{top:10,bottom:10}}],
                            arms:[{top:24,bottom:9,length:{top:10,bottom:10}},{top:24,bottom:9,length:{top:10,bottom:10}}]}
                        this.parts={eyeLevel:-58,mouth:-50,minor:13.5,
                            legs:[{top:{x:3,y:-20},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:3,y:-20},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                            arms:[{top:{x:3.5,y:-40},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:3.5,y:-40},middle:{x:0,y:0},bottom:{x:0,y:0}}]}
                    break
                    case 'Elf Archer':
                        this.color={skin:{head:[255,225,220],body:[160,220,230],legs:[255,225,220],arms:[255,220,215]},eye:{back:[115,55,45],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.skin.upperBody=[155,170,110]
                        this.color.hair=[150,70,60]
                        this.color.waistband=[220,225,235]
                        this.color.bows=[100,90,90]
                        this.color.belt=[55,50,60]
                        this.fades.hair=1
                        this.fades.waistband=1
                        this.fades.bows=1
                        this.fades.belt=1
                        this.trigger.display.hair=true
                        this.trigger.display.waistband=true
                        this.trigger.display.bows=true
                        this.trigger.display.belt=true
                        this.trigger.display.ear=true
                        this.anim={direction:direction,head:direction,thick:4,mouth:{x:8,y:5,open:0},eye:[0,0],eyeStyle:[0,0],
                            legs:[{top:9,bottom:0,length:{top:14,bottom:14}},{top:9,bottom:0,length:{top:14,bottom:14}}],
                            arms:[{top:24,bottom:9,length:{top:14,bottom:14}},{top:24,bottom:9,length:{top:14,bottom:14}}]}
                        this.parts={eyeLevel:-62.5,mouth:-54.5,minor:13.5,
                            legs:[{top:{x:3.5,y:-28},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:3.5,y:-28},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                            arms:[{top:{x:4,y:-44},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:4,y:-44},middle:{x:0,y:0},bottom:{x:0,y:0}}]}
                    break
                }
                this.goal={anim:{direction:this.anim.direction}}
            break
            case 'Fat Scrapper':
                this.anim={direction:direction,head:direction,mouth:{x:8,y:5,open:0},eye:[0,0],eyeStyle:[0,0],
                    legs:[{top:9,bottom:0,length:{top:13,bottom:13}},{top:9,bottom:0,length:{top:13,bottom:13}}],
                    arms:[{top:24,bottom:9,length:{top:13,bottom:13}},{top:24,bottom:9,length:{top:13,bottom:13}}]}
                this.spin={legs:[{top:-60,bottom:-120},{top:60,bottom:120}],arms:[{top:-93,bottom:-75,lock:0},{top:93,bottom:75,lock:0}],eye:[-18,18],mouth:216}
                this.parts={eyeLevel:-63,mouth:-55,minor:15,
                    legs:[{top:{x:7.5,y:-26},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:7.5,y:-26},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                    arms:[{top:{x:16,y:-41},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:16,y:-41},middle:{x:0,y:0},bottom:{x:0,y:0}}]}
                this.graphics={
                    legs:[{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                    arms:[{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}}]}
                this.fades={eye:[1,1],mouth:1,skin:{legs:1,arms:1,body:1,head:1}}
                this.trigger={display:{mouth:true,eye:[true,true],skin:{legs:true,arms:true,body:true,head:true}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                switch(this.name){
                    case 'Fat Scrapper':
                        this.color={skin:{head:[240,220,180],body:[120,120,120],legs:[115,115,115],arms:[110,110,110]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.belt=[[100,100,100],[60,60,60],[80,80,80]]
                        this.color.goggles=[200,200,200]
                        this.fades.belt=1
                        this.fades.goggles=0.6
                        this.trigger.display.belt=true
                        this.trigger.display.goggles=true
                    break
                }
            break
            case 'Donu': case 'Deca':
                this.anim={direction:direction,
                    legs:[{top:9,bottom:0,length:{top:10,bottom:10}},{top:9,bottom:0,length:{top:10,bottom:10}}],
                    arms:[{top:24,bottom:9,length:{top:10,bottom:10}},{top:24,bottom:9,length:{top:10,bottom:10}}]}
                this.spin={legs:[{top:-60,bottom:-120},{top:60,bottom:120}],arms:[{top:-93,bottom:-75,lock:0},{top:93,bottom:75,lock:0}]}
                this.parts={
                    legs:[{top:{x:5,y:-20},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:5,y:-20},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                    arms:[{top:{x:30,y:-55},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:30,y:-55},middle:{x:0,y:0},bottom:{x:0,y:0}}]}
                this.graphics={
                    legs:[{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                    arms:[{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}}]}
                this.fades={skin:{legs:1,arms:1,body:1}}
                this.trigger={display:{skin:{legs:true,arms:true,body:true}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                switch(this.name){
                    case 'Donu':
                        this.color={skin:{body:[[135,175,130],[80,110,85]],legs:[90,125,95],arms:[90,125,95]}}
                    break
                    case 'Deca':
                        this.color={skin:{body:[[250,235,155],[235,140,70],[235,180,100],[185,115,70]],legs:[235,170,100],arms:[235,170,100]}}
                    break
                }
            break
            case 'Flame':
                this.anim={direction:direction,glow:1}
                this.color=[150,255,50]
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
            break
            case 'Hexaghost Orb':
                this.anim={direction:direction,glow:1}
                this.color=[150,255,50]
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
            break
            case 'Hexaghost Core':
                this.anim={direction:direction,glow:1}
                this.color={glow:[[130,55,110],[150,70,130],[170,85,150],[190,100,170],[210,115,190],[230,130,210]],base:[[225,220,185],[245,240,205]]}
                this.fades={glow:1,base:1}
                this.trigger={display:{glow:true,base:true}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
            break
            case 'Bronze Automaton':
                this.anim={direction:direction,
                    legs:[{top:9,bottom:0,length:{top:15,bottom:15}},{top:9,bottom:0,length:{top:15,bottom:15}}],
                    arms:[{top:24,bottom:9,length:{top:15,bottom:15}},{top:24,bottom:9,length:{top:15,bottom:15}}]}
                this.spin={legs:[{top:-60,bottom:-120},{top:60,bottom:120}],arms:[{top:-93,bottom:-75,lock:0},{top:93,bottom:75,lock:0}]}
                this.parts={
                    legs:[{top:{x:9,y:-30},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:9,y:-30},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                    arms:[{top:{x:12,y:-72},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:12,y:-72},middle:{x:0,y:0},bottom:{x:0,y:0}}]}
                this.graphics={
                    legs:[{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                    arms:[{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}}]}
                this.color={skin:{legs:[100,70,30],arms:[100,70,30]},gear:[80,50,10],main:[[120,90,50],[180,150,130]],diamond:[[200,150,100],[250,200,150]]}
                this.fades={skin:{legs:1,arms:1},gear:1,main:1,diamond:1}
                this.trigger={display:{skin:{legs:true,arms:true},gear:true,main:true,diamond:true}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
            break
            case 'Bronze Orb C': case 'Bronze Orb A':
                this.anim={direction:direction}
                this.color={gear:[80,50,10],main:[[120,90,50],[180,150,130]],diamond:[[200,150,100],[250,200,150]]}
                this.fades={gear:1,main:1,diamond:1}
                this.trigger={display:{gear:true,main:true,diamond:true}}
                this.calc={int:[0,0,0,0]}
                this.goal={anim:{direction:this.anim.direction}}
            break
            case 'Management Robot': case 'Management Prototype': case 'Destructor Bot': case 'Purge X02':
                this.anim={direction:direction,head:direction,eye:[0,0],eyeStyle:[0,0],
                    legs:[{top:9,bottom:0,length:{top:17,bottom:17}},{top:9,bottom:0,length:{top:17,bottom:17}}],
                    arms:[{top:24,bottom:9,length:{top:17,bottom:17}},{top:24,bottom:9,length:{top:17,bottom:17}}]}
                this.spin={legs:[{top:-60,bottom:-120},{top:60,bottom:120}],arms:[{top:-93,bottom:-75,lock:0},{top:93,bottom:75,lock:0}],eye:[-18,18]}
                this.parts={eyeLevel:-78,minor:15,
                    legs:[{top:{x:3.5,y:-34},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:3.5,y:-34},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                    arms:[{top:{x:4,y:-61},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:4,y:-61},middle:{x:0,y:0},bottom:{x:0,y:0}}]}
                this.graphics={
                    legs:[{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                    arms:[{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}}]}
                this.fades={eye:[1,1],skin:{legs:1,arms:1,body:1,head:1}}
                this.trigger={display:{eye:[true,true],skin:{legs:true,arms:true,body:true,head:true}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                switch(this.name){
                    case 'Management Prototype':
                        this.color={skin:{in:[80,120,120],out:[60,100,100],limb:[55,95,95]},eye:{back:[200,50,200],front:[225,75,225],glow:[150,150,255]}}
                    break
                    case 'Destructor Bot':
                        this.color={skin:{in:[160,120,120],out:[140,100,100],limb:[135,95,95]},eye:{back:[200,50,200],front:[225,75,225],glow:[150,150,255]}}
                        this.color.bomb=[125,25,0]
                        this.fades.bomb=1
                        this.trigger.display.bomb=true
                    break
                    case 'Purge X02':
                        this.color={skin:{in:[20,25,30],out:[30,35,40],limb:[25,30,35]},eye:{back:[150,25,25],front:[200,50,50],glow:[255,150,150]}}
                        this.color.hat=[80,60,80]
                        this.fades.hat=1
                        this.trigger.display.hat=true
                        this.anim.sword=1
                        this.spin.sword=75
                        this.fades.sword=1
                        this.trigger.display.extra={sword:true}
                    break
                    default:
                        this.color={skin:{in:[120,120,120],out:[100,100,100],limb:[95,95,95]},eye:{back:[50,50,200],front:[75,75,225],glow:[150,150,255]}}
                    break
                }
            break
            case 'Sentry':
                this.anim={direction:direction}
                this.color={leg:[100,100,100],body:[140,140,140],turret:[180,180,180]}
                this.graphics={arms:[{bottom:{x:0,y:-20}},{bottom:{x:0,y:-20}}]}
                this.fades={leg:1,body:1,turret:1}
                this.trigger={display:{leg:true,body:true,turret:true}}
                this.calc={int:[0,0,0,0]}
                this.goal={anim:{direction:this.anim.direction}}
            break
            case 'Flying Rock':
                this.anim={direction:direction,head:direction,eye:[0],eyeStyle:0}
                this.spin={eye:[0]}
                this.parts={eyeLevel:-46,minor:12}
                this.color={body:[80,75,70],eye:{back:[32,30,28],front:[48,45,42],glow:[240,225,210]}}
                this.fades={body:1,eye:[1]}
                this.trigger={display:{body:true,eye:[true]}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
            break
            case 'Repulsor':
                this.anim={direction:direction,body:direction}
                this.fades={skin:{body:1}}
                this.trigger={display:{skin:{body:true}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                this.color={skin:{body:[[150,200,100],[100,150,75],[50,150,0],[100,175,50],[200,255,200],[175,200,150],[175,225,125]]}}
            break
            case 'Management Autoduck':
                this.anim={direction:direction,eye:[0,0],legs:[{top:24,length:{top:10}},{top:24,length:{top:10}}],arms:[{top:54,length:{top:10}},{top:54,length:{top:10}}]}
                this.fades={eye:[1,1],beak:{main:1,mouth:1,nostril:1},skin:{legs:1,arms:1,body:1,head:1}}
                this.spin={legs:[{top:-90},{top:90}],arms:[{top:-90},{top:90}],eye:[-18,18]}
                this.parts={eyeLevel:-40,beakLevel:-31,legs:[{top:{x:3,y:-15},middle:{x:0,y:0}},{top:{x:3,y:-15},middle:{x:0,y:0}}],arms:[{top:{x:3.5,y:-25},middle:{x:0,y:0}},{top:{x:3.5,y:-25},middle:{x:0,y:0}}]}
                this.graphics={legs:[{top:{x:0,y:0},middle:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0}}],arms:[{top:{x:0,y:0},middle:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0}}]}
                this.trigger={display:{eye:[true,true],beak:{main:true,mouth:true,nostril:true},skin:{legs:true,arms:true,body:true,head:true}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                this.color={skin:{in:[120,120,120],out:[100,100,100],limb:[95,95,95]},eye:{back:[50,50,200],front:[75,75,225],glow:[150,150,255]}}
            break
            case 'Bush Thing':
                this.anim={direction:direction,eye:[0,0],arms:[{top:54,length:{top:15}},{top:54,length:{top:15}}]}
                this.fades={eye:[1,1],skin:{arms:1,body:1}}
                this.spin={arms:[{top:-90},{top:90}],eye:[-24,24]}
                this.parts={eyeLevel:-24,arms:[{top:{x:15,y:-21},middle:{x:0,y:0}},{top:{x:15,y:-21},middle:{x:0,y:0}}]}
                this.graphics={arms:[{top:{x:0,y:0},middle:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0}}]}
                this.trigger={display:{eye:[true,true],skin:{arms:true,body:true}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                this.color={eye:{back:[255,0,0]},skin:{body:[40,120,40],arms:[30,90,30]}}
            break
            case 'Fireball':
                this.anim={direction:direction,eye:[0,0],arms:[{top:54,length:{top:10}},{top:54,length:{top:10}}]}
                this.fades={eye:[1,1],skin:{arms:1,body:1}}
                this.spin={arms:[{top:-90},{top:90}],eye:[-24,24]}
                this.parts={eyeLevel:-24,arms:[{top:{x:12,y:-21},middle:{x:0,y:0}},{top:{x:12,y:-21},middle:{x:0,y:0}}]}
                this.graphics={arms:[{top:{x:0,y:0},middle:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0}}]}
                this.trigger={display:{eye:[true,true],skin:{arms:true,body:true}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                this.color={eye:{back:[50,0,0]},skin:{body:[240,140,40],arms:[235,135,35]}}
            break
            case 'Dead Shell':
                this.anim={direction:direction,head:direction,mouth:{x:30,y:18,open:1}}
                this.spin={legs:[-120,-60,60,120],mouth:180}
                this.parts={mouth:-21,minor:30}
                this.fades={eye:[1,1],mouth:1,skin:{legs:1,body:1}}
                this.trigger={display:{mouth:true,eye:[true,true],skin:{legs:true,body:true}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                this.color={skin:{body:[175,180,120],legs:[210,120,95]},mouth:{in:[90,40,75],out:[0,0,0]}}
            break
            case 'Management Drone':
                this.anim={direction:direction,head:direction,eye:[0,0],eyeStyle:[0,0]}
                this.spin={eye:[-18,18]}
                this.parts={eyeLevel:-63,minor:22}
                this.fades={eye:[1,1],skin:{body:1}}
                this.trigger={display:{eye:[true,true],skin:{body:true}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                this.color={skin:{in:[120,120,120],out:[100,100,100],limb:[95,95,95]},eye:{back:[50,50,200],front:[75,75,225],glow:[150,150,255]}}
            break
            case 'Personnel Carrier':
                this.anim={direction:direction}
                this.fades={wheel:1,body:1,window:1}
                this.trigger={display:{wheel:true,body:true,window:true}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                this.color={in:[120,120,120],out:[100,100,100],window:[75,75,225]}
            break
            case 'Executive':
                this.anim={direction:direction,head:direction,mouth:{x:11,y:7,open:0},eye:[0,0],eyeStyle:[0,0],
                    legs:[{top:9,bottom:0,length:{top:17,bottom:17}},{top:9,bottom:0,length:{top:17,bottom:17}}],
                    arms:[{top:24,bottom:9,length:{top:17,bottom:17}},{top:24,bottom:9,length:{top:17,bottom:17}}]}
                this.spin={legs:[{top:-60,bottom:-120},{top:60,bottom:120}],arms:[{top:-93,bottom:-75,lock:0},{top:93,bottom:75,lock:0}],eye:[-18,18],mouth:216}
                this.parts={eyeLevel:-84,mouth:-73,minor:21,
                    legs:[{top:{x:3.5,y:-34},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:3.5,y:-34},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                    arms:[{top:{x:4,y:-61},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:4,y:-61},middle:{x:0,y:0},bottom:{x:0,y:0}}]}
                this.graphics={
                    legs:[{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                    arms:[{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}}]}
                this.fades={eye:[1,1],mouth:1,skin:{legs:1,arms:1,body:1,head:1}}
                this.trigger={display:{mouth:true,eye:[true,true],skin:{legs:true,arms:true,body:true,head:true}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                this.color={skin:{head:[240,220,180],body:[20,60,80],legs:[15,55,75],arms:[215,215,215]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                this.color.skin.upperBody=[220,220,220]
                this.color.tie=[[80,100,160]]
                this.fades.tie=1
                this.trigger.display.tie=true
            break
            case 'Mechanized':
                this.anim={direction:direction,head:direction,mouth:{x:8,y:5,open:0},eye:[0,0],eyeStyle:[0,0],
                    legs:[{top:9,bottom:0,length:{top:17,bottom:17}},{top:9,bottom:0,length:{top:17,bottom:17}}],
                    arms:[{top:24,bottom:9,length:{top:17,bottom:17}},{top:24,bottom:9,length:{top:17,bottom:17}}]}
                this.spin={legs:[{top:-60,bottom:-120},{top:60,bottom:120}],arms:[{top:-93,bottom:-75,lock:0},{top:93,bottom:75,lock:0}],eye:[-18,18],mouth:216}
                this.parts={eyeLevel:-84,mouth:-76,minor:15,
                    legs:[{top:{x:4.5,y:-34},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:4.5,y:-34},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                    arms:[{top:{x:12,y:-66},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:12,y:-66},middle:{x:0,y:0},bottom:{x:0,y:0}}]}
                this.graphics={
                    legs:[{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                    arms:[{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}}]}
                this.fades={eye:[1,1],mouth:1,skin:{legs:1,arms:1,body:1,head:1}}
                this.trigger={display:{mouth:true,eye:[true,true],skin:{legs:true,arms:true,body:true,head:true}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                this.color={skin:{in:[120,120,120],out:[100,100,100],limb:[95,95,95],head:[240,220,180]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
            break
            case 'Louse':
                this.anim={direction:direction}
                this.fades={antenna:1,body:1}
                this.trigger={display:{antenna:true,body:true}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                this.color={antenna:[225,120,100],body:[[145,170,85],[215,230,5]]}
            break
            case 'Fungling':
                this.anim={direction:direction,head:direction,eye:[1,1],eyeStyle:[1,1],arms:[{top:54,length:{top:14}},{top:54,length:{top:14}}],mouth:{x:8,y:5,open:0}}
                this.fades={eye:[1,1],mouth:1,skin:{arms:1,body:1,tumor:1}}
                this.spin={arms:[{top:-90},{top:90}],eye:[-33,33],mouth:216}
                this.parts={eyeLevel:-24,mouth:-15,minor:18,arms:[{top:{x:12,y:-21},middle:{x:0,y:0}},{top:{x:12,y:-21},middle:{x:0,y:0}}]}
                this.graphics={arms:[{top:{x:0,y:0},middle:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0}}]}
                this.trigger={display:{eye:[true,true],mouth:true,skin:{arms:true,body:true,tumor:true}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                this.color={eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]},skin:{body:[165,160,150],arms:[125,130,125],tumor:[50,70,80]}}
            break
            case 'Hwurmp': case 'Antihwurmp':
                this.fades={eye:[1,1],mouth:1,body:1}
                this.parts={eyeLevel:-27}
                this.trigger={display:{eye:[true,true],mouth:true,body:true}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.color={eye:{back:[205,135,55]},mouth:[255,155,65],body:[255,205,65]}
                switch(this.name){
                    case 'Hwurmp':
                        this.anim={direction:direction,eye:[0,0],body:1}
                        this.spin={eye:[-24,24]}
                    break
                    case 'Antihwurmp':
                        this.anim={direction:direction,eye:[0,0],body:2}
                        this.spin={eye:[-36,36]}
                    break
                }
                this.goal={anim:{direction:this.anim.direction}}
            break
            case 'Bee':
                this.anim={direction:direction,arms:[{top:54,length:{top:3}},{top:54,length:{top:3}}]}
                this.fades={skin:{arms:1,body:1}}
                this.spin={arms:[{top:-90},{top:90}]}
                this.parts={arms:[{top:{x:3,y:-18},middle:{x:0,y:0}},{top:{x:3,y:-18},middle:{x:0,y:0}}]}
                this.graphics={arms:[{top:{x:0,y:0},middle:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0}}]}
                this.trigger={display:{skin:{arms:true,body:true}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                this.color={skin:{body:[250,200,50],arms:[20,20,20]}}
            break
            case 'Pixie':
                this.anim={direction:direction,arms:[{top:54,length:{top:4}},{top:54,length:{top:4}}]}
                this.fades={skin:{arms:1,body:1},glow:1}
                this.spin={arms:[{top:-90},{top:90}]}
                this.parts={arms:[{top:{x:4,y:-23},middle:{x:0,y:0}},{top:{x:4,y:-23},middle:{x:0,y:0}}]}
                this.graphics={arms:[{top:{x:0,y:0},middle:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0}}]}
                this.trigger={display:{skin:{arms:true,body:true},glow:true}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                this.color={skin:{body:[100,200,230],arms:[150,200,230]},glow:[200,230,255]}
            break
            case 'Glimerrer':
                this.anim={direction:direction,eye:[0,0]}
                this.spin={eye:[-12,12]}
                this.fades={crystal:1,body:1,eye:[1,1]}
                this.parts={eyeLevel:-10}
                this.trigger={display:{crystal:true,body:true,eye:[true,true]}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                this.color={crystal:[[180,125,205],[240,170,225],[250,190,240]],body:[[20,25,50],[30,50,70]],eye:{back:[235,105,65]}}
            break
            case 'Host': case 'Host Drone':
                this.anim={direction:direction,body:0}
                this.fades={body:1}
                this.trigger={display:{body:true}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                this.color={body:[190,235,255]}
            break
            case 'Darkblot':
                this.anim={direction:direction,eye:[0,0],arms:[{top:54,length:{top:12}},{top:54,length:{top:12}}]}
                this.fades={eye:[1,1],skin:{arms:1,body:1}}
                this.spin={arms:[{top:-90},{top:90}],eye:[-24,24]}
                this.parts={eyeLevel:-6,arms:[{top:{x:12,y:-12},middle:{x:0,y:0}},{top:{x:12,y:-12},middle:{x:0,y:0}}]}
                this.graphics={arms:[{top:{x:0,y:0},middle:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0}}]}
                this.trigger={display:{eye:[true,true],skin:{arms:true,body:true}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                this.color={eye:{back:[120,240,60]},skin:{body:[40,60,40],arms:[30,45,30]}}
                this.progress=0
            break
            case 'Managerial':
                this.anim={direction:direction,head:direction,mouth:{x:8,y:5,open:0},eye:[0,0],eyeStyle:[0,0],
                    legs:[{top:9,bottom:0,length:{top:20,bottom:20}},{top:9,bottom:0,length:{top:20,bottom:20}}],
                    arms:[{top:24,bottom:9,length:{top:20,bottom:20}},{top:24,bottom:9,length:{top:20,bottom:20}}]}
                this.spin={legs:[{top:-60,bottom:-120},{top:60,bottom:120}],arms:[{top:-93,bottom:-75,lock:0},{top:93,bottom:75,lock:0}],eye:[-18,18],mouth:216,sword:0}
                this.color={skin:{head:[240,220,180],body:[10,10,10],legs:[15,15,15],arms:[15,15,15]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                this.parts={eyeLevel:-81,mouth:-73,minor:15,
                    legs:[{top:{x:3.5,y:-36},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:3.5,y:-36},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                    arms:[{top:{x:4,y:-64},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:4,y:-64},middle:{x:0,y:0},bottom:{x:0,y:0}}]}
                this.graphics={
                    legs:[{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                    arms:[{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}}]}
                this.fades={eye:[1,1],mouth:1,skin:{legs:1,arms:1,body:1,head:1},helmet:1,visor:1,belt:1,badge:1}
                this.trigger={display:{mouth:true,eye:[true,true],skin:{legs:true,arms:true,body:true,head:true},extra:{damage:false}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0,hand:0,foot:0}
                this.goal={anim:{direction:this.anim.direction,sword:false}}
            break
            default:
                this.anim={direction:direction,head:direction,mouth:{x:8,y:5,open:0},eye:[0,0],eyeStyle:[0,0],
                    legs:[{top:9,bottom:0,length:{top:17,bottom:17}},{top:9,bottom:0,length:{top:17,bottom:17}}],
                    arms:[{top:24,bottom:9,length:{top:17,bottom:17}},{top:24,bottom:9,length:{top:17,bottom:17}}]}
                this.spin={legs:[{top:-60,bottom:-120},{top:60,bottom:120}],arms:[{top:-93,bottom:-75,lock:0},{top:93,bottom:75,lock:0}],eye:[-18,18],mouth:216}
                this.parts={eyeLevel:-78,mouth:-70,minor:15,
                    legs:[{top:{x:3.5,y:-34},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:3.5,y:-34},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                    arms:[{top:{x:4,y:-61},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:4,y:-61},middle:{x:0,y:0},bottom:{x:0,y:0}}]}
                this.graphics={
                    legs:[{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0}}],
                    arms:[{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}},{top:{x:0,y:0},middle:{x:0,y:0},bottom:{x:0,y:0},topStack:{x:0,y:0},middleStack:{x:0,y:0},bottomStack:{x:0,y:0}}]}
                this.fades={eye:[1,1],mouth:1,skin:{legs:1,arms:1,body:1,head:1}}
                this.trigger={display:{mouth:true,eye:[true,true],skin:{legs:true,arms:true,body:true,head:true}}}
                this.calc={int:[0,0,0,0]}
                this.animSet={loop:0,flip:0}
                this.goal={anim:{direction:this.anim.direction}}
                switch(this.name){
                    case 'Bouncer':
                        this.color={skin:{head:[240,220,180],body:[200,200,200],legs:[195,195,195],arms:[205,205,205]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.belt=[255,50,50]
                        this.fades.belt=1
                        this.trigger.display.belt=true
                    break
                    case 'Thug':
                        this.color={skin:{head:[160,60,60],body:[150,50,50],legs:[145,45,45],arms:[155,55,55]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.eyeHole=[240,220,180]
                    break
                    case 'Biker':
                        this.color={skin:{head:[240,220,180],body:[225,25,25],legs:[220,20,20],arms:[230,30,30]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.hat=[200,0,0]
                        this.color.goggles=[255,255,255]
                        this.fades.hat=1
                        this.fades.goggles=0.6
                        this.trigger.display.hat=true
                        this.trigger.display.goggles=true
                    break
                    case 'Drunk':
                        this.color={skin:{head:[240,220,180],body:[120,60,20],legs:[120,60,20],arms:[120,60,20]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.belt=[90,45,15]
                        this.color.bottle=[60,30,15]
                        this.fades.belt=1
                        this.fades.bottle=1
                        this.trigger.display.belt=true
                        this.trigger.display.bottle=true
                    break
                    case 'Trenchcoat': case 'Trenchcoat Gunner':
                        this.color={skin:{head:[240,220,180],body:[25,25,25],legs:[20,20,20],arms:[120,100,60]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.tie=[[240,240,240],[200,50,50]]
                        this.color.coat=[115,95,55]
                        this.color.hat=[10,10,10]
                        this.fades.tie=1
                        this.fades.coat=1
                        this.fades.hat=1
                        this.trigger.display.tie=true
                        this.trigger.display.coat=true
                        this.trigger.display.hat=true
                    break
                    case 'Goon':
                        this.color={skin:{head:[160,60,60],body:[150,50,50],legs:[145,45,45],arms:[155,55,55]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.eyeHole=[240,220,180]
                        this.anim.sword=1
                        this.spin.sword=75
                        this.fades.sword=1
                        this.trigger.display.extra={sword:true}
                    break
                    case 'Slaver':
                        this.color={skin:{head:[240,220,180],body:[50,125,150],legs:[40,115,140],arms:[35,110,135]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.anim.sword=1
                        this.spin.sword=75
                        this.fades.sword=1
                        this.trigger.display.extra={sword:true}
                    break
                    case 'Romeo':
                        this.color={skin:{head:[240,220,180],body:[50,150,200],legs:[50,150,200],arms:[200,50,50]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.skin.upperBody=[200,50,50]
                        this.anim.sword=1
                        this.spin.sword=75
                        this.fades.sword=1
                        this.trigger.display.extra={sword:true}
                    break
                    case 'Billy Beatup':
                        this.color={skin:{head:[240,220,180],body:[60,80,100],legs:[60,80,100],arms:[240,220,180]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.skin.upperBody=[160,160,160]
                        this.color.logo=[150,50,50]
                        this.color.band=[100,75,75]
                        this.fades.logo=1
                        this.fades.band=1
                        this.trigger.display.logo=true
                        this.trigger.display.band=true
                    break
                    case 'Cartel':
                        this.color={skin:{head:[240,220,180],body:[200,160,80],legs:[190,150,70],arms:[195,155,75]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.neck=[150,75,75]
                        this.color.bandana=[200,100,100]
                        this.color.sunglasses=[0,0,0]
                        this.fades.neck=1
                        this.fades.bandana=1
                        this.fades.sunglasses=1
                        this.trigger.display.neck=true
                        this.trigger.display.bandana=true
                        this.trigger.display.sunglasses=true
                    break
                    case 'Gangster': case 'Gangster Gunner':
                        this.color={skin:{head:[240,220,180],body:[240,240,240],legs:[75,55,75],arms:[235,235,235]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.overall=[80,60,80]
                        this.color.hat=[70,50,70]
                        this.fades.overall=1
                        this.fades.hat=1
                        this.trigger.display.overall=true
                        this.trigger.display.hat=true
                    break
                    case 'Ninja':
                        this.color={skin:{head:[130,205,130],body:[125,200,125],legs:[120,200,120],arms:[115,195,115]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.eyeHole=[240,220,180]
                        this.color.belt=[75,150,75]
                        this.fades.belt=1
                        this.trigger.display.belt=true
                    break
                    case 'Red':
                        this.color={skin:{head:[240,220,180],body:[120,110,100],legs:[115,105,95],arms:[110,100,90]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.belt=[80,70,60]
                        this.color.hat=[[60,50,40],[200,25,25],[255,225,25],[200,25,25]]
                        this.fades.belt=1
                        this.fades.hat=1
                        this.trigger.display.belt=true
                        this.trigger.display.hat=true
                    break
                    case 'Batter':
                        this.color={skin:{head:[240,220,180],body:[240,240,240],legs:[75,55,75],arms:[235,235,235]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.overall=[80,60,80]
                        this.color.hat=[70,50,70]
                        this.fades.overall=1
                        this.fades.hat=1
                        this.trigger.display.overall=true
                        this.trigger.display.hat=true
                        this.anim.sword=1
                        this.spin.sword=75
                        this.fades.sword=1
                        this.trigger.display.extra={sword:true}
                    break
                    case 'Slippery Gangster':
                        this.color={skin:{head:[240,220,180],body:[80,60,80],legs:[75,55,75],arms:[70,50,70]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.sunglasses=[0,0,0]
                        this.fades.sunglasses=1
                        this.trigger.display.sunglasses=true
                    break
                    case 'Moss Creature':
                        this.color={skin:{head:[45,85,45],body:[40,80,40],legs:[35,75,35],arms:[35,75,35]},eye:{back:[200,150,0],front:[225,150,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.eyeHole=[0,0,0]
                        this.fades.eyeHole=1
                        this.trigger.display.eyeHole=true
                    break
                    case 'Roger Reviv':
                        this.color={skin:{head:[240,220,180],body:[80,160,200],legs:[70,150,190],arms:[75,155,195]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.neck=[75,75,150]
                        this.color.bandana=[100,100,200]
                        this.color.sunglasses=[0,0,0]
                        this.color.headset=[100,100,100]
                        this.fades.neck=1
                        this.fades.bandana=1
                        this.fades.sunglasses=1
                        this.fades.headset=1
                        this.trigger.display.neck=true
                        this.trigger.display.bandana=true
                        this.trigger.display.sunglasses=true
                        this.trigger.display.headset=true
                    break
                    case 'Sharpshot':
                        this.color={skin:{head:[240,220,180],body:[180,180,180],legs:[170,170,170],arms:[175,175,175]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.hat=[2300,160,40]
                        this.color.belt=[[120,80,40],[60,40,20]]
                        this.fades.hat=1
                        this.fades.belt=1
                        this.trigger.display.hat=true
                        this.trigger.display.belt=true
                    break
                    case 'Slow King':
                        this.size=1.2
                        this.color={skin:{head:[20,75,20],body:[25,25,25],legs:[20,20,20],arms:[15,15,15]},eye:{back:[160,0,100],front:[180,20,120],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.cape=[5,5,5]
                        this.color.shield=[180,20,120]
                        this.fades.cape=1
                        this.fades.shield=0
                        this.trigger.display.cape=true
                        this.trigger.display.tumor=true
                        this.trigger.display.shield=true
                    break
                    case 'Nerfer':
                        this.color={skin:{head:[240,220,180],body:[200,150,150],legs:[190,140,140],arms:[180,130,130]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.arrows=[[200,0,0],[0,150,255],[255,255,50]]
                        this.fades.arrows=1
                        this.trigger.display.arrows=true
                    break
                    case 'Buffer':
                        this.color={skin:{head:[240,220,180],body:[150,200,200],legs:[140,190,190],arms:[130,180,180]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.arrows=[[200,0,0],[0,150,255],[255,255,50]]
                        this.fades.arrows=1
                        this.trigger.display.arrows=true
                    break
                    case 'Scrapper':
                        this.color={skin:{head:[240,220,180],body:[120,120,120],legs:[115,115,115],arms:[110,110,110]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.belt=[[100,100,100],[60,60,60],[80,80,80]]
                        this.color.goggles=[200,200,200]
                        this.fades.belt=1
                        this.fades.goggles=0.6
                        this.trigger.display.belt=true
                        this.trigger.display.goggles=true
                    break
                    case 'Looter':
                        this.color={skin:{head:[240,220,180],body:[40,60,80],legs:[50,75,100],arms:[50,75,100]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.bandana=[[200,100,50],[160,80,40]]
                        this.fades.bandana=1
                        this.trigger.display.bandana=1
                    break
                    case 'Mugger':
                        this.color={skin:{head:[30,35,40],body:[80,60,40],legs:[100,75,50],arms:[100,75,50]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.eyeHole=[240,220,180]
                    break
                    case 'Capitalist':
                        this.color={skin:{head:[240,220,180],body:[20,20,20],legs:[15,15,15],arms:[15,15,15]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.tie=[[200,200,200],[200,100,50]]
                        this.color.hat=[40,40,40]
                        this.fades.tie=1
                        this.fades.hat=1
                        this.trigger.display.tie=true
                        this.trigger.display.hat=true
                    break
                    case 'Bodyguard':
                        this.color={skin:{head:[240,220,180],body:[20,20,20],legs:[15,15,15],arms:[15,15,15]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.tie=[[200,200,200],[200,100,50]]
                        this.color.sunglasses=[0,0,0]
                        this.fades.tie=1
                        this.fades.sunglasses=1
                        this.trigger.display.tie=true
                        this.trigger.display.sunglasses=true
                    break
                    case 'Management Soldier':
                        this.color={skin:{head:[240,220,180],body:[95,105,110],legs:[65,85,85],arms:[85,135,195]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.belt=[30,25,0]
                        this.color.helmet=[80,85,90]
                        this.color.visor=[65,130,140]
                        this.fades.belt=1
                        this.fades.helmet=1
                        this.fades.visor=1
                        this.trigger.display.belt=true
                        this.trigger.display.helmet=true
                        this.trigger.display.visor=true
                    break
                    case 'Management Officer':
                        this.color={skin:{head:[240,220,180],body:[100,100,100],legs:[95,95,95],arms:[95,95,95]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.belt=[60,60,60]
                        this.color.badge=[[50,50,200],[75,75,225]]
                        this.color.glasses=[[40,40,40],[255,255,255]]
                        this.fades.belt=1
                        this.fades.badge=1
                        this.fades.glasses=1
                        this.trigger.display.belt=true
                        this.trigger.display.badge=true
                        this.trigger.display.glasses=true
                    break
                    case 'Management Special Forces':
                        this.color={skin:{head:[240,220,180],body:[85,90,90],legs:[75,80,80],arms:[80,85,85]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.belt=[80,75,50]
                        this.color.helmet=[50,55,60]
                        this.color.visor=[100,150,200]
                        this.fades.belt=1
                        this.fades.helmet=1
                        this.fades.visor=1
                        this.trigger.display.belt=true
                        this.trigger.display.helmet=true
                        this.trigger.display.visor=true
                    break
                    case 'Deployer':
                        this.color={skin:{head:[240,220,180],body:[10,50,10],legs:[15,55,15],arms:[20,60,20]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.belt=[50,45,50]
                        this.color.glasses=[[60,60,60],[200,200,200]]
                        this.fades.belt=1
                        this.fades.glasses=1
                        this.trigger.display.belt=true
                        this.trigger.display.glasses=true
                    break
                    case 'Chief Deployer':
                        this.color={skin:{head:[240,220,180],body:[20,30,40],legs:[25,35,45],arms:[30,40,50]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.belt=[60,70,80]
                        this.color.glasses=[[60,60,60],[255,150,150]]
                        this.fades.belt=1
                        this.fades.glasses=1
                        this.trigger.display.belt=true
                        this.trigger.display.glasses=true
                    break
                    case 'Lunar Dust':
                        this.color={skin:{head:[180,125,255],body:[150,95,225],legs:[145,90,220],arms:[145,90,220]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.outline=[30,15,35]
                        this.fades.outline=1
                        this.trigger.display.outline=true
                        this.size=0.8
                    break
                    case 'Lunar Shard':
                        this.color={skin:{head:[50,25,55],body:[35,20,40],legs:[30,15,35],arms:[30,15,35]},eye:{back:[225,75,225],front:[255,90,255],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.moon=[[255,255,255],[255,235,235]]
                        this.color.band=[255,120,255]
                        this.fades.moon=1
                        this.fades.band=1
                        this.trigger.display.moon=true
                        this.trigger.display.band=true
                    break
                    case 'Solar Shard':
                        this.color={skin:{head:[80,55,85],body:[65,50,70],legs:[60,45,65],arms:[60,45,65]},eye:{back:[225,135,225],front:[255,150,255],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.sun=[255,145,70]
                        this.color.band=[255,180,255]
                        this.fades.sun=1
                        this.fades.band=1
                        this.trigger.display.sun=true
                        this.trigger.display.band=true
                        this.size=1.1
                    break
                    case 'Management Sniper':
                        this.color={skin:{head:[240,220,180],body:[125,140,135],legs:[95,115,115],arms:[115,225,165]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.belt=[30,25,0]
                        this.color.helmet=[80,90,95]
                        this.color.visor=[240,230,65]
                        this.color.monocle=[150,255,150]
                        this.fades.belt=1
                        this.fades.helmet=1
                        this.fades.visor=1
                        this.fades.monocle=1
                        this.trigger.display.belt=true
                        this.trigger.display.helmet=true
                        this.trigger.display.visor=true
                        this.trigger.display.monocle=true
                    break
                    case 'Management Caller':
                        this.color={skin:{head:[240,220,180],body:[200,200,200],legs:[195,195,195],arms:[195,195,195]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.belt=[160,160,160]
                        this.color.badge=[[200,200,50],[225,225,75]]
                        this.color.glasses=[[40,40,40],[255,255,255]]
                        this.fades.belt=1
                        this.fades.badge=1
                        this.fades.glasses=1
                        this.trigger.display.belt=true
                        this.trigger.display.badge=true
                        this.trigger.display.glasses=true
                    break
                    case 'Management Custodian':
                        this.color={skin:{head:[240,220,180],body:[160,160,160],legs:[85,85,65],arms:[195,135,85]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.belt=[120,120,120]
                        this.color.hat=[220,220,60]
                        this.fades.belt=1
                        this.fades.hat=1
                        this.trigger.display.belt=true
                        this.trigger.display.hat=true
                    break
                    case 'Walker Driver':
                        this.color={skin:{head:[240,220,180],body:[185,180,165],legs:[180,175,160],arms:[180,175,160]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.belt=[30,25,0]
                        this.color.helmet=[120,135,95]
                        this.color.visor=[10,10,10]
                        this.fades.belt=1
                        this.fades.helmet=1
                        this.fades.visor=1
                        this.trigger.display.belt=true
                        this.trigger.display.helmet=true
                        this.trigger.display.visor=true
                    break
                    case 'Prisoner':
                        this.color={skin:{head:[240,220,180],body:[225,155,25],legs:[220,150,20],arms:[215,145,15]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.belt=[230,230,230]
                        this.fades.belt=1
                        this.trigger.display.belt=true
                    break
                    case 'Prison Guard':
                        this.color={skin:{head:[240,220,180],body:[175,100,0],legs:[170,95,0],arms:[165,90,0]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.belt=[[70,70,70],[60,60,60]]
                        this.color.armor=[80,80,80]
                        this.color.helmet=[100,100,100]
                        this.color.visor=[200,200,200]
                        this.fades.belt=1
                        this.fades.armor=1
                        this.fades.helmet=1
                        this.fades.visor=1
                        this.trigger.display.belt=true
                        this.trigger.display.armor=true
                        this.trigger.display.helmet=true
                        this.trigger.display.visor=true
                    break
                    case 'Lightspeed':
                        this.color={skin:{head:[40,80,120],body:[20,40,60],legs:[15,35,55],arms:[15,35,55]},eye:{back:[100,200,255],front:[150,225,255],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.wing=[200,255,255]
                        this.fades.wing=1
                        this.trigger.display.wing=true
                    break
                    case 'Swordmaster':
                        this.color={skin:{head:[240,220,180],body:[50,100,75],legs:[40,80,60],arms:[40,80,60]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.helmet=[60,120,90]
                        this.color.belt=[70,140,105]
                        this.fades.helmet=1
                        this.fades.belt=1
                        this.trigger.display.helmet=true
                        this.trigger.display.belt=true
                        this.anim.sword=1
                        this.spin.sword=75
                        this.fades.sword=1
                        this.trigger.display.extra={sword:true}
                    break
                    case 'Gas Man':
                        this.color={skin:{head:[240,220,180],body:[160,140,120],legs:[150,130,110],arms:[145,125,105]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.belt=[120,100,80]
                        this.color.helmet=[80,40,40]
                        this.color.visor=[200,50,50]
                        this.fades.belt=1
                        this.fades.helmet=1
                        this.fades.visor=1
                        this.trigger.display.can=true
                        this.trigger.display.belt=true
                        this.trigger.display.helmet=true
                        this.trigger.display.visor=true
                    break
                    case 'Champion':
                        this.color={skin:{head:[200,200,200],body:[160,160,160],legs:[150,150,150],arms:[140,140,140]},eye:{back:[255,255,255],front:[255,255,255],glow:[0,0,0]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.anim.eye=[1,1]
                        this.anim.eyeStyle=[3,3]
                        this.color.hat=[180,180,180]
                        this.fades.hat=1
                        this.trigger.display.hat=true
                        this.anim.sword=1
                        this.spin.sword=75
                        this.fades.sword=1
                        this.trigger.display.extra={sword:true}
                    break
                    case 'Ninja Master':
                        this.color={skin:{head:[50,125,50],body:[45,120,45],legs:[40,120,40],arms:[35,115,35]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.eyeHole=[240,220,180]
                        this.color.belt=[[240,240,240],[0,0,0]]
                        this.fades.belt=1
                        this.trigger.display.belt=true
                    break
                    case 'Intern':
                        this.size=0.7
                        this.color={skin:{head:[240,220,180],body:[80,60,40],legs:[70,50,30],arms:[170,200,230]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.skin.upperBody=[180,210,240]
                        this.color.glasses=[[120,120,120],[220,220,220]]
                        this.fades.glasses=1
                        this.trigger.display.glasses=true
                    break
                    case 'Assistant Hiring Officer':
                        this.color={skin:{head:[240,220,180],body:[180,150,120],legs:[170,140,110],arms:[50,70,90]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.skin.upperBody=[40,60,80]
                        this.color.tie=[[180,200,220],[255,225,50]]
                        this.fades.tie=1
                        this.trigger.display.clipboard=true
                        this.trigger.display.tie=true
                    break
                    case 'Gangster Machinegunner':
                        this.color={skin:{head:[240,220,180],body:[240,240,240],legs:[75,55,75],arms:[235,235,235]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.overall=[80,60,80]
                        this.color.hat=[70,50,70]
                        this.color.sunglasses=[60,50,40]
                        this.fades.overall=1
                        this.fades.hat=1
                        this.fades.sunglasses=1
                        this.trigger.display.overall=true
                        this.trigger.display.hat=true
                        this.trigger.display.sunglasses=true
                    break
                    case 'Bolt':
                        this.color={skin:{head:[200,255,255],body:[175,255,255],legs:[125,255,255],arms:[150,255,255]},eye:{back:[255,255,255],front:[255,255,255],glow:[0,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.size=0.8
                        this.color.shock=[100,255,255]
                        this.trigger.display.shock=true
                        this.shocks=[]
                    break
                    case 'Jet':
                        this.color={skin:{head:[240,220,180],body:[240,240,200],legs:[220,220,180],arms:[230,230,190]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.belt=[120,70,20]
                        this.color.goggles=[50,150,200]
                        this.color.pack=[[160,160,160]]
                        this.fades.belt=1
                        this.fades.goggles=0.4
                        this.fades.pack=1
                        this.trigger.display.belt=true
                        this.trigger.display.goggles=true
                        this.trigger.display.pack=true
                        this.offset.position.y-=10
                    break
                    case 'Armored Ninja':
                        this.color={skin:{head:[30,75,30],body:[25,70,25],legs:[20,65,20],arms:[15,60,15]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.eyeHole=[240,220,180]
                        this.color.belt=[0,40,0]
                        this.color.helmet=[40,100,40]
                        this.fades.belt=1
                        this.fades.helmet=1
                        this.trigger.display.belt=true
                        this.trigger.display.helmet=true
                    break
                    case 'Assistant Fitness Officer':
                        this.color={skin:{head:[240,220,180],body:[120,140,160],legs:[110,130,150],arms:[20,40,60]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.skin.upperBody=[15,35,55]
                        this.color.tie=[[235,210,160],[200,125,50]]
                        this.fades.tie=1
                        this.trigger.display.tie=true
                        this.trigger.display.muscles=true
                        this.size=0.75
                    break
                    case 'Corrupt Detective':
                        this.color={skin:{head:[240,220,180],body:[60,60,55],legs:[55,55,50],arms:[115,105,95]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.skin.upperBody=[110,115,100]
                        this.color.tie=[[190,190,180],[110,110,110]]
                        this.color.coat=[120,110,100]
                        this.color.hat=[[85,80,70],[170,160,150]]
                        this.fades.tie=1
                        this.fades.coat=1
                        this.fades.hat=1
                        this.trigger.display.tie=true
                        this.trigger.display.coat=true
                        this.trigger.display.hat=true
                    break
                    case 'Riot Police':
                        this.color={skin:{head:[240,220,180],body:[50,50,60],legs:[40,40,50],arms:[45,45,55]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.belt=[20,60,120]
                        this.color.helmet=[40,50,80]
                        this.color.visor=[240,150,60]
                        this.color.shield=[[20,20,30],[50,150,255]]
                        this.fades.belt=1
                        this.fades.helmet=1
                        this.fades.visor=1
                        this.fades.shield=1
                        this.trigger.display.belt=true
                        this.trigger.display.helmet=true
                        this.trigger.display.visor=true
                        this.trigger.display.shield=true
                    break
                    case 'Reichswehr':
                        this.color={skin:{head:[240,220,180],body:[80,100,80],legs:[70,90,70],arms:[75,95,75]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.pocket=[60,80,60]
                        this.color.helmet=[[30,30,30],[240,240,240]]
                        this.fades.pocket=1
                        this.fades.helmet=1
                        this.trigger.display.pocket=true
                        this.trigger.display.helmet=true
                    break
                    case 'Beekeeper':
                        this.color={skin:{head:[240,220,180],body:[200,160,20],legs:[180,140,0],arms:[190,150,10]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.helmet=[[200,200,0],[180,180,160]]
                        this.color.belt=[120,120,40]
                        this.fades.helmet=1
                        this.fades.belt=1
                        this.trigger.display.helmet=true
                        this.trigger.display.belt=true
                    break
                    case 'PhD':
                        this.color={skin:{head:[240,220,180],body:[80,60,40],legs:[70,50,30],arms:[110,140,170]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.skin.upperBody=[120,150,180]
                        this.color.glasses=[[40,40,40],[160,200,240]]
                        this.color.button=[120,120,60]
                        this.color.coat=[190,200,190]
                        this.fades.glasses=1
                        this.fades.button=1
                        this.fades.coat=1
                        this.trigger.display.glasses=true
                        this.trigger.display.button=true
                        this.trigger.display.coat=true
                    break
                    case 'Prestige':
                        this.color={skin:{head:[80,90,100],body:[60,70,80],legs:[50,60,70],arms:[70,80,90]},eye:{back:[255,255],front:[255,255,255],glow:[0,0,0]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.hex=[255,255,255]
                        this.fades.hex=1
                        this.trigger.display.hex=true
                    break
                    case 'Junkie':
                        this.color={skin:{head:[240,220,180],body:[90,60,30],legs:[120,80,40],arms:[120,80,40]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.coat=[150,100,50]
                        this.color.hat=[170,170,170]
                        this.fades.coat=1
                        this.fades.hat=1
                        this.trigger.display.coat=true
                        this.trigger.display.hat=true
                    break
                    case 'Coffee Commander':
                        this.color={skin:{head:[240,220,180],body:[40,40,40],legs:[30,30,30],arms:[30,30,30]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.helmet=[40,40,40]
                        this.color.visor=[255,125,50]
                        this.color.tie=[[200,200,200],[0,0,0]]
                        this.color.belt=[180,180,180]
                        this.color.badge=[240,240,240]
                        this.color.band=[160,80,0]
                        this.fades.helmet=1
                        this.fades.visor=1
                        this.fades.tie=1
                        this.fades.belt=1
                        this.fades.badge=1
                        this.fades.band=1
                        this.trigger.display.helmet=true
                        this.trigger.display.visor=true
                        this.trigger.display.tie=true
                        this.trigger.display.belt=true
                        this.trigger.display.badge=true
                        this.trigger.display.band=true
                    break
                    case 'Comrade':
                        this.color={skin:{head:[240,220,180],body:[120,110,100],legs:[115,105,95],arms:[110,100,90]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.belt=[80,70,60]
                        this.color.hat=[[60,50,40],[200,25,25],[255,225,25],[200,25,25]]
                        this.color.moustache=[120,120,120]
                        this.color.badge=[[255,175,0],[255,225,0]]
                        this.fades.belt=1
                        this.fades.hat=1
                        this.fades.moustache=1
                        this.fades.badge=1
                        this.trigger.display.belt=true
                        this.trigger.display.hat=true
                        this.trigger.display.moustache=true
                        this.trigger.display.badge=true
                    break
                    case 'Councilman':
                        this.color={skin:{head:[140,125,120],body:[35,40,45],legs:[25,30,35],arms:[30,35,40]},eye:{back:[255,250,220]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.halo=[250,240,230]
                        this.color.wing=[250,235,210]
                        this.fades.halo=1
                        this.fades.wing-1
                        this.trigger.display.halo=true
                        this.trigger.display.wing-true
                        this.size=1.2
                    break
                    case 'Shadow Trooper':
                        this.color={skin:{head:[0,0,0],body:[0,0,0],legs:[0,0,0],arms:[0,0,0]},eye:{back:[255,255,255],front:[255,255,255],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.fades.skin.head=0.2
                        this.fades.skin.body=0.2
                        this.fades.skin.legs=0.2
                        this.fades.skin.arms=0.2
                        this.trigger.display.mouth=false
                    break
                    case 'Dark Priest':
                        this.color={skin:{head:[200,210,210],body:[180,190,190],legs:[70,65,30],arms:[160,170,170]},eye:{back:[255,225,150],front:[255,250,215],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.eyeHole=[0,0,0]
                        this.color.band=[195,185,145]
                        this.fades.eyeHole=1
                        this.fades.band=1
                        this.trigger.display.eyeHole=true
                        this.trigger.display.band=true
                    break
                    case 'Soul':
                        this.color={skin:{head:[255,255,255],body:[255,255,255],legs:[255,255,255],arms:[255,255,255]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.fades.skin.head=0.5
                        this.fades.skin.body=0.4
                        this.fades.skin.legs=0.3
                        this.fades.skin.arms=0.3
                    break
                    case 'Glitch':
                        this.colorChances=[[200,0,255],[0,100,200],[0,150,255],[255,150,50],[255,75,255],[50,255,50],[125,255,125],[255,255,100],[180,180,180],[255,100,100]]
                        this.color={skin:{head:this.colorChances[floor(random(0,this.colorChances.length))],body:this.colorChances[floor(random(0,this.colorChances.length))],legs:[this.colorChances[floor(random(0,this.colorChances.length))],this.colorChances[floor(random(0,this.colorChances.length))]],arms:[this.colorChances[floor(random(0,this.colorChances.length))],this.colorChances[floor(random(0,this.colorChances.length))]]},eye:{back:[255,255,255],front:[255,255,255],glow:[255,255,255]},mouth:{in:[200,100,100],out:[255,255,255]}}
                        this.size=0.8
                    break
                    case 'Glitched Giant':
                        this.colorChances=[[200,0,255],[0,100,200],[0,150,255],[255,150,50],[255,75,255],[50,255,50],[125,255,125],[255,255,100],[180,180,180],[255,100,100]]
                        this.color={skin:{head:this.colorChances[floor(random(0,this.colorChances.length))],body:this.colorChances[floor(random(0,this.colorChances.length))],legs:[this.colorChances[floor(random(0,this.colorChances.length))],this.colorChances[floor(random(0,this.colorChances.length))]],arms:[this.colorChances[floor(random(0,this.colorChances.length))],this.colorChances[floor(random(0,this.colorChances.length))]]},eye:{back:[255,255,255],front:[255,255,255],glow:[255,255,255]},mouth:{in:[200,100,100],out:[255,255,255]}}
                        this.color.armor=[195,115,35]
                        this.color.belt=[225,145,65]
                        this.fades.armor=1
                        this.fades.belt=1
                        this.trigger.display.armor=true
                        this.trigger.display.belt=true
                    break
                    case 'Nil':
                        this.color={skin:{head:[75,75,85],body:[20,20,25],legs:[10,10,15],arms:[10,10,15]},eye:{back:[255,255,255],front:[255,255,255],glow:[100,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.cape=[[170,230,235],[250,250,250]]
                        this.fades.cape=1
                        this.trigger.display.cape=true
                        this.trigger.display.mouth=false
                    break
                    case 'Rewriter':
                        this.color={skin:{head:[220,220,225],body:[80,90,110],legs:[70,80,100],arms:[70,80,100]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.bowtie=[[150,160,180],[10,25,40]]
                        this.color.goggles=[[245,245,250],[30,30,40]]
                        this.color.hat=[170,170,175]
                        this.fades.bowtie=1
                        this.fades.goggles=1
                        this.fades.hat=1
                        this.trigger.display.bowtie=true
                        this.trigger.display.goggles=true
                        this.trigger.display.hat=true
                    break
                    case 'Buried':
                        this.color={skin:{head:[120,150,250],body:[110,70,60],legs:[100,60,50],arms:[110,140,240]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.bone=[220,220,220]
                        this.fades.bone=1
                        this.trigger.display.bone=true
                    break
                    case 'Wiz':
                        this.color={skin:{head:[240,220,180],body:[80,40,100],legs:[70,30,90],arms:[70,30,100]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.belt=[180,180,180]
                        this.color.hat=[60,20,80]
                        this.color.moustache=[90,90,90]
                        this.fades.belt=1
                        this.fades.hat=1
                        this.fades.moustache=1
                        this.trigger.display.belt=true
                        this.trigger.display.hat=true
                        this.trigger.display.moustache=true
                    break
                    case 'Rusty':
                        this.color={skin:{head:[132,72,40],body:[126,68,38],legs:[120,65,36],arms:[120,65,36]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.bar=[96,51,28]
                        this.color.rust=[[140,78,43],[150,86,47]]
                        this.fades.bar=1
                        this.fades.rust=1
                        this.trigger.display.bar=true
                        this.trigger.display.rust=true
                    break
                    case 'Tech Support':
                        this.color={skin:{head:[240,220,180],body:[30,30,30],legs:[20,20,20],arms:[20,20,20]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.sunglasses=[0,0,0]
                        this.color.headset=[80,80,80]
                        this.color.hat=[40,40,40]
                        this.color.logo=[150,150,150]
                        this.fades.sunglasses=1
                        this.fades.headset=1
                        this.fades.hat=1
                        this.fades.logo=1
                        this.trigger.display.sunglasses=true
                        this.trigger.display.headset=true
                        this.trigger.display.hat=true
                        this.trigger.display.logo=true
                    break
                    case 'Vengeful':
                        this.color={skin:{head:[30,35,45],body:[30,50,125],legs:[20,40,115],arms:[20,40,115]},eye:{back:[0,125,255],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.hat=[[145,150,235],[20,25,50]]
                        this.fades.hat=1
                        this.trigger.display.hat=true
                        this.anim.sword=1
                        this.spin.sword=75
                        this.fades.sword=1
                        this.trigger.display.extra={sword:true}
                    break
                    case 'Lunaria':
                        this.color={skin:{head:[150,120,200],body:[50,20,55],legs:[40,10,45],arms:[40,10,45]},eye:{back:[255,255,255],front:[255,255,255],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.halo=[255,245,200]
                        this.color.stars=[255,255,235]
                        this.fades.halo=1
                        this.fades.stars=1
                        this.trigger.display.halo=true
                        this.trigger.display.stars=true
                        this.color.under={under:{top:[70,40,75]}}
                        this.spin.under={under:{top:[-40,40]}}
                        this.fades.under={under:{top:1}}
                        this.trigger.display.under={under:{top:true}}
                        this.anim.sword=1
                        this.spin.sword=75
                        this.fades.sword=1
                        this.trigger.display.extra={sword:true}
                    break
                    case 'Divine Guard':
                        this.color={skin:{head:[195,195,150],body:[140,140,130],legs:[130,130,120],arms:[130,130,120]},eye:{back:[255,255,220],front:[255,255,220],glow:[255,255,255]},mouth:{in:[200,100,100],out:[255,255,220]}}
                        this.color.sphere=[255,150,150]
                        this.color.band=[150,150,140]
                        this.color.hat=[175,175,160]
                        this.fades.sphere=1
                        this.fades.band=1
                        this.fades.hat=1
                        this.trigger.display.sphere=1
                        this.trigger.display.band=1
                        this.trigger.display.hat=1
                        this.anim.sword=1
                        this.spin.sword=75
                        this.fades.sword=1
                        this.trigger.display.extra={sword:true}
                    break
                    case 'Avant Guard':
                        this.color={skin:{head:[25,30,35],body:[20,25,25],legs:[15,20,20],arms:[15,20,20]},eye:{back:[175,170,190],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                        this.color.wing=[210,215,225]
                        this.color.band=[245,195,150]
                        this.color.helmet=[30,33,366]
                        this.fades.wing=1
                        this.fades.band=1
                        this.fades.helmet=1
                        this.trigger.display.wing=true
                        this.trigger.display.band=true
                        this.trigger.display.helmet=true
                        this.anim.sword=1
                        this.spin.sword=75
                        this.fades.sword=1
                        this.trigger.display.extra={sword:true}
                    break
                    default:
                        this.color={skin:{head:[240,220,180],body:[95,95,95],legs:[90,90,90],arms:[100,100,100]},eye:{back:[0,0,0],front:[0,0,0],glow:[255,255,255]},mouth:{in:[200,100,100],out:[0,0,0]}}
                    break
                }
            break
        }
        this.base.size=this.size
        this.base.anim=this.anim
        if(this.team>0){
            this.fade=1
        }
        this.initialBuff()
    }
    reset(){
        this.size=this.base.size
        this.anim=this.base.anim
        this.block=0

        this.combo=0
        this.armed=true
        
        for(let a=0,la=this.status.main.length;a<la;a++){
            this.status.main[a]=0
            this.status.active[a]=false
            this.status.position[a]=0
            this.status.size[a]=0
        }
        this.status.display=[]
        this.infoAnim={life:1,block:0,size:1,description:0,upSize:false,intent:[],flash:[0,0,0],upFlash:[false,false,false]}
    }
    initialBuff(){
        if(this.spec.includes(5)){
            let tile=this.battle.tileManager.getTileIndex(this.tilePosition.x,this.tilePosition.y)
            if(tile>=0){
                this.battle.tileManager.tiles[tile].addType(6)
            }
        }
        if(this.spec.includes(6)){
            this.threshold=this.life-20
        }
        switch(this.name){
            case 'Orb Walker':
                this.statusEffect('Strength Per Turn',1)
            break
            case 'Gangster':
                this.statusEffect('Counter Combat',6)
            break
            case 'Slippery Gangster':
                this.statusEffect('Dodge',3)
            break
            case 'Spheron':
                this.addBlock(20)
                this.statusEffect('Retain Block',999)
            break
            case 'Enforcer':
                this.statusEffect('Strength on Hit',1)
            break
            case 'Spike Slime': case 'Big Spike Slime':
                this.statusEffect('Counter All',1)
            break
            case 'Moss Creature':
                this.statusEffect('Metallicize',2)
            break
            case 'Slow King':
                this.addBlock(60)
                this.statusEffect('Retain Block',999)
            break
            case 'Donu': case 'Deca':
                this.statusEffect('Control',2)
            break
            case 'Angry Gremlin':
                this.statusEffect('Strength on Hit',1)
            break
            case 'Solar Shard':
                this.statusEffect('Vulnerable on Kill',4)
            break
            case 'Lunar Shard':
                this.statusEffect('Weak on Kill',2)
            break
            case 'Fireball':
                this.statusEffect('Counter All',3)
            break
            case 'Armored Ninja':
                this.addBlock(18)
                this.statusEffect('Retain Block',999)
                this.statusEffect('Counter All',1)
            break
            case 'Louse':
                this.statusEffect('Single Counter Block',floor(random(3,8)))
            break
            case 'Soul':
                this.statusEffect('Dissipating',5)
            break
        }
    }
    calculateParts(){
        this.anim.head=this.anim.direction
        switch(this.name){
            case 'Lira': case 'Sakura': case 'Ume':
                for(let g=0;g<2;g++){
                    this.parts.legs[g].middle.x=this.parts.legs[g].top.x+lsin(this.anim.legs[g].top)*this.anim.legs[g].length.top
                    this.parts.legs[g].middle.y=this.parts.legs[g].top.y+lcos(this.anim.legs[g].top)*this.anim.legs[g].length.top
                    this.parts.legs[g].bottom.x=this.parts.legs[g].middle.x+lsin(this.anim.legs[g].bottom)*this.anim.legs[g].length.bottom
                    this.parts.legs[g].bottom.y=this.parts.legs[g].middle.y+lcos(this.anim.legs[g].bottom)*this.anim.legs[g].length.bottom
                    this.parts.legs[g].sandal.front.x=this.parts.legs[g].middle.x+lsin(this.anim.legs[g].bottom)*this.anim.legs[g].length.sandal.front
                    this.parts.legs[g].sandal.front.y=this.parts.legs[g].middle.y+lcos(this.anim.legs[g].bottom)*this.anim.legs[g].length.sandal.front
                    this.parts.legs[g].sandal.back.x=this.parts.legs[g].middle.x+lsin(this.anim.legs[g].bottom)*this.anim.legs[g].length.sandal.back
                    this.parts.legs[g].sandal.back.y=this.parts.legs[g].middle.y+lcos(this.anim.legs[g].bottom)*this.anim.legs[g].length.sandal.back

                    this.graphics.legs[g].top.x=this.parts.legs[g].top.x*lsin(this.spin.legs[g].top+this.anim.direction),
                    this.graphics.legs[g].top.y=this.parts.legs[g].top.y
                    this.graphics.legs[g].middle.x=this.parts.legs[g].middle.x*lsin(this.spin.legs[g].top+this.anim.direction),
                    this.graphics.legs[g].middle.y=this.parts.legs[g].middle.y
                    this.graphics.legs[g].bottom.x=this.parts.legs[g].bottom.x*lsin(this.spin.legs[g].bottom+this.anim.direction),
                    this.graphics.legs[g].bottom.y=this.parts.legs[g].bottom.y
                    this.graphics.legs[g].sandal.front.x=this.parts.legs[g].sandal.front.x*lsin(this.spin.legs[g].bottom+this.anim.direction),
                    this.graphics.legs[g].sandal.front.y=this.parts.legs[g].sandal.front.y
                    this.graphics.legs[g].sandal.back.x=this.parts.legs[g].sandal.back.x*lsin(this.spin.legs[g].bottom+this.anim.direction),
                    this.graphics.legs[g].sandal.back.y=this.parts.legs[g].sandal.back.y

                    this.parts.arms[g].middle.x=this.parts.arms[g].top.x+lsin(this.anim.arms[g].top)*this.anim.arms[g].length.top
                    this.parts.arms[g].middle.y=this.parts.arms[g].top.y+lcos(this.anim.arms[g].top)*this.anim.arms[g].length.top
                    this.parts.arms[g].bottom.x=this.parts.arms[g].middle.x+lsin(this.anim.arms[g].bottom)*this.anim.arms[g].length.bottom
                    this.parts.arms[g].bottom.y=this.parts.arms[g].middle.y+lcos(this.anim.arms[g].bottom)*this.anim.arms[g].length.bottom

                    this.graphics.arms[g].top.x=this.parts.arms[g].top.x*lsin(this.spin.arms[g].top+this.anim.direction),
                    this.graphics.arms[g].top.y=this.parts.arms[g].top.y
                    this.graphics.arms[g].middle.x=this.parts.arms[g].middle.x*lsin(this.spin.arms[g].top+this.anim.direction),
                    this.graphics.arms[g].middle.y=this.parts.arms[g].middle.y
                    this.graphics.arms[g].bottom.x=this.parts.arms[g].bottom.x*lsin(this.spin.arms[g].bottom+this.anim.direction),
                    this.graphics.arms[g].bottom.y=this.parts.arms[g].bottom.y

                    this.graphics.arms[g].topStack.x=(this.parts.arms[g].top.x+(4-min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))/2)*lsin(this.spin.arms[g].top+this.anim.direction),
                    this.graphics.arms[g].topStack.y=this.parts.arms[g].top.y-(4-min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))/4
                    this.graphics.arms[g].middleStack.x=(this.parts.arms[g].middle.x+(4-min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))/2)*lsin(this.spin.arms[g].top+this.anim.direction),
                    this.graphics.arms[g].middleStack.y=this.parts.arms[g].middle.y
                    this.graphics.arms[g].bottomStack.x=(this.parts.arms[g].bottom.x+(4-min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))/2)*lsin(this.spin.arms[g].bottom+this.anim.direction),
                    this.graphics.arms[g].bottomStack.y=this.parts.arms[g].bottom.y
                }
                this.sprites.spin=round(((this.anim.direction%360)+360)%360)
                this.sprites.spinDetail=constrain(round((((this.anim.direction%360)+360)%360)/this.sprites.detail),0,360/this.sprites.detail-1)
                this.sprites.spinDetailHead=constrain(round((((this.anim.head%360)+360)%360)/this.sprites.detail),0,360/this.sprites.detail-1)
            break
            case 'Certes':
                for(let g=0;g<2;g++){
                    this.parts.legs[g].middle.x=this.parts.legs[g].top.x+lsin(this.anim.legs[g].top)*this.anim.legs[g].length.top
                    this.parts.legs[g].middle.y=this.parts.legs[g].top.y+lcos(this.anim.legs[g].top)*this.anim.legs[g].length.top
                    this.parts.legs[g].bottom.x=this.parts.legs[g].middle.x+lsin(this.anim.legs[g].bottom)*this.anim.legs[g].length.bottom
                    this.parts.legs[g].bottom.y=this.parts.legs[g].middle.y+lcos(this.anim.legs[g].bottom)*this.anim.legs[g].length.bottom

                    this.graphics.legs[g].top.x=this.parts.legs[g].top.x*lsin(this.spin.legs[g].top+this.anim.direction),
                    this.graphics.legs[g].top.y=this.parts.legs[g].top.y
                    this.graphics.legs[g].middle.x=this.parts.legs[g].middle.x*lsin(this.spin.legs[g].top+this.anim.direction),
                    this.graphics.legs[g].middle.y=this.parts.legs[g].middle.y
                    this.graphics.legs[g].bottom.x=this.parts.legs[g].bottom.x*lsin(this.spin.legs[g].bottom+this.anim.direction),
                    this.graphics.legs[g].bottom.y=this.parts.legs[g].bottom.y

                    this.parts.arms[g].middle.x=this.parts.arms[g].top.x+lsin(this.anim.arms[g].top)*this.anim.arms[g].length.top
                    this.parts.arms[g].middle.y=this.parts.arms[g].top.y+lcos(this.anim.arms[g].top)*this.anim.arms[g].length.top
                    this.parts.arms[g].bottom.x=this.parts.arms[g].middle.x+lsin(this.anim.arms[g].bottom)*this.anim.arms[g].length.bottom
                    this.parts.arms[g].bottom.y=this.parts.arms[g].middle.y+lcos(this.anim.arms[g].bottom)*this.anim.arms[g].length.bottom

                    this.graphics.arms[g].top.x=this.parts.arms[g].top.x*lsin(this.spin.arms[g].top+this.anim.direction),
                    this.graphics.arms[g].top.y=this.parts.arms[g].top.y
                    this.graphics.arms[g].middle.x=this.parts.arms[g].middle.x*lsin(this.spin.arms[g].top+this.anim.direction),
                    this.graphics.arms[g].middle.y=this.parts.arms[g].middle.y
                    this.graphics.arms[g].bottom.x=this.parts.arms[g].bottom.x*lsin(this.spin.arms[g].bottom+this.anim.direction),
                    this.graphics.arms[g].bottom.y=this.parts.arms[g].bottom.y

                    this.graphics.arms[g].topStack.x=(this.parts.arms[g].top.x+(4-min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))/2)*lsin(this.spin.arms[g].top+this.anim.direction),
                    this.graphics.arms[g].topStack.y=this.parts.arms[g].top.y-(4-min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))/4
                    this.graphics.arms[g].middleStack.x=(this.parts.arms[g].middle.x+(4-min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))/2)*lsin(this.spin.arms[g].top+this.anim.direction),
                    this.graphics.arms[g].middleStack.y=this.parts.arms[g].middle.y
                    this.graphics.arms[g].bottomStack.x=(this.parts.arms[g].bottom.x+(4-min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))/2)*lsin(this.spin.arms[g].bottom+this.anim.direction),
                    this.graphics.arms[g].bottomStack.y=this.parts.arms[g].bottom.y
                }
                this.sprites.spin=round(((this.anim.direction%360)+360)%360)
                this.sprites.spinDetail=constrain(round((((this.anim.direction%360)+360)%360)/this.sprites.detail),0,360/this.sprites.detail-1)
                this.sprites.spinDetailHead=constrain(round((((this.anim.head%360)+360)%360)/this.sprites.detail),0,360/this.sprites.detail-1)
            break
            case 'Duck': case 'Fungal Duck': case 'Duckforce': case 'Big Duck': case 'Agent Duck': case 'General Duckion': case 'Blue Duck': case 'Management Autoduck':
                for(let g=0;g<2;g++){
                    this.parts.legs[g].middle.x=this.parts.legs[g].top.x+lsin(this.anim.legs[g].top)*this.anim.legs[g].length.top
                    this.parts.legs[g].middle.y=this.parts.legs[g].top.y+lcos(this.anim.legs[g].top)*this.anim.legs[g].length.top

                    this.graphics.legs[g].top.x=this.parts.legs[g].top.x*lsin(this.spin.legs[g].top+this.anim.direction),
                    this.graphics.legs[g].top.y=this.parts.legs[g].top.y
                    this.graphics.legs[g].middle.x=this.parts.legs[g].middle.x*lsin(this.spin.legs[g].top+this.anim.direction),
                    this.graphics.legs[g].middle.y=this.parts.legs[g].middle.y

                    this.parts.arms[g].middle.x=this.parts.arms[g].top.x+lsin(this.anim.arms[g].top)*this.anim.arms[g].length.top
                    this.parts.arms[g].middle.y=this.parts.arms[g].top.y+lcos(this.anim.arms[g].top)*this.anim.arms[g].length.top

                    this.graphics.arms[g].top.x=this.parts.arms[g].top.x*lsin(this.spin.arms[g].top+this.anim.direction),
                    this.graphics.arms[g].top.y=this.parts.arms[g].top.y
                    this.graphics.arms[g].middle.x=this.parts.arms[g].middle.x*lsin(this.spin.arms[g].top+this.anim.direction),
                    this.graphics.arms[g].middle.y=this.parts.arms[g].middle.y
                }
            break
            case 'Orb Walker':
                for(let g=0;g<4;g++){
                    this.parts.legs[g].middle.x=this.parts.legs[g].top.x+lsin(this.anim.legs[g].top)*this.anim.legs[g].length.top
                    this.parts.legs[g].middle.y=this.parts.legs[g].top.y+lcos(this.anim.legs[g].top)*this.anim.legs[g].length.top

                    this.graphics.legs[g].top.x=this.parts.legs[g].top.x*lsin(this.spin.legs[g].top+this.anim.direction),
                    this.graphics.legs[g].top.y=this.parts.legs[g].top.y
                    this.graphics.legs[g].middle.x=this.parts.legs[g].middle.x*lsin(this.spin.legs[g].top+this.anim.direction),
                    this.graphics.legs[g].middle.y=this.parts.legs[g].middle.y
                }
            break
            case 'Slime': case 'Big Slime': case 'Spike Slime': case 'Big Spike Slime': case 'Slime Boss': case 'Slimoid': case 'Big Slimoid': case 'Modicum': case 'Rock Golem': case 'Shield Particle': case 'Bush Thing': case 'Fireball': case 'Fungling': case 'Bee': case 'Pixie': case 'Darkblot':
                for(let g=0;g<2;g++){
                    this.parts.arms[g].middle.x=this.parts.arms[g].top.x+lsin(this.anim.arms[g].top)*this.anim.arms[g].length.top
                    this.parts.arms[g].middle.y=this.parts.arms[g].top.y+lcos(this.anim.arms[g].top)*this.anim.arms[g].length.top

                    this.graphics.arms[g].top.x=this.parts.arms[g].top.x*lsin(this.spin.arms[g].top+this.anim.direction),
                    this.graphics.arms[g].top.y=this.parts.arms[g].top.y
                    this.graphics.arms[g].middle.x=this.parts.arms[g].middle.x*lsin(this.spin.arms[g].top+this.anim.direction),
                    this.graphics.arms[g].middle.y=this.parts.arms[g].middle.y
                }
            break
            case 'Spheron': case 'Flame': case 'Hexaghost Orb': case 'Hexaghost Core': case 'Host': case 'Host Drone':
            case 'Bronze Orb C': case 'Bronze Orb A': case 'Sentry': case 'Flying Rock': case 'Repulsor': case 'Dead Shell': case 'Management Drone': case 'Personnel Carrier': case 'Louse': case 'Hwurmp': case 'Glimerrer': case 'Antihwurmp': break
            default:
                for(let g=0;g<2;g++){
                    this.parts.legs[g].middle.x=this.parts.legs[g].top.x+lsin(this.anim.legs[g].top)*this.anim.legs[g].length.top
                    this.parts.legs[g].middle.y=this.parts.legs[g].top.y+lcos(this.anim.legs[g].top)*this.anim.legs[g].length.top
                    this.parts.legs[g].bottom.x=this.parts.legs[g].middle.x+lsin(this.anim.legs[g].bottom)*this.anim.legs[g].length.bottom
                    this.parts.legs[g].bottom.y=this.parts.legs[g].middle.y+lcos(this.anim.legs[g].bottom)*this.anim.legs[g].length.bottom

                    this.graphics.legs[g].top.x=this.parts.legs[g].top.x*lsin(this.spin.legs[g].top+this.anim.direction),
                    this.graphics.legs[g].top.y=this.parts.legs[g].top.y
                    this.graphics.legs[g].middle.x=this.parts.legs[g].middle.x*lsin(this.spin.legs[g].top+this.anim.direction),
                    this.graphics.legs[g].middle.y=this.parts.legs[g].middle.y
                    this.graphics.legs[g].bottom.x=this.parts.legs[g].bottom.x*lsin(this.spin.legs[g].bottom+this.anim.direction),
                    this.graphics.legs[g].bottom.y=this.parts.legs[g].bottom.y

                    this.parts.arms[g].middle.x=this.parts.arms[g].top.x+lsin(this.anim.arms[g].top)*this.anim.arms[g].length.top
                    this.parts.arms[g].middle.y=this.parts.arms[g].top.y+lcos(this.anim.arms[g].top)*this.anim.arms[g].length.top
                    this.parts.arms[g].bottom.x=this.parts.arms[g].middle.x+lsin(this.anim.arms[g].bottom)*this.anim.arms[g].length.bottom
                    this.parts.arms[g].bottom.y=this.parts.arms[g].middle.y+lcos(this.anim.arms[g].bottom)*this.anim.arms[g].length.bottom

                    this.graphics.arms[g].top.x=this.parts.arms[g].top.x*lsin(this.spin.arms[g].top+this.anim.direction),
                    this.graphics.arms[g].top.y=this.parts.arms[g].top.y
                    this.graphics.arms[g].middle.x=this.parts.arms[g].middle.x*lsin(this.spin.arms[g].top+this.anim.direction),
                    this.graphics.arms[g].middle.y=this.parts.arms[g].middle.y
                    this.graphics.arms[g].bottom.x=this.parts.arms[g].bottom.x*lsin(this.spin.arms[g].bottom+this.anim.direction),
                    this.graphics.arms[g].bottom.y=this.parts.arms[g].bottom.y

                    this.graphics.arms[g].topStack.x=(this.parts.arms[g].top.x+(4-min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))/2)*lsin(this.spin.arms[g].top+this.anim.direction),
                    this.graphics.arms[g].topStack.y=this.parts.arms[g].top.y-(4-min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))/4
                    this.graphics.arms[g].middleStack.x=(this.parts.arms[g].middle.x+(4-min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))/2)*lsin(this.spin.arms[g].top+this.anim.direction),
                    this.graphics.arms[g].middleStack.y=this.parts.arms[g].middle.y
                    this.graphics.arms[g].bottomStack.x=(this.parts.arms[g].bottom.x+(4-min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))/2)*lsin(this.spin.arms[g].bottom+this.anim.direction),
                    this.graphics.arms[g].bottomStack.y=this.parts.arms[g].bottom.y
                }
            break
            
        }
    }
    getTarget(){
        switch(this.attack[this.intent].type){
            case 1: case 2: case 3: case 11: case 13: case 22: case 23: case 31: case 34: case 35:
            case 36: case 37: case 97: case 101: case 103: case 113: case 116: case 121: case 122: case 209:
            case 212:
                return [this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1])]
            case 6: case 7: case 8: case 14: case 15: case 19: case 20: case 24: case 27: case 30:
            case 32: case 33: case 61: case 62: case 66: case 67: case 76: case 77: case 96: case 107:
            case 112: case 138: case 139: case 149: case 156: case 183: case 203: case 211: case 223: case 224:
                return [
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*2,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*2)
                ]
            case 71: case 73: case 79: case 99: case 143: case 172: case 175:
                return [
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*2,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*3,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*3)
                ]
            case 100:
                return [
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*2,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*3,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*4,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*4)
                ]
            case 9: case 60: case 64: case 69: case 82: case 84: case 95: case 104: case 114: case 124:
            case 153:
                return [
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction-60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction-60)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction+60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction+60)[1])
                ]
            case 12: case 38: case 45: case 47: case 50: case 59: case 80: case 81: case 83: case 89:
            case 90: case 91: case 98: case 106: case 115: case 117: case 118: case 119: case 123: case 125:
            case 129: case 130: case 134: case 135: case 140: case 141: case 144: case 145: case 148: case 151:
            case 152: case 154: case 158: case 160: case 161: case 162: case 165: case 173: case 178: case 179:
            case 180: case 184: case 188: case 191: case 193: case 194: case 196: case 199: case 200: case 201:
            case 202: case 206: case 208:
                return [
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*2,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*3,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*4,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*4),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*5,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*5),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*6,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*6)
                ]
            case 16: case 17: case 54: case 87: case 120: case 128: case 132: case 133: case 136: case 142:
            case 147: case 157: case 198: case 213: case 215: case 217:
                return [
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-150)[0],this.tilePosition.y+transformDirection(0,-150)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-90)[0],this.tilePosition.y+transformDirection(0,-90)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-30)[0],this.tilePosition.y+transformDirection(0,-30)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,30)[0],this.tilePosition.y+transformDirection(0,30)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,90)[0],this.tilePosition.y+transformDirection(0,90)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,150)[0],this.tilePosition.y+transformDirection(0,150)[1])
                ]
            case 28: case 44: case 53: case 105: case 146: case 168: case 171:
                return [
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*2,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction-60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction-60)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction-60)[0]*2,this.tilePosition.y+transformDirection(0,this.goal.anim.direction-60)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction+60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction+60)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction+60)[0]*2,this.tilePosition.y+transformDirection(0,this.goal.anim.direction+60)[1]*2)
                ]
            case 49: case 164: case 185:
                return [
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*2,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*3,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*4,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*4),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*5,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*5),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*6,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*6),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction-60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction-60)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction-60)[0]+transformDirection(0,this.goal.anim.direction)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction-60)[1]+transformDirection(0,this.goal.anim.direction)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction-60)[0]+transformDirection(0,this.goal.anim.direction)[0]*2,this.tilePosition.y+transformDirection(0,this.goal.anim.direction-60)[1]+transformDirection(0,this.goal.anim.direction)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction-60)[0]+transformDirection(0,this.goal.anim.direction)[0]*3,this.tilePosition.y+transformDirection(0,this.goal.anim.direction-60)[1]+transformDirection(0,this.goal.anim.direction)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction-60)[0]+transformDirection(0,this.goal.anim.direction)[0]*4,this.tilePosition.y+transformDirection(0,this.goal.anim.direction-60)[1]+transformDirection(0,this.goal.anim.direction)[1]*4),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction-60)[0]+transformDirection(0,this.goal.anim.direction)[0]*5,this.tilePosition.y+transformDirection(0,this.goal.anim.direction-60)[1]+transformDirection(0,this.goal.anim.direction)[1]*5),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction+60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction+60)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction+60)[0]+transformDirection(0,this.goal.anim.direction)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction+60)[1]+transformDirection(0,this.goal.anim.direction)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction+60)[0]+transformDirection(0,this.goal.anim.direction)[0]*2,this.tilePosition.y+transformDirection(0,this.goal.anim.direction+60)[1]+transformDirection(0,this.goal.anim.direction)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction+60)[0]+transformDirection(0,this.goal.anim.direction)[0]*3,this.tilePosition.y+transformDirection(0,this.goal.anim.direction+60)[1]+transformDirection(0,this.goal.anim.direction)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction+60)[0]+transformDirection(0,this.goal.anim.direction)[0]*4,this.tilePosition.y+transformDirection(0,this.goal.anim.direction+60)[1]+transformDirection(0,this.goal.anim.direction)[1]*4),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction+60)[0]+transformDirection(0,this.goal.anim.direction)[0]*5,this.tilePosition.y+transformDirection(0,this.goal.anim.direction+60)[1]+transformDirection(0,this.goal.anim.direction)[1]*5)
                ]
            case 55: case 192:
                return [
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-150)[0],this.tilePosition.y+transformDirection(0,-150)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-90)[0],this.tilePosition.y+transformDirection(0,-90)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-30)[0],this.tilePosition.y+transformDirection(0,-30)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,30)[0],this.tilePosition.y+transformDirection(0,30)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,90)[0],this.tilePosition.y+transformDirection(0,90)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,150)[0],this.tilePosition.y+transformDirection(0,150)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-150)[0]*2,this.tilePosition.y+transformDirection(0,-150)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-90)[0]*2,this.tilePosition.y+transformDirection(0,-90)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-30)[0]*2,this.tilePosition.y+transformDirection(0,-30)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,30)[0]*2,this.tilePosition.y+transformDirection(0,30)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,90)[0]*2,this.tilePosition.y+transformDirection(0,90)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,150)[0]*2,this.tilePosition.y+transformDirection(0,150)[1]*2)
                ]
            case 85: case 86:
                return [
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction-60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction-60)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction+60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction+60)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*2,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]+transformDirection(0,this.goal.anim.direction-60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]+transformDirection(0,this.goal.anim.direction-60)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]+transformDirection(0,this.goal.anim.direction+60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]+transformDirection(0,this.goal.anim.direction+60)[1])
                ]
            case 127: case 150: case 181:
                return [this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*2,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*2)]
            case 131: case 195: case 205:
                return [
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*2,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*3,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*4,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*4),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*5,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*5),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*6,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*6),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction-60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction-60)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction-60)[0]*2,this.tilePosition.y+transformDirection(0,this.goal.anim.direction-60)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction-60)[0]*3,this.tilePosition.y+transformDirection(0,this.goal.anim.direction-60)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction-60)[0]*4,this.tilePosition.y+transformDirection(0,this.goal.anim.direction-60)[1]*4),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction-60)[0]*5,this.tilePosition.y+transformDirection(0,this.goal.anim.direction-60)[1]*5),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction-60)[0]*6,this.tilePosition.y+transformDirection(0,this.goal.anim.direction-60)[1]*6),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction+60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction+60)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction+60)[0]*2,this.tilePosition.y+transformDirection(0,this.goal.anim.direction+60)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction+60)[0]*3,this.tilePosition.y+transformDirection(0,this.goal.anim.direction+60)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction+60)[0]*4,this.tilePosition.y+transformDirection(0,this.goal.anim.direction+60)[1]*4),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction+60)[0]*5,this.tilePosition.y+transformDirection(0,this.goal.anim.direction+60)[1]*5),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction+60)[0]*6,this.tilePosition.y+transformDirection(0,this.goal.anim.direction+60)[1]*6)
                ]
            case 137:
                return [
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*2,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]+transformDirection(0,this.goal.anim.direction-60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]+transformDirection(0,this.goal.anim.direction-60)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]+transformDirection(0,this.goal.anim.direction+60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]+transformDirection(0,this.goal.anim.direction+60)[1])
                ]
            case 166:
                return [
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-150)[0],this.tilePosition.y+transformDirection(0,-150)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-150)[0]*2,this.tilePosition.y+transformDirection(0,-150)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-90)[0],this.tilePosition.y+transformDirection(0,-90)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-90)[0]*2,this.tilePosition.y+transformDirection(0,-90)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-30)[0],this.tilePosition.y+transformDirection(0,-30)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-30)[0]*2,this.tilePosition.y+transformDirection(0,-30)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,30)[0],this.tilePosition.y+transformDirection(0,30)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,30)[0]*2,this.tilePosition.y+transformDirection(0,30)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,90)[0],this.tilePosition.y+transformDirection(0,90)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,90)[0]*2,this.tilePosition.y+transformDirection(0,90)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,150)[0],this.tilePosition.y+transformDirection(0,150)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,150)[0]*2,this.tilePosition.y+transformDirection(0,150)[1]*2)
                ]
            case 176:
                return [
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-150)[0],this.tilePosition.y+transformDirection(0,-150)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-90)[0],this.tilePosition.y+transformDirection(0,-90)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-30)[0],this.tilePosition.y+transformDirection(0,-30)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,30)[0],this.tilePosition.y+transformDirection(0,30)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,90)[0],this.tilePosition.y+transformDirection(0,90)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,150)[0],this.tilePosition.y+transformDirection(0,150)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-150)[0]*2,this.tilePosition.y+transformDirection(0,-150)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-90)[0]*2,this.tilePosition.y+transformDirection(0,-90)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-30)[0]*2,this.tilePosition.y+transformDirection(0,-30)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,30)[0]*2,this.tilePosition.y+transformDirection(0,30)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,90)[0]*2,this.tilePosition.y+transformDirection(0,90)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,150)[0]*2,this.tilePosition.y+transformDirection(0,150)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-150)[0]+transformDirection(0,-90)[0],this.tilePosition.y+transformDirection(0,-150)[1]+transformDirection(0,-90)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-90)[0]+transformDirection(0,-30)[0],this.tilePosition.y+transformDirection(0,-90)[1]+transformDirection(0,-30)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-30)[0]+transformDirection(0,30)[0],this.tilePosition.y+transformDirection(0,-30)[1]+transformDirection(0,30)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,30)[0]+transformDirection(0,90)[0],this.tilePosition.y+transformDirection(0,30)[1]+transformDirection(0,90)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,90)[0]+transformDirection(0,150)[0],this.tilePosition.y+transformDirection(0,90)[1]+transformDirection(0,150)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,150)[0]+transformDirection(0,-150)[0],this.tilePosition.y+transformDirection(0,150)[1]+transformDirection(0,-150)[1])
                ]
            case 204:
                return [
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction-60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction-60)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction+60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction+60)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction-120)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction-120)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction+120)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction+120)[1])
                ]
            case 214:
                return [
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction-60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction-60)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction+60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction+60)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*2,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*2)
                ]
            case 218:
                return [
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-150)[0]+transformDirection(0,-90)[0],this.tilePosition.y+transformDirection(0,-150)[1]+transformDirection(0,-90)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-90)[0]+transformDirection(0,-30)[0],this.tilePosition.y+transformDirection(0,-90)[1]+transformDirection(0,-30)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-30)[0]+transformDirection(0,30)[0],this.tilePosition.y+transformDirection(0,-30)[1]+transformDirection(0,30)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,30)[0]+transformDirection(0,90)[0],this.tilePosition.y+transformDirection(0,30)[1]+transformDirection(0,90)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,90)[0]+transformDirection(0,150)[0],this.tilePosition.y+transformDirection(0,90)[1]+transformDirection(0,150)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,150)[0]+transformDirection(0,-150)[0],this.tilePosition.y+transformDirection(0,150)[1]+transformDirection(0,-150)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-150)[0]+transformDirection(0,-90)[0]*2,this.tilePosition.y+transformDirection(0,-150)[1]+transformDirection(0,-90)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-90)[0]+transformDirection(0,-30)[0]*2,this.tilePosition.y+transformDirection(0,-90)[1]+transformDirection(0,-30)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-30)[0]+transformDirection(0,30)[0]*2,this.tilePosition.y+transformDirection(0,-30)[1]+transformDirection(0,30)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,30)[0]+transformDirection(0,90)[0]*2,this.tilePosition.y+transformDirection(0,30)[1]+transformDirection(0,90)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,90)[0]+transformDirection(0,150)[0]*2,this.tilePosition.y+transformDirection(0,90)[1]+transformDirection(0,150)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,150)[0]+transformDirection(0,-150)[0]*2,this.tilePosition.y+transformDirection(0,150)[1]+transformDirection(0,-150)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-150)[0]*2+transformDirection(0,-90)[0],this.tilePosition.y+transformDirection(0,-150)[1]*2+transformDirection(0,-90)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-90)[0]*2+transformDirection(0,-30)[0],this.tilePosition.y+transformDirection(0,-90)[1]*2+transformDirection(0,-30)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-30)[0]*2+transformDirection(0,30)[0],this.tilePosition.y+transformDirection(0,-30)[1]*2+transformDirection(0,30)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,30)[0]*2+transformDirection(0,90)[0],this.tilePosition.y+transformDirection(0,30)[1]*2+transformDirection(0,90)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,90)[0]*2+transformDirection(0,150)[0],this.tilePosition.y+transformDirection(0,90)[1]*2+transformDirection(0,150)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,150)[0]*2+transformDirection(0,-150)[0],this.tilePosition.y+transformDirection(0,150)[1]*2+transformDirection(0,-150)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-150)[0]*2+transformDirection(0,-90)[0]*2,this.tilePosition.y+transformDirection(0,-150)[1]*2+transformDirection(0,-90)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-90)[0]*2+transformDirection(0,-30)[0]*2,this.tilePosition.y+transformDirection(0,-90)[1]*2+transformDirection(0,-30)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-30)[0]*2+transformDirection(0,30)[0]*2,this.tilePosition.y+transformDirection(0,-30)[1]*2+transformDirection(0,30)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,30)[0]*2+transformDirection(0,90)[0]*2,this.tilePosition.y+transformDirection(0,30)[1]*2+transformDirection(0,90)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,90)[0]*2+transformDirection(0,150)[0]*2,this.tilePosition.y+transformDirection(0,90)[1]*2+transformDirection(0,150)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,150)[0]*2+transformDirection(0,-150)[0]*2,this.tilePosition.y+transformDirection(0,150)[1]*2+transformDirection(0,-150)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-150)[0]*2+transformDirection(0,-90)[0]*3,this.tilePosition.y+transformDirection(0,-150)[1]*2+transformDirection(0,-90)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-90)[0]*2+transformDirection(0,-30)[0]*3,this.tilePosition.y+transformDirection(0,-90)[1]*2+transformDirection(0,-30)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-30)[0]*2+transformDirection(0,30)[0]*3,this.tilePosition.y+transformDirection(0,-30)[1]*2+transformDirection(0,30)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,30)[0]*2+transformDirection(0,90)[0]*3,this.tilePosition.y+transformDirection(0,30)[1]*2+transformDirection(0,90)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,90)[0]*2+transformDirection(0,150)[0]*3,this.tilePosition.y+transformDirection(0,90)[1]*2+transformDirection(0,150)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,150)[0]*2+transformDirection(0,-150)[0]*3,this.tilePosition.y+transformDirection(0,150)[1]*2+transformDirection(0,-150)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-150)[0]*3+transformDirection(0,-90)[0]*2,this.tilePosition.y+transformDirection(0,-150)[1]*3+transformDirection(0,-90)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-90)[0]*3+transformDirection(0,-30)[0]*2,this.tilePosition.y+transformDirection(0,-90)[1]*3+transformDirection(0,-30)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-30)[0]*3+transformDirection(0,30)[0]*2,this.tilePosition.y+transformDirection(0,-30)[1]*3+transformDirection(0,30)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,30)[0]*3+transformDirection(0,90)[0]*2,this.tilePosition.y+transformDirection(0,30)[1]*3+transformDirection(0,90)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,90)[0]*3+transformDirection(0,150)[0]*2,this.tilePosition.y+transformDirection(0,90)[1]*3+transformDirection(0,150)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,150)[0]*3+transformDirection(0,-150)[0]*2,this.tilePosition.y+transformDirection(0,150)[1]*3+transformDirection(0,-150)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-150)[0]*3+transformDirection(0,-90)[0]*3,this.tilePosition.y+transformDirection(0,-150)[1]*3+transformDirection(0,-90)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-90)[0]*3+transformDirection(0,-30)[0]*3,this.tilePosition.y+transformDirection(0,-90)[1]*3+transformDirection(0,-30)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-30)[0]*3+transformDirection(0,30)[0]*3,this.tilePosition.y+transformDirection(0,-30)[1]*3+transformDirection(0,30)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,30)[0]*3+transformDirection(0,90)[0]*3,this.tilePosition.y+transformDirection(0,30)[1]*3+transformDirection(0,90)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,90)[0]*3+transformDirection(0,150)[0]*3,this.tilePosition.y+transformDirection(0,90)[1]*3+transformDirection(0,150)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,150)[0]*3+transformDirection(0,-150)[0]*3,this.tilePosition.y+transformDirection(0,150)[1]*3+transformDirection(0,-150)[1]*3)
                ]
            case 219:
                return [
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-150)[0],this.tilePosition.y+transformDirection(0,-150)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-150)[0]*2,this.tilePosition.y+transformDirection(0,-150)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-150)[0]*3,this.tilePosition.y+transformDirection(0,-150)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-150)[0]*4,this.tilePosition.y+transformDirection(0,-150)[1]*4),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-150)[0]*5,this.tilePosition.y+transformDirection(0,-150)[1]*5),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-150)[0]*6,this.tilePosition.y+transformDirection(0,-150)[1]*6),

                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-90)[0],this.tilePosition.y+transformDirection(0,-90)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-90)[0]*2,this.tilePosition.y+transformDirection(0,-90)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-90)[0]*3,this.tilePosition.y+transformDirection(0,-90)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-90)[0]*4,this.tilePosition.y+transformDirection(0,-90)[1]*4),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-90)[0]*5,this.tilePosition.y+transformDirection(0,-90)[1]*5),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-90)[0]*6,this.tilePosition.y+transformDirection(0,-90)[1]*6),

                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-30)[0],this.tilePosition.y+transformDirection(0,-30)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-30)[0]*2,this.tilePosition.y+transformDirection(0,-30)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-30)[0]*3,this.tilePosition.y+transformDirection(0,-30)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-30)[0]*4,this.tilePosition.y+transformDirection(0,-30)[1]*4),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-30)[0]*5,this.tilePosition.y+transformDirection(0,-30)[1]*5),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,-30)[0]*6,this.tilePosition.y+transformDirection(0,-30)[1]*6),

                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,30)[0],this.tilePosition.y+transformDirection(0,30)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,30)[0]*2,this.tilePosition.y+transformDirection(0,30)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,30)[0]*3,this.tilePosition.y+transformDirection(0,30)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,30)[0]*4,this.tilePosition.y+transformDirection(0,30)[1]*4),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,30)[0]*5,this.tilePosition.y+transformDirection(0,30)[1]*5),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,30)[0]*6,this.tilePosition.y+transformDirection(0,30)[1]*6),

                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,90)[0],this.tilePosition.y+transformDirection(0,90)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,90)[0]*2,this.tilePosition.y+transformDirection(0,90)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,90)[0]*3,this.tilePosition.y+transformDirection(0,90)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,90)[0]*4,this.tilePosition.y+transformDirection(0,90)[1]*4),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,90)[0]*5,this.tilePosition.y+transformDirection(0,90)[1]*5),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,90)[0]*6,this.tilePosition.y+transformDirection(0,90)[1]*6),

                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,150)[0],this.tilePosition.y+transformDirection(0,150)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,150)[0]*2,this.tilePosition.y+transformDirection(0,150)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,150)[0]*3,this.tilePosition.y+transformDirection(0,150)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,150)[0]*4,this.tilePosition.y+transformDirection(0,150)[1]*4),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,150)[0]*5,this.tilePosition.y+transformDirection(0,150)[1]*5),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,150)[0]*6,this.tilePosition.y+transformDirection(0,150)[1]*6)
                ]
            case 221:
                return [
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction-60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction-60)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction+60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction+60)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*2,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]+transformDirection(0,this.goal.anim.direction-60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]+transformDirection(0,this.goal.anim.direction-60)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]+transformDirection(0,this.goal.anim.direction+60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]+transformDirection(0,this.goal.anim.direction+60)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*3,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*3)
                ]
            case 222:
                return [
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction-60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction-60)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction+60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction+60)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*2,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction-60)[0]*2,this.tilePosition.y+transformDirection(0,this.goal.anim.direction-60)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction+60)[0]*2,this.tilePosition.y+transformDirection(0,this.goal.anim.direction+60)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]+transformDirection(0,this.goal.anim.direction-60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]+transformDirection(0,this.goal.anim.direction-60)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]+transformDirection(0,this.goal.anim.direction+60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]+transformDirection(0,this.goal.anim.direction+60)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*3,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction-60)[0]*3,this.tilePosition.y+transformDirection(0,this.goal.anim.direction-60)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction+60)[0]*3,this.tilePosition.y+transformDirection(0,this.goal.anim.direction+60)[1]*3),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]+transformDirection(0,this.goal.anim.direction-60)[0]*2,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]+transformDirection(0,this.goal.anim.direction-60)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]+transformDirection(0,this.goal.anim.direction+60)[0]*2,this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]+transformDirection(0,this.goal.anim.direction+60)[1]*2),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*2+transformDirection(0,this.goal.anim.direction-60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*2+transformDirection(0,this.goal.anim.direction-60)[1]),
                    this.battle.tileManager.getTileIndex(this.tilePosition.x+transformDirection(0,this.goal.anim.direction)[0]*2+transformDirection(0,this.goal.anim.direction+60)[0],this.tilePosition.y+transformDirection(0,this.goal.anim.direction)[1]*2+transformDirection(0,this.goal.anim.direction+60)[1])
                ]
            default: return []               
        }
    }
    setIntent(type){
        switch(type){
            case 0:
                switch(this.behavior){
                    case 0:
                        this.intent=(this.battle.turn.total-1)%this.attack.length
                    break
                    case 1:
                        this.intent=floor(random(0,this.attack.length))
                    break
                    case 2:
                        this.intent=floor(random(0,this.attack.length-0.5))
                    break
                    case 3:
                        this.intent=this.battle.turn.total<=3?this.attack.length-1:floor(random(0,this.attack.length-1))
                    break
                    case 4:
                        this.intent=this.battle.turn.total<=3?this.attack.length-1:(this.battle.turn.total-4)%this.attack.length
                    break
                    case 5:
                        this.intent=(this.battle.turn.total+this.id)%this.attack.length
                    break
                    case 6:
                        let value=(this.battle.turn.total-1)%(this.attack.length*2-2)
                        this.intent=value==0?0:value==this.attack.length*2-3?this.attack.length-1:(value-1)%(this.attack.length-2)+1
                    break
                    case 7:
                        this.intent=floor(random(0,this.attack.length))
                        if(this.intent==0&&this.status.main[42]<=0){
                            this.intent=floor(random(0,this.attack.length))
                        }
                    break
                    case 8:
                        this.intent=this.battle.turn.total<=1?this.attack.length-1:(this.battle.turn.total-2)%(this.attack.length-1)
                    break
                    case 9:
                        this.intent=this.battle.turn.total<=1?this.attack.length-1:(this.battle.turn.total-2)%this.attack.length
                    break
                    case 10:
                        this.intent=this.battle.turn.total<=1?this.attack.length-1:floor(random(0,this.attack.length-1))
                    break
                    case 11:
                        this.intent=this.battle.turn.total%2==1?this.attack.length-1:(this.battle.turn.total/2+this.attack.length-2)%(this.attack.length-1)
                    break
                    case 12:
                        this.intent=this.battle.turn.total<=3?this.attack.length-1:floor(random(0,this.attack.length))
                    break
                    case 13:
                        for(let a=0,la=this.battle.combatantManager.combatants.length;a<la;a++){
                            if(this.battle.combatantManager.combatants[a].name==this.name&&this.battle.combatantManager.combatants[a].life<=0&&!this.battle.combatantManager.combatants[a].respawn){
                                this.progress++
                            }
                        }
                        if(this.progress>=4&&floor(random(0,2))==0){
                            this.intent=this.attack.length-1
                            this.progress=0
                        }else{
                            this.intent=floor(random(0,this.attack.length-1))
                        }
                    break
                }
            break
        }
    }
    convertTile(target){
        let targetTile=[]
        for(let a=0,la=target.length;a<la;a++){
            targetTile.push(target[a]==-1?{tilePosition:{x:-1,y:-1}}:this.battle.tileManager.tiles[target[a]])
        }
        return targetTile
    }
    playCard(){
        if(this.spec.includes(8)){
            this.battle.turnManager.loadEnemyAttackRepeat(this.id)
        }
    }
    playCardFront(){
        if(this.status.main[77]>0){
            this.takeDamage(this.status.main[77],-1)
        }
    }
    activate(type,id){
        if(this.life>0&&!this.moved){
            if(this.spec.includes(0)&&(id==this.target||this.spec.includes(2)&&id<this.battle.players)&&type==1&&this.battle.turn.main<this.battle.players){
                this.target=id
                this.battle.turnManager.loadEnemyRotate(this.id)
            }
            if(this.spec.includes(1)&&(id==this.target||this.spec.includes(2)&&id<this.battle.players)&&type==1&&this.battle.turn.main<this.battle.players){
                this.target=id
                this.battle.turnManager.loadEnemyMoveBack(this.id)
                this.battle.turnManager.loadEnemyRotateBack(this.id)
            }
            if(this.spec.includes(7)&&(id==this.target||this.spec.includes(2)&&id<this.battle.players)&&type==1&&this.battle.turn.main<this.battle.players&&!this.aggressor){
                this.target=id
                this.battle.turnManager.loadEnemyAttackRepeat(this.id)
                this.aggressor=true
            }
            let target=this.getTarget()
            this.targetTile=this.convertTile(target)
            for(let a=0,la=this.battle.combatantManager.combatants.length;a<la;a++){
                if(this.battle.combatantManager.combatants[a].team>0&&type==0||this.battle.combatantManager.combatants[a].id==id&&(type==1||type==2)){
                    switch(this.attack[this.intent].type){
                        case 1: case 2: case 3: case 11: case 13: case 22: case 23: case 31: case 34: case 35:
                        case 36: case 37: case 97: case 101: case 103: case 113: case 116: case 121: case 122: case 209:
                        case 212:
                            if(
                                this.battle.combatantManager.combatants[a].tilePosition.x==this.targetTile[0].tilePosition.x&&
                                this.battle.combatantManager.combatants[a].tilePosition.y==this.targetTile[0].tilePosition.y){
                                    this.activated=true
                            }
                        break
                        case 6: case 7: case 8: case 14: case 15: case 19: case 20: case 24: case 27: case 30:
                        case 32: case 33: case 61: case 62: case 66: case 67: case 76: case 77: case 96: case 99:
                        case 107: case 112: case 137: case 138: case 139: case 149: case 156: case 183: case 203: case 211:
                        case 223: case 224:
                            for(let b=0,lb=this.targetTile.length;b<lb;b++){
                                if(
                                    this.battle.combatantManager.combatants[a].tilePosition.x==this.targetTile[b].tilePosition.x&&
                                    this.battle.combatantManager.combatants[a].tilePosition.y==this.targetTile[b].tilePosition.y&&
                                    !(b>=1&&(this.targetTile[0].tilePosition.x<0||this.targetTile[0].occupied>0))){
                                        this.activated=true
                                }
                            }
                        break
                        case 71: case 73: case 79: case 143: case 172:
                            for(let b=0,lb=this.targetTile.length;b<lb;b++){
                                if(
                                    this.battle.combatantManager.combatants[a].tilePosition.x==this.targetTile[b].tilePosition.x&&
                                    this.battle.combatantManager.combatants[a].tilePosition.y==this.targetTile[b].tilePosition.y&&
                                    !(b>=1&&(this.targetTile[0].tilePosition.x<0||this.targetTile[0].occupied>0))&&
                                    !(b>=2&&(this.targetTile[1].tilePosition.x<0||this.targetTile[1].occupied>0))){
                                        this.activated=true
                                }
                            }
                        break
                        case 100:
                            for(let b=0,lb=this.targetTile.length;b<lb;b++){
                                if(
                                    this.battle.combatantManager.combatants[a].tilePosition.x==this.targetTile[b].tilePosition.x&&
                                    this.battle.combatantManager.combatants[a].tilePosition.y==this.targetTile[b].tilePosition.y&&
                                    !(b>=1&&(this.targetTile[0].tilePosition.x<0||this.targetTile[0].occupied>0))&&
                                    !(b>=2&&(this.targetTile[1].tilePosition.x<0||this.targetTile[1].occupied>0))&&
                                    !(b>=3&&(this.targetTile[2].tilePosition.x<0||this.targetTile[2].occupied>0))){
                                        this.activated=true
                                }
                            }
                        break
                        case 9: case 16: case 17: case 28: case 44: case 53: case 54: case 55: case 60: case 64:
                        case 69: case 82: case 84: case 85: case 86: case 87: case 95: case 104: case 105: case 114:
                        case 117: case 120: case 124: case 128: case 131: case 132: case 133: case 142: case 146: case 147:
                        case 153: case 157: case 168: case 171: case 174: case 175: case 176: case 192: case 195: case 198:
                        case 204: case 213: case 215: case 217: case 222:
                            for(let b=0,lb=this.targetTile.length;b<lb;b++){
                                if(
                                    this.battle.combatantManager.combatants[a].tilePosition.x==this.targetTile[b].tilePosition.x&&
                                    this.battle.combatantManager.combatants[a].tilePosition.y==this.targetTile[b].tilePosition.y){
                                        this.activated=true
                                }
                            }
                        break
                        case 12: case 38: case 45: case 47: case 50: case 59: case 80: case 81: case 83: case 89:
                        case 90: case 91: case 98: case 106: case 115: case 118: case 119: case 123: case 125: case 129:
                        case 130: case 134: case 136: case 140: case 141: case 144: case 145: case 148: case 151: case 152:
                        case 158: case 160: case 161: case 162: case 165: case 173: case 178: case 179: case 180: case 184:
                        case 185: case 188: case 191: case 193: case 194: case 196: case 199: case 200: case 201: case 202:
                        case 206: case 208:
                            for(let b=0,lb=this.targetTile.length;b<lb;b++){
                                if(
                                    this.battle.combatantManager.combatants[a].tilePosition.x==this.targetTile[b].tilePosition.x&&
                                    this.battle.combatantManager.combatants[a].tilePosition.y==this.targetTile[b].tilePosition.y&&
                                    !(b>=1&&(this.targetTile[0].tilePosition.x<0||this.targetTile[0].occupied>0))&&
                                    !(b>=2&&(this.targetTile[1].tilePosition.x<0||this.targetTile[1].occupied>0))&&
                                    !(b>=3&&(this.targetTile[2].tilePosition.x<0||this.targetTile[2].occupied>0))&&
                                    !(b>=4&&(this.targetTile[3].tilePosition.x<0||this.targetTile[3].occupied>0))&&
                                    !(b>=5&&(this.targetTile[4].tilePosition.x<0||this.targetTile[4].occupied>0))){
                                        this.activated=true
                                }
                            }
                        break
                        case 49: case 164: case 205: case 219:
                            for(let b=0,lb=this.targetTile.length;b<lb;b++){
                                if(
                                    this.battle.combatantManager.combatants[a].tilePosition.x==this.targetTile[b].tilePosition.x&&
                                    this.battle.combatantManager.combatants[a].tilePosition.y==this.targetTile[b].tilePosition.y&&
                                    !(b%6>=1&&(this.targetTile[floor(b/6)*6].tilePosition.x<0||this.targetTile[floor(b/6)*6].occupied>0))&&
                                    !(b%6>=2&&(this.targetTile[floor(b/6)*6+1].tilePosition.x<0||this.targetTile[floor(b/6)*6+1].occupied>0))&&
                                    !(b%6>=3&&(this.targetTile[floor(b/6)*6+2].tilePosition.x<0||this.targetTile[floor(b/6)*6+2].occupied>0))&&
                                    !(b%6>=4&&(this.targetTile[floor(b/6)*6+3].tilePosition.x<0||this.targetTile[floor(b/6)*6+3].occupied>0))&&
                                    !(b%6>=5&&(this.targetTile[floor(b/6)*6+4].tilePosition.x<0||this.targetTile[floor(b/6)*6+4].occupied>0))){
                                        this.activated=true
                                }
                            }
                        break
                        case 166:
                            for(let b=0,lb=this.targetTile.length;b<lb;b++){
                                if(
                                    this.battle.combatantManager.combatants[a].tilePosition.x==this.targetTile[b].tilePosition.x&&
                                    this.battle.combatantManager.combatants[a].tilePosition.y==this.targetTile[b].tilePosition.y&&
                                    !(b%2==1&&(this.targetTile[floor(b/2)*2].tilePosition.x<0||this.targetTile[floor(b/2)*2].occupied>0))){
                                        this.activated=true
                                }
                            }
                        break
                        case 214:
                            for(let b=0,lb=this.targetTile.length;b<lb;b++){
                                if(
                                    this.battle.combatantManager.combatants[a].tilePosition.x==this.targetTile[b].tilePosition.x&&
                                    this.battle.combatantManager.combatants[a].tilePosition.y==this.targetTile[b].tilePosition.y&&
                                    !(b==3&&(this.targetTile[0].tilePosition.x<0||this.targetTile[0].occupied>0))){
                                        this.activated=true
                                }
                            }
                        break
                        case 218:
                            for(let b=0,lb=this.targetTile.length;b<lb;b++){
                                if(
                                    this.battle.combatantManager.combatants[a].tilePosition.x==this.targetTile[b].tilePosition.x&&
                                    this.battle.combatantManager.combatants[a].tilePosition.y==this.targetTile[b].tilePosition.y&&
                                    !(b>=18&&(this.targetTile[b-18].tilePosition.x<0||this.targetTile[b-18].occupied>0))&&
                                    !(b>=36&&(this.targetTile[b-36].tilePosition.x<0||this.targetTile[b-36].occupied>0))){
                                            this.activated=true
                                }
                            }
                        break
                        case 221:
                            for(let b=0,lb=this.targetTile.length;b<lb;b++){
                                if(
                                    this.battle.combatantManager.combatants[a].tilePosition.x==this.targetTile[b].tilePosition.x&&
                                    this.battle.combatantManager.combatants[a].tilePosition.y==this.targetTile[b].tilePosition.y&&
                                    !(b>=3&&(this.targetTile[0].tilePosition.x<0||this.targetTile[0].occupied>0))&&
                                    !(b>=6&&(this.targetTile[3].tilePosition.x<0||this.targetTile[3].occupied>0))){
                                        this.activated=true
                                }
                            }
                        break
                    }
                }
            }
        }
    }
    deTarget(){
        for(let a=0,la=this.battle.combatantManager.combatants.length;a<la;a++){
            if(this.battle.combatantManager.combatants[a].team==0&&this.battle.combatantManager.combatants[a].target==this.id){
                this.battle.combatantManager.combatants[a].target=this.battle.players-1-this.battle.combatantManager.combatants[a].target
            }
        }
    }
    markTarget(){
        if(this.life>0&&!this.moved&&this.status.main[32]<=0&&this.status.main[51]<=0){
            let target=this.getTarget()
            this.targetTile=this.convertTile(target)
            switch(this.attack[this.intent].type){
                case 1: case 2: case 3: case 11: case 13: case 22: case 23: case 31: case 34: case 35:
                case 36: case 37: case 97: case 101: case 103: case 113: case 116: case 121: case 122: case 127:
                case 150: case 181: case 209: case 212:
                    if(this.targetTile[0].tilePosition.x>=0){
                        this.targetTile[0].target(this.activated?2:1,numeralizeDirection(0,directionCombatant(this.targetTile[0],this)))
                    }
                break
                case 6: case 7: case 14: case 15: case 19: case 20: case 24: case 27: case 30: case 32:
                case 33: case 61: case 62: case 66: case 67: case 76: case 77: case 96: case 99: case 107:
                case 112: case 137: case 138: case 139: case 149: case 156: case 183: case 203: case 211: case 223:
                case 224:
                    for(let b=0,lb=this.targetTile.length;b<lb;b++){
                        if(
                            this.targetTile[b].tilePosition.x>=0&&
                            !(b>=1&&(this.targetTile[0].tilePosition.x<0||this.targetTile[0].occupied>0))){
                                this.targetTile[b].target(this.activated?2:1,numeralizeDirection(0,directionCombatant(this.targetTile[b],this)))
                        }
                    }
                break
                case 8:
                    for(let b=0,lb=this.targetTile.length;b<lb;b++){
                        if(
                            this.targetTile[b].tilePosition.x>=0&&
                            !(b==1&&(this.targetTile[0].tilePosition.x<0||this.targetTile[0].occupied>0))){
                                this.targetTile[b].target(this.activated?4:3,numeralizeDirection(0,directionCombatant(this.targetTile[b],this)))
                        }
                    }
                break
                case 71: case 73: case 79: case 143: case 172:
                    for(let b=0,lb=this.targetTile.length;b<lb;b++){
                        if(
                            this.targetTile[b].tilePosition.x>=0&&
                            !(b>=1&&(this.targetTile[0].tilePosition.x<0||this.targetTile[0].occupied>0))&&
                            !(b>=2&&(this.targetTile[1].tilePosition.x<0||this.targetTile[1].occupied>0))){
                                this.targetTile[b].target(this.activated?2:1,numeralizeDirection(0,directionCombatant(this.targetTile[b],this)))
                        }
                    }
                break
                case 100:
                    for(let b=0,lb=this.targetTile.length;b<lb;b++){
                        if(
                            this.targetTile[b].tilePosition.x>=0&&
                            !(b>=1&&(this.targetTile[0].tilePosition.x<0||this.targetTile[0].occupied>0))&&
                            !(b>=2&&(this.targetTile[1].tilePosition.x<0||this.targetTile[1].occupied>0))&&
                            !(b>=3&&(this.targetTile[2].tilePosition.x<0||this.targetTile[2].occupied>0))){
                                this.targetTile[b].target(this.activated?2:1,numeralizeDirection(0,directionCombatant(this.targetTile[b],this)))
                        }
                    }
                break
                case 9: case 16: case 17: case 28: case 44: case 53: case 54: case 55: case 60: case 64:
                case 69: case 82: case 84: case 85: case 86: case 87: case 95: case 104: case 114: case 117:
                case 120: case 124: case 128: case 131: case 133: case 135: case 136: case 142: case 146: case 147:
                case 153: case 154: case 157: case 168: case 171: case 175: case 176: case 192: case 198: case 204:
                case 213: case 215: case 217: case 222:
                    for(let b=0,lb=this.targetTile.length;b<lb;b++){
                        if(this.targetTile[b].tilePosition.x>=0){
                            this.targetTile[b].target(this.activated?2:1,numeralizeDirection(0,directionCombatant(this.targetTile[b],this)))
                        }
                    }
                break
                case 105: case 132:
                    for(let b=0,lb=this.targetTile.length;b<lb;b++){
                        if(this.targetTile[b].tilePosition.x>=0){
                            this.targetTile[b].target(this.activated?4:3,numeralizeDirection(0,directionCombatant(this.targetTile[b],this)))
                        }
                    }
                break
                case 12: case 38: case 45: case 47: case 50: case 59: case 80: case 81: case 83: case 89:
                case 90: case 91: case 98: case 106: case 115: case 118: case 119: case 123: case 125: case 129:
                case 130: case 134: case 140: case 141: case 144: case 145: case 148: case 151: case 152: case 158:
                case 160: case 161: case 162: case 165: case 173: case 178: case 179: case 180: case 184: case 188:
                case 191: case 193: case 194: case 196: case 199: case 200: case 201: case 202: case 206: case 208:
                    for(let b=0,lb=this.targetTile.length;b<lb;b++){
                        if(
                            this.targetTile[b].tilePosition.x>=0&&
                            !(b>=1&&(this.targetTile[0].tilePosition.x<0||this.targetTile[0].occupied>0))&&
                            !(b>=2&&(this.targetTile[1].tilePosition.x<0||this.targetTile[1].occupied>0))&&
                            !(b>=3&&(this.targetTile[2].tilePosition.x<0||this.targetTile[2].occupied>0))&&
                            !(b>=4&&(this.targetTile[3].tilePosition.x<0||this.targetTile[3].occupied>0))&&
                            !(b>=5&&(this.targetTile[4].tilePosition.x<0||this.targetTile[4].occupied>0))){
                                this.targetTile[b].target(this.activated?2:1,numeralizeDirection(0,directionCombatant(this.targetTile[b],this)))
                        }
                    }
                break
                case 49: case 164: case 185: case 195: case 205: case 219:
                    for(let b=0,lb=this.targetTile.length;b<lb;b++){
                        if(
                            this.targetTile[b].tilePosition.x>=0&&
                            !(b%6>=1&&(this.targetTile[floor(b/6)*6].tilePosition.x<0||this.targetTile[floor(b/6)*6].occupied>0))&&
                            !(b%6>=2&&(this.targetTile[floor(b/6)*6+1].tilePosition.x<0||this.targetTile[floor(b/6)*6+1].occupied>0))&&
                            !(b%6>=3&&(this.targetTile[floor(b/6)*6+2].tilePosition.x<0||this.targetTile[floor(b/6)*6+2].occupied>0))&&
                            !(b%6>=4&&(this.targetTile[floor(b/6)*6+3].tilePosition.x<0||this.targetTile[floor(b/6)*6+3].occupied>0))&&
                            !(b%6>=5&&(this.targetTile[floor(b/6)*6+4].tilePosition.x<0||this.targetTile[floor(b/6)*6+4].occupied>0))){
                                this.targetTile[b].target(this.activated?2:1,numeralizeDirection(0,directionCombatant(this.targetTile[b],this)))
                        }
                    }
                break
                case 166:
                    for(let b=0,lb=this.targetTile.length;b<lb;b++){
                        if(
                            this.targetTile[b].tilePosition.x>=0&&
                            !(b%2==1&&(this.targetTile[floor(b/2)*2].tilePosition.x<0||this.targetTile[floor(b/2)*2].occupied>0))){
                                this.targetTile[b].target(this.activated?2:1,numeralizeDirection(0,directionCombatant(this.targetTile[b],this)))
                        }
                    }
                break
                case 214:
                    for(let b=0,lb=this.targetTile.length;b<lb;b++){
                        if(
                            this.targetTile[b].tilePosition.x>=0&&
                            !(b==3&&(this.targetTile[0].tilePosition.x<0||this.targetTile[0].occupied>0))){
                                this.targetTile[b].target(this.activated?2:1,numeralizeDirection(0,directionCombatant(this.targetTile[b],this)))
                        }
                    }
                break
                case 218:
                    for(let b=0,lb=this.targetTile.length;b<lb;b++){
                        if(
                            this.targetTile[b].tilePosition.x>=0&&
                            !(b>=18&&(this.targetTile[b-18].tilePosition.x<0||this.targetTile[b-18].occupied>0))&&
                            !(b>=36&&(this.targetTile[b-36].tilePosition.x<0||this.targetTile[b-36].occupied>0))){
                                this.targetTile[b].target(this.activated?2:1,numeralizeDirection(0,directionCombatant(this.targetTile[b],this)))
                        }
                    }
                break
                case 221:
                    for(let b=0,lb=this.targetTile.length;b<lb;b++){
                        if(
                            this.targetTile[b].tilePosition.x>=0&&
                            !(b>=3&&(this.targetTile[0].tilePosition.x<0||this.targetTile[0].occupied>0))&&
                            !(b>=6&&(this.targetTile[3].tilePosition.x<0||this.targetTile[3].occupied>0))){
                                this.targetTile[b].target(this.activated?2:1,numeralizeDirection(0,directionCombatant(this.targetTile[b],this)))
                        }
                    }
                break
            }
        }
    }
    revive(){
        if(this.dead){
            this.dead=false
            this.fade=1
            this.startAnimation(0)
            this.runAnimation(0,0)
            this.goal.anim.sword=true
            for(let g=0;g<2;g++){
                this.anim.eye[g]=0
            }
            this.offset.position.y=0
        }
    }
    doubleHalf(){
        this.base.life/=2
        this.life=this.base.life
        for(let a=0,la=this.attack.length;a<la;a++){
            for(let b=0,lb=this.attack[a].effect.length;b<lb;b++){
                this.attack[a].effect[b]*=2
            }
        }
    }
    safeDamage(value){
        this.life=max(min(1,this.life),this.life-value)
    }
    takeDamage(value,user,spec=0){
        let damage=value
        if(value>0&&user>=0&&user<this.battle.combatantManager.combatants.length){
            let userCombatant=this.battle.combatantManager.combatants[user]
            let totalStr=0
            if(userCombatant.status.main[12]>0){
                damage+=userCombatant.status.main[12]
            }
            if(userCombatant.status.main[40]>0){
                damage+=userCombatant.status.main[40]
            }
            if(userCombatant.status.main[75]>0){
                damage-=userCombatant.status.main[75]
            }
            if(userCombatant.status.main[6]!=0){
                totalStr+=userCombatant.status.main[6]
            }
            if(userCombatant.status.main[17]!=0){
                totalStr+=userCombatant.status.main[17]
            }
            if(totalStr>0){
                damage*=1+totalStr*0.2
            }else if(totalStr<0){
                damage*=max(0.2,1+totalStr*0.1)
            }
            if(userCombatant.status.main[8]>0){
                damage*=0.75
            }
            if(this.block>0&&this.battle.relicManager.hasRelic(69,userCombatant.id)){
                damage+=4
            }
        }
        damage=round(damage*10)/10
        if(damage>0&&this.life>0){
            let hit=true
            if(user>=0&&user<this.battle.combatantManager.combatants.length){
                let userCombatant=this.battle.combatantManager.combatants[user]
                if(userCombatant.status.main[0]>0){
                    damage*=2
                }
                if(this.status.main[3]>0){
                    this.status.main[3]--
                    hit=false
                    this.dodges.push({timer:0,direction:atan2(userCombatant.relativePosition.x-this.relativePosition.x,userCombatant.relativePosition.y-this.relativePosition.y)-90+180*floor(random(0,2))})
                }
            }
            if(this.status.main[21]>0){
                this.status.main[21]--
                hit=false
                this.infoAnim.upFlash[2]=true
            }
            if(this.status.main[43]>0){
                this.statusEffect('Strength',this.status.main[43])
            }
            if(this.status.main[56]>0){
                this.statusEffect('Strength',this.status.main[56])
            }
            if(this.status.main[64]>0){
                this.statusEffect('Energy Next Turn',this.status.main[64])
            }
            if(this.status.main[63]>0){
                damage+=this.status.main[63]
            }
            if(this.battle.relicManager.hasRelic(55,this.id)){
                damage=max(min(damage,1),damage-this.battle.relicManager.active[55])
            }
            if(this.battle.relicManager.hasRelic(56,this.id)&&damage>1&&damage<=5){
                damage=1
            }
            if(this.status.main[10]>0){
                damage*=1.5
            }
            if(this.status.main[24]>0){
                damage*=0.5
            }
            if(this.status.main[53]>0){
                damage*=0.333
            }
            if(this.status.main[57]>0){
                damage*=0.75
            }
            if(this.status.main[25]>0&&damage>1){
                damage=1
            }
            if(this.status.main[51]>0){
                this.status.main[51]=0
            }
            if(this.status.main[14]>0){
                this.status.main[14]--
            }
            if(hit){
                if(this.block>=damage&&spec!=2){
                    this.block-=damage
                    this.infoAnim.upFlash[1]=true
                    this.blocked=0
                    this.taken=0
                    if(this.id<this.battle.players){
                        this.battle.stats.taken[this.id][1]+=damage
                    }
                    if(this.block<=0&&0<=user&&user<this.battle.players&&this.battle.relicManager.hasRelic(124,user)){
                        this.statusEffect('Vulnerable',2)
                    }
                }else if(this.block>0&&spec!=2){
                    let damageLeft=damage-this.block
                    this.taken=damageLeft
                    if(this.id<this.battle.players){
                        this.battle.stats.taken[this.id][1]+=this.block
                        this.battle.stats.taken[this.id][2]+=damageLeft
                        this.battle.cardManagers[this.id].allGroupEffect(16)
                    }
                    this.block=0
                    this.life-=damageLeft
                    this.infoAnim.upFlash[0]=true
                    this.battle.relicManager.activate(6,[this.id])
                    this.blocked=1
                    if(0<=user&&user<this.battle.players&&this.battle.relicManager.hasRelic(124,user)){
                        this.statusEffect('Vulnerable',2)
                    }
                }else{
                    this.life-=damage
                    this.taken=damage
                    this.infoAnim.upFlash[0]=true
                    this.battle.relicManager.activate(6,[this.id])
                    this.blocked=2
                    if(this.id<this.battle.players){
                        this.battle.stats.taken[this.id][2]+=damage
                        this.battle.cardManagers[this.id].allGroupEffect(16)
                    }
                }
                this.battle.particleManager.createDamageNumber(this.position.x,this.position.y,damage)
                if(this.battle.turn.main<this.battle.players&&this.team==0){
                    this.battle.stats.damage[this.battle.turn.main]+=damage
                    if(user>=0&&user<this.battle.combatantManager.combatants.length){
                        let userCombatant=this.battle.combatantManager.combatants[user]
                        userCombatant.combo+=1+userCombatant.status.main[68]
                    }
                }
                if(this.id<this.battle.players){
                    this.battle.stats.taken[this.id][0]+=damage
                }
                if(this.life>0&&user>=0&&user<this.battle.combatantManager.combatants.length&&spec==0){
                    let userCombatant=this.battle.combatantManager.combatants[user]
                    if(this.status.main[1]>0){
                        this.battle.turnManager.turns.splice(1,0,new turn(3,this.battle,0,0,this.id))
                        this.battle.turnManager.turns[1].target=[user]
                        this.battle.turnManager.turns.splice(2,0,new turn(0,this.battle,1,[this.status.main[1]],this.id))
                    }
                    if(this.status.main[36]>0){
                        this.battle.turnManager.turnsBack.push(new turn(3,this.battle,0,0,this.id))
                        this.battle.turnManager.turnsBack[this.battle.turnManager.turnsBack.length-1].target=[user]
                        this.battle.turnManager.turnsBack.push(new turn(0,this.battle,1,[this.status.main[36]],this.id))
                    }
                    if(this.status.main[38]>0){
                        this.battle.turnManager.turns.splice(1,0,new turn(3,this.battle,0,0,this.id))
                        this.battle.turnManager.turns[1].target=[user]
                        this.battle.turnManager.turns.splice(2,0,new turn(0,this.battle,3,[0],this.id))
                    }
                    if(this.status.main[39]>0){
                        this.battle.turnManager.turns.splice(1,0,new turn(3,this.battle,0,0,this.id))
                        this.battle.turnManager.turns[1].target=[user]
                        this.battle.turnManager.turns.splice(2,0,new turn(0,this.battle,58,[this.status.main[39]],this.id))
                    }
                    if(this.status.main[47]>0){
                        this.battle.turnManager.turnsBack.push(new turn(3,this.battle,0,0,this.id))
                        this.battle.turnManager.turnsBack[this.battle.turnManager.turnsBack.length-1].target=[user]
                        this.battle.turnManager.turnsBack.push(new turn(0,this.battle,1,[this.status.main[47]],this.id))
                    }
                    if(this.status.main[73]>0){
                        this.battle.turnManager.turns.splice(1,0,new turn(3,this.battle,0,0,this.id))
                        this.battle.turnManager.turns[1].target=[user]
                        this.battle.turnManager.turns.splice(2,0,new turn(0,this.battle,6,[this.status.main[73]],this.id))
                    }
                    if(this.status.main[44]>0&&this.life<=0){
                        userCombatant.statusEffect('Weak',this.status.main[44])
                    }
                    if(this.status.main[45]>0&&this.life<=0){
                        userCombatant.statusEffect('Vulnerable',this.status.main[45])
                    }
                    if(this.battle.relicManager.hasRelic(61,this.id)){
                        userCombatant.takeDamage(3*this.battle.relicManager.active[61],-1)
                    }
                    if(this.blocked>0&&this.battle.relicManager.hasRelic(74,this.id)){
                        userCombatant.statusEffect('Weak Next Turn',this.battle.relicManager.active[74])
                    }
                    if(this.blocked==0&&this.battle.relicManager.hasRelic(75,this.id)){
                        userCombatant.statusEffect('Weak Next Turn',this.battle.relicManager.active[75])
                    }
                    if(this.status.main[26]>0){
                        userCombatant.takeDamage(this.status.main[26],-1)
                    }
                    if(this.status.main[78]>0){
                        userCombatant.takeDamage(this.status.main[78],-1)
                    }
                    if(this.status.main[50]>0){
                        this.addBlock(this.status.main[50])
                        this.status.main[50]=0
                    }
                }
            }
        }
        if(this.spec.includes(6)&&this.life<=this.threshold){
            this.threshold-=20
            this.battle.combatantManager.summonCombatant(this.tilePosition,findName('Slime',types.combatant),this.goal.anim.direction)
        }
        if(this.spec.includes(10)&&this.battle.turn.main<this.battle.players&&!this.aggressor){
            this.battle.turnManager.loadEnemyAttackRepeat(this.id)
            this.aggressor=true
        }
    }
    addBlock(value){
        if(value>0&&this.status.main[16]<=0){
            let block=value
            let totalDex=0
            if(this.status.main[7]!=0){
                totalDex+=this.status.main[7]
            }
            if(this.status.main[18]!=0){
                totalDex+=this.status.main[18]
            }
            if(totalDex>0){
                block*=1+totalDex*0.2
            }else if(totalDex<0){
                block*=max(0.2,1+totalDex*0.1)
            }
            if(this.status.main[9]>0){
                block*=0.75
            }
            if(this.status.main[65]>0){
                block*=2
            }
            block=round(block*10)/10
            if(this.status.main[70]>0){
                this.combo+=this.status.main[70]
            }
            if(block>=0){
                this.block+=block
                if(this.id<this.battle.players){
                    this.battle.stats.block[this.id]+=block
                }
            }
        }
    }
    endBlock(){
        if(this.status.main[11]>0){
            this.status.main[11]--
        }else{
            this.block=this.battle.relicManager.hasRelic(26,this.id)?max(0,this.block-10):0
        }
    }
    moveTile(direction,speed){
        this.position.x+=sin(direction)*speed
        this.position.y+=cos(direction)*speed
        this.battle.combatantManager.sort()
    }
    moveRelativeTile(direction,speed){
        this.relativePosition.x+=lsin(direction)*speed
        this.relativePosition.y+=lcos(direction)*speed
    }
    moveTilePosition(x,y){
        if(this.id<this.battle.players){
            let distance=distTarget(0,x-this.tilePosition.x,y-this.tilePosition.y)
            this.battle.stats.move[this.id]+=distance
            if(this.battle.relicManager.hasRelic(100,this.id)){
                this.addBlock(2*distance*this.battle.relicManager.active[100])
            }
        }
        this.tilePosition.x=x
        this.tilePosition.y=y
        if(this.spec.includes(5)){
            let tile=this.battle.tileManager.getTileIndex(this.tilePosition.x,this.tilePosition.y)
            if(tile>=0){
                this.battle.tileManager.tiles[tile].addType(6)
            }
        }
    }
    clearStatus(){
        for(let a=0,la=this.status.main.length;a<la;a++){
            this.status.main[a]=0
        }
    }
    statusEffect(name,value){
        if(!(
            this.battle.relicManager.hasRelic(23,this.id)&&name=='Weak'||
            this.battle.relicManager.hasRelic(24,this.id)&&name=='Frail'||
            this.battle.relicManager.hasRelic(25,this.id)&&name=='Vulnerable')){
            let status=findList(name,this.status.name)
            if(status>=0){
                if(this.status.main[15]>0&&((this.status.class[status]==1||this.status.class[status]==3)&&value>0||(this.status.class[status]==0||this.status.class[status]==2)&&value<0)){
                    this.status.main[15]--
                }else if(this.status.main[46]>0&&((this.status.class[status]==0||this.status.class[status]==2)&&value>0||(this.status.class[status]==1||this.status.class[status]==3)&&value<0)){
                    this.status.main[46]--
                }else{
                    this.status.main[status]+=value
                }
            }
            if(status==32){
                this.battle.updateTargetting()
            }
        }
    }
    statusEffectNext(name,value){
        if(!(
            this.battle.relicManager.hasRelic(23,this.id)&&name=='Weak'||
            this.battle.relicManager.hasRelic(24,this.id)&&name=='Frail'||
            this.battle.relicManager.hasRelic(25,this.id)&&name=='Vulnerable')){
            let status=findList(name,this.status.name)
            if(status>=0){
                if(this.status.main[15]>0&&((this.status.class[status]==1||this.status.class[status]==3)&&value>0||(this.status.class[status]==0||this.status.class[status]==2)&&value<0)){
                    this.status.main[15]--
                }else if(this.status.main[46]>0&&((this.status.class[status]==0||this.status.class[status]==2)&&value>0||(this.status.class[status]==1||this.status.class[status]==3)&&value<0)){
                    this.status.main[46]--
                }else{
                    this.status.next[status]+=value
                }
            }
            if(status==32){
                this.battle.updateTargetting()
            }
        }
    }
    deStatus(name,value){
        this.statusEffect(name,-value)
        let status=findList(name,this.status.name)
        if(status>=0){
            this.status.main[status]=max(0,this.status.main[status])
        }
    }
    getStatus(name){
        return this.status.main[findList(name,this.status.name)]
    }
    randomStatusInstant(effect,classes){
        let list=[]
        for(let a=0,la=this.status.class.length;a<la;a++){
            if(cllasses.includes(this.status.class[a])){
                list.push(a)
            }
        }
        if(list.length>0){
            this.statusEffect(this.status.name[list[floor(random(0,list.length))]],effect)
        }
    }
    randomStatus(effect,classes){
        let list=[]
        for(let a=0,la=this.status.class.length;a<la;a++){
            if(classes.includes(this.status.class[a])){
                list.push(a)
            }
        }
        if(list.length>0){
            this.statusEffectNext(this.status.name[list[floor(random(0,list.length))]],effect)
        }
    }
    heal(amount){
        if(!this.battle.relicManager.hasRelic(163,this.id)&&amount>0){
            let gain=amount
            if(this.battle.relicManager.hasRelic(53,this.id)){
                gain*=1.5
            }
            this.life=min(this.life+ceil(gain),this.base.life)
        }
    }
    gainMaxHP(amount){
        this.base.life+=amount
        this.life+=amount
    }
    loseMaxHP(amount){
        this.base.life-=amount
        this.life=min(this.life,this.base.life)
    }
    tick(){
        for(let a=0,la=this.status.main.length;a<la;a++){
            if(this.status.main[a]!=0){
                switch(a){
                    case 4: this.battle.energy.main[this.id]+=this.status.main[a]; break
                    case 5: case 31: case 49: case 52: case 62: this.takeDamage(this.status.main[a],-1); break
                    case 13: case 14: case 19: this.addBlock(this.status.main[a]); break
                    case 20: this.status.main[findList('Weak',this.status.name)]+=this.status.main[a]; break
                    case 29: this.status.main[findList('Cannot Move',this.status.name)]+=this.status.main[a]; break
                    case 30: case 55: this.status.main[findList('Strength',this.status.name)]+=this.status.main[a]; break
                    case 33: this.heal(this.status.main[a]); break
                    case 34: this.status.main[findList('Dexterity',this.status.name)]+=this.status.main[a]; break
                    case 37: this.status.main[findList('Cannot Gain Block',this.status.name)]+=this.status.main[a]; break
                    case 41: this.battle.cardManagers[this.id].tempDraw+=this.status.main[a]; break
                    case 58: this.status.main[findList('Temporary Strength',this.status.name)]+=this.status.main[a]; break
                    case 66: for(let b=0,lb=this.status.main[a];b<lb;b++){this.battle.cardManagers[this.id].hand.add(findName('Shiv',types.card),0,0)} break
                    case 67: this.combo=0; break
                    case 71: case 72: this.combo+=this.status.main[a]; break

                }
                if(this.status.behavior[a]==1||this.status.behavior[a]==3&&this.team<=0){
                    if(this.status.main[a]>0){
                        this.status.main[a]--
                    }else if(this.status.main[a]<0){
                        this.status.main[a]++
                    }
                }else if(this.status.behavior[a]==2){
                    this.status.main[a]=0
                }
            }
        }
        for(let a=0,la=this.status.next.length;a<la;a++){
            if(this.status.next[a]!=0){
                this.status.main[a]+=this.status.next[a]
                this.status.next[a]=0
            }
        }
    }
    tickEarly(){
        for(let a=0,la=this.status.main.length;a<la;a++){
            if(this.status.main[a]!=0){
                if(this.status.behavior[a]==3&&this.team>0){
                    if(this.status.main[a]>0){
                        this.status.main[a]--
                    }else if(this.status.main[a]<0){
                        this.status.main[a]++
                    }
                }
            }
        }
    }
    flashColor(color){
        return mergeColor(mergeColor(mergeColor(
            color,[125,255,0],this.infoAnim.flash[2]),
            [150,150,150],this.infoAnim.flash[1]),
            [200,0,0],this.infoAnim.flash[0])
    }
    startAnimation(type){
        switch(this.name){
            case 'George': case 'Lira': case 'Sakura': case 'Certes': case 'Ume':
                switch(type){
                    case 0:
                        this.animSet.loop=0
                        this.animSet.flip=floor(random(0,2))
                        if(this.name=='Sakura'){
                            this.goal.anim.sword=true
                        }
                    break
                    case 1: case 2: case 10: case 13: case 16:
                        this.animSet.loop=0
                        this.goal.anim.sword=true
                    break
                    case 3: case 6: case 8: case 9: case 17: case 23: case 26: case 28: case 29: case 31:
                        this.animSet.loop=0
                        this.goal.anim.sword=false
                    break
                    case 4: case 12: case 14: case 15: case 18: case 19: case 20: case 22: case 24: case 25:
                    case 30:
                        this.animSet.loop=0
                    break
                    case 5:
                        this.animSet.loop=0
                        this.anim.eyeStyle=[2,2]
                    break
                    case 7:
                        this.animSet.loop=0
                        this.goal.anim.sword=false
                        this.anim.eyeStyle=[0,0]
                    break
                    case 11:
                        this.animSet.loop=0
                        this.goal.anim.sword=false
                        this.anim.eyeStyle=[0,0]
                    break
                    case 21:
                        this.animSet.loop=0
                        this.goal.anim.sword=true
                        this.anim.eyeStyle=[1,1]
                    break
                    case 27:
                        this.animSet.loop=0
                        this.goal.anim.sword=false
                        this.goal.anim.sword2=true
                    break
                }
            break
            case 'Duck': case 'Fungal Duck': case 'Duckforce': case 'Big Duck': case 'Agent Duck': case 'General Duckion': case 'Blue Duck': case 'Management Autoduck':
            case 'Slime': case 'Big Slime': case 'Spike Slime': case 'Big Spike Slime': case 'Slimoid': case 'Big Slimoid':
            case 'Modicum': case 'Rock Golem': case 'Shield Particle':  case 'Bush Thing': case 'Fireball': case 'Fungling': case 'Bee': case 'Pixie': case 'Darkblot':
                switch(type){
                    case 0:
                        this.animSet.loop=0
                        this.animSet.flip=floor(random(0,2))
                    break
                    case 2: case 3: case 4: case 6: case 7: case 10:
                        this.animSet.loop=0
                    break
                }
            break
            case 'Orb Walker': case 'Spheron': case 'Flame': case 'Hexaghost Orb': case 'Hexaghost Core': case 'Flying Rock': case 'Repulsor': case 'Dead Shell': case 'Louse': case 'Hwurmp': case 'Glimerrer': case 'Antihwurmp': case 'Host': case 'Host Drone':
                this.animSet.loop=0
            break
            case 'Bronze Orb C': case 'Bronze Orb A': case 'Sentry': case 'Management Drone': case 'Personnel Carrier': break
            default:
                switch(type){
                    case 0: case 2: case 4: case 6:
                        this.animSet.loop=0
                        this.animSet.flip=floor(random(0,2))
                        if((this.name=='Goon'||this.name=='Slaver'||this.name=='Pointy'||this.name=='Romeo'||this.name=='Batter'||this.name=='Swordmaster'||this.name=='Champion'||this.name=='Purge X02'||this.name=='Vengeful'||this.name=='Lunaria'||this.name=='Divine Guard'||this.name=='Avant Guard')&&(type==2||type==6)){
                            this.animSet.loop=0
                            this.goal.anim.sword=true
                        }
                    break
                    case 1: case 3: case 5: case 7: case 8: case 9: case 10: case 11: case 12: case 13: case 14:
                        this.animSet.loop=0
                    break
                }
            break
        }
    }
    runAnimation(rate,type){
        switch(this.name){
            case 'George': case 'Lira': case 'Sakura': case 'Certes': case 'Ume':
                switch(type){
                    case 0:
                        this.animSet.loop+=rate
                        if(this.animSet.loop>=1){
                            this.animSet.loop-=1
                            this.animSet.flip=1-this.animSet.flip
                        }
                        this.animSet.flip=round(this.animSet.flip)
                        for(let g=0;g<2;g++){
                            if(lsin((this.animSet.loop+this.animSet.flip+g)*180)>=0){
                                this.anim.legs[g].top=9+lsin((this.animSet.loop+this.animSet.flip+g)*180)*27
                                this.anim.legs[g].bottom=lsin((this.animSet.loop+this.animSet.flip+g)*180)*21
                                this.spin.legs[g].top=(60+lsin((this.animSet.loop+this.animSet.flip+g)*180)*-30)*(g*2-1)
                                this.spin.legs[g].bottom=(120+lsin((this.animSet.loop+this.animSet.flip+g)*180)*-90)*(g*2-1)
                                this.anim.arms[g].top=24+lsin((this.animSet.loop+this.animSet.flip+g)*180)*6
                                this.anim.arms[g].bottom=9+lsin((this.animSet.loop+this.animSet.flip+g)*180)*9
                                this.spin.arms[g].top=(93+lsin((this.animSet.loop+this.animSet.flip+g)*180)*24)*(g*2-1)
                                this.spin.arms[g].bottom=(75+lsin((this.animSet.loop+this.animSet.flip+g)*180)*36)*(g*2-1)
                            }else{
                                this.anim.legs[g].top=9+lsin((this.animSet.loop+this.animSet.flip+g)*180)*-9
                                this.anim.legs[g].bottom=lsin((this.animSet.loop+this.animSet.flip+g)*180)*-30
                                this.spin.legs[g].top=(60+lsin((this.animSet.loop+this.animSet.flip+g)*180)*-60)*(g*2-1)
                                this.spin.legs[g].bottom=(120+lsin((this.animSet.loop+this.animSet.flip+g)*180)*-30)*(g*2-1)
                                this.anim.arms[g].top=24-lsin((this.animSet.loop+this.animSet.flip+g)*180)*3
                                this.anim.arms[g].bottom=9-lsin((this.animSet.loop+this.animSet.flip+g)*180)*18
                                this.spin.arms[g].top=(93-lsin((this.animSet.loop+this.animSet.flip+g)*180)*-24)*(g*2-1)
                                this.spin.arms[g].bottom=(75-lsin((this.animSet.loop+this.animSet.flip+g)*180)*-18)*(g*2-1)
                            }
                        }
                        if(this.name=='Lira'||this.name=='Sakura'||this.name=='Ume'){
                            this.fades.kimono.main.back.x=1+abs(lsin(this.animSet.loop*180))*0.1
                            this.fades.kimono.main.front.x=1+abs(lsin(this.animSet.loop*180))*0.1
                            this.fades.kimono.main.back.y=1-abs(lsin(this.animSet.loop*180))*0.05
                            this.fades.kimono.main.front.y=1-abs(lsin(this.animSet.loop*180))*0.05
                            if(this.name!='Ume'){
                                this.fades.kimono.outside.back.x=1+abs(lsin(this.animSet.loop*180))*0.1
                                this.fades.kimono.outside.front.x=1+abs(lsin(this.animSet.loop*180))*0.1
                                this.fades.kimono.outside.back.y=1-abs(lsin(this.animSet.loop*180))*0.05
                                this.fades.kimono.outside.front.y=1-abs(lsin(this.animSet.loop*180))*0.05
                            }
                            this.fades.kimono.decoration.position.x=1+abs(lsin(this.animSet.loop*180))*0.1
                            this.fades.kimono.decoration.position.y=1-abs(lsin(this.animSet.loop*180))*0.05
                        }
                    break
                    case 1:
                        this.animSet.loop+=rate
                        this.anim.arms[this.animSet.hand].top=24+lsin(this.animSet.loop*180)*27
                        this.anim.arms[this.animSet.hand].bottom=9+lsin(this.animSet.loop*180)*45
                        this.spin.arms[this.animSet.hand].top=(93-lsin(this.animSet.loop*180)*72)*(this.animSet.hand*2-1)
                        this.spin.arms[this.animSet.hand].bottom=(75-lsin(this.animSet.loop*180)*105)*(this.animSet.hand*2-1)
                        this.spin.sword=75+lsin(this.animSet.loop*180)*30
                    break
                    case 2:
                        this.animSet.loop+=rate
                        if(this.name=='Lira'||this.name=='Sakura'||this.name=='Ume'){
                            this.anim.arms[this.animSet.hand].top=24+lsin(this.animSet.loop*180)*36
                            this.anim.arms[this.animSet.hand].bottom=9+lsin(this.animSet.loop*180)*96
                            this.spin.arms[this.animSet.hand].top=(93-lsin(this.animSet.loop*180)*63)*(this.animSet.hand*2-1)
                            this.spin.arms[this.animSet.hand].bottom=(75-lsin(this.animSet.loop*180)*90)*(this.animSet.hand*2-1)
                            this.spin.sword=75+lsin(this.animSet.loop*180)*45
                        }else{
                            for(let g=0;g<2;g++){
                                if(lsin((this.animSet.loop+this.animSet.flip+g)*180)>=0){
                                    this.anim.arms[g].top=24+lsin((this.animSet.loop+this.animSet.flip+g)*180)*36
                                    this.anim.arms[g].bottom=9+lsin((this.animSet.loop+this.animSet.flip+g)*180)*96
                                    this.spin.arms[g].top=(93-lsin((this.animSet.loop+this.animSet.flip+g)*180)*63)*(g*2-1)
                                    this.spin.arms[g].bottom=(75-lsin((this.animSet.loop+this.animSet.flip+g)*180)*90)*(g*2-1)
                                }
                            }
                        }
                    break
                    case 3:
                        this.animSet.loop+=rate
                        for(let g=0;g<2;g++){
                            this.anim.arms[g].top=24+lsin(this.animSet.loop*90)*24
                            this.anim.arms[g].bottom=9+lsin(this.animSet.loop*90)*87
                            this.spin.arms[g].top=(93+lsin(this.animSet.loop*90)*-63)*(g*2-1)
                            this.spin.arms[g].bottom=(75+lsin(this.animSet.loop*90)*-60)*(g*2-1)
                        }
                    break
                    case 4:
                        this.animSet.loop+=rate
                        for(let g=0;g<2;g++){
                            this.anim.arms[g].top=24+abs(lsin(this.animSet.loop*90))*12
                            this.anim.arms[g].bottom=9+abs(lsin(this.animSet.loop*90))*15
                        }
                    break
                    case 5:
                        this.animSet.loop+=rate
                        for(let g=0;g<2;g++){
                            this.anim.eye[g]=constrain(abs(lsin(this.animSet.loop*90))*1.5,0,1)
                        }
                    break
                    case 6:
                        this.animSet.loop+=rate
                        this.anim.arms[this.animSet.hand].top=24+lsin(this.animSet.loop*90)*6
                        this.anim.arms[this.animSet.hand].bottom=9+lsin(this.animSet.loop*90)*36
                        this.spin.arms[this.animSet.hand].top=(93+lsin(this.animSet.loop*90)*-63)*(this.animSet.hand*2-1)
                        this.spin.arms[this.animSet.hand].bottom=(75+lsin(this.animSet.loop*90)*-120)*(this.animSet.hand*2-1)
                    break
                    case 7:
                        this.animSet.loop+=rate
                        for(let g=0;g<2;g++){
                            this.anim.arms[g].top=24-constrain(this.animSet.loop,0,1)*6
                            this.anim.arms[g].bottom=9+constrain(this.animSet.loop,0,1)*27
                            this.spin.arms[g].top=(93+constrain(this.animSet.loop,0,1)*27)*(g*2-1)
                            this.spin.arms[g].bottom=(75+constrain(this.animSet.loop,0,1)*45)*(g*2-1)
                            this.anim.legs[g].top=9+constrain(this.animSet.loop,0,1)*9
                            this.anim.legs[g].bottom=constrain(this.animSet.loop,0,1)*90
                            this.spin.legs[g].top=(60+constrain(this.animSet.loop,0,1)*30)*(g*2-1)
                            this.spin.legs[g].bottom=(120+constrain(this.animSet.loop,0,1)*30)*(g*2-1)
                            this.anim.eye[g]=constrain(this.animSet.loop,0,1)
                            if(this.name=='Lira'||this.name=='Sakura'||this.name=='Ume'){
                                this.anim.legs[g].length.sandal.back=15.5+constrain(this.animSet.loop,0,1)*0.5
                                this.anim.legs[g].length.sandal.front=14.5+constrain(this.animSet.loop,0,1)*1.5
                            }
                        }
                        this.offset.position.y=constrain(this.animSet.loop,0,1)*20
                    break
                    case 8:
                        this.animSet.loop+=rate
                        this.anim.legs[this.animSet.foot].top=9+lsin(this.animSet.loop*180)*63
                        this.anim.legs[this.animSet.foot].bottom=-lsin(this.animSet.loop*180)*12
                        this.spin.legs[this.animSet.foot].bottom=(120-lsin(this.animSet.loop*180)*60)*(this.animSet.foot*2-1)
                    break
                    case 9:
                        this.animSet.loop+=rate
                        this.anim.legs[this.animSet.foot].top=9+lsin(this.animSet.loop*90)*81
                        this.anim.legs[this.animSet.foot].bottom=lsin(this.animSet.loop*90)*75
                        this.spin.legs[this.animSet.foot].top=(60-lsin(this.animSet.loop*90)*45)*(this.animSet.foot*2-1)
                        this.spin.legs[this.animSet.foot].bottom=(120-lsin(this.animSet.loop*90)*105)*(this.animSet.foot*2-1)
                    break
                    case 10:
                        this.animSet.loop+=rate
                        this.goal.anim.direction+=rate*360
                        this.anim.direction+=rate*360
                        this.anim.arms[this.animSet.hand].top=24+lsin(this.animSet.loop*90)*60
                        this.anim.arms[this.animSet.hand].bottom=9+lsin(this.animSet.loop*90)*63
                        this.spin.sword=75+lsin(this.animSet.loop*90)*15
                    break
                    case 11:
                        this.animSet.loop+=rate
                        this.anim.arms[this.animSet.hand].top=24+lsin(this.animSet.loop*90)*3
                        this.anim.arms[this.animSet.hand].bottom=9+lsin(this.animSet.loop*90)*63
                        this.spin.arms[this.animSet.hand].top=(93+lsin(this.animSet.loop*90)*-57)*(this.animSet.hand*2-1)
                        this.spin.arms[this.animSet.hand].bottom=(75+lsin(this.animSet.loop*90)*-135)*(this.animSet.hand*2-1)
                        for(let g=0;g<2;g++){
                            this.anim.eye[g]=constrain(abs(lsin(this.animSet.loop*90))*1.5,0,1)
                        }
                    break
                    case 12:
                        this.animSet.loop+=rate
                        this.anim.arms[1-this.animSet.hand].top=24+lsin(this.animSet.loop*90)*21
                        this.anim.arms[1-this.animSet.hand].bottom=9+lsin(this.animSet.loop*90)*66
                        this.spin.arms[1-this.animSet.hand].top=(-93+lsin(this.animSet.loop*90)*48)*(this.animSet.hand*2-1)
                        this.spin.arms[1-this.animSet.hand].bottom=(-75+lsin(this.animSet.loop*90)*60)*(this.animSet.hand*2-1)
                    break
                    case 13:
                        this.animSet.loop+=rate
                        this.anim.arms[this.animSet.hand].top=24+lsin(this.animSet.loop*180)*51
                        this.anim.arms[this.animSet.hand].bottom=9+lsin(this.animSet.loop*180)*81
                        this.spin.arms[this.animSet.hand].top=(93-lsin(this.animSet.loop*180)*33)*(this.animSet.hand*2-1)
                        this.spin.arms[this.animSet.hand].bottom=(75-lsin(this.animSet.loop*180)*30)*(this.animSet.hand*2-1)
                        this.spin.sword=75+lsin(this.animSet.loop*180)*21
                    break
                    case 14:
                        this.animSet.loop+=rate
                        for(let g=0;g<2;g++){
                            this.anim.legs[g].top=9+lsin(this.animSet.loop*180)*27
                            this.anim.legs[g].bottom=lsin(this.animSet.loop*180)*12
                            this.spin.legs[g].top=(60+lsin(this.animSet.loop*180)*15)*(g*2-1)
                            this.spin.legs[g].bottom=(120-lsin(this.animSet.loop*180)*45)*(g*2-1)
                        }
                        this.offset.position.y=lsin(this.animSet.loop*180)*-20
                    break
                    case 15:
                        this.animSet.loop+=rate
                        this.anim.arms[1-this.animSet.hand].top=24+lsin(this.animSet.loop*90)*36
                        this.anim.arms[1-this.animSet.hand].bottom=9+lsin(this.animSet.loop*90)*87
                        this.spin.arms[1-this.animSet.hand].top=(-93+lsin(this.animSet.loop*90)*48)*(this.animSet.hand*2-1)
                        this.spin.arms[1-this.animSet.hand].bottom=(-75+lsin(this.animSet.loop*90)*60)*(this.animSet.hand*2-1)
                    break
                    case 16:
                        this.animSet.loop+=rate
                        this.anim.arms[this.animSet.hand].top=24+lsin(this.animSet.loop*180)*48
                        this.anim.arms[this.animSet.hand].bottom=9+lsin(this.animSet.loop*180)*111
                        this.spin.arms[this.animSet.hand].top=(93-lsin(this.animSet.loop*180)*63)*(this.animSet.hand*2-1)
                        this.spin.arms[this.animSet.hand].bottom=(75-lsin(this.animSet.loop*180)*90)*(this.animSet.hand*2-1)
                        this.spin.sword=75+lsin(this.animSet.loop*180)*45
                    break
                    case 17:
                        this.animSet.loop+=rate
                        for(let g=0;g<2;g++){
                            this.anim.arms[g].top=24+lsin(this.animSet.loop*180)*12
                            this.anim.arms[g].bottom=9+lsin(this.animSet.loop*180)*75
                            this.spin.arms[g].top=(93-lsin(this.animSet.loop*180)*33)*(g*2-1)
                            this.spin.arms[g].bottom=(75-lsin(this.animSet.loop*180)*30)*(g*2-1)
                        }
                    break
                    case 18:
                        this.animSet.loop+=rate
                        this.anim.arms[1-this.animSet.hand].top=24+lsin(this.animSet.loop*90)*36
                        this.anim.arms[1-this.animSet.hand].bottom=9+lsin(this.animSet.loop*90)*87
                        this.spin.arms[1-this.animSet.hand].top=(93-lsin(this.animSet.loop*90)*48)*(this.animSet.hand*2-1)
                        this.spin.arms[1-this.animSet.hand].bottom=(75-lsin(this.animSet.loop*90)*60)*(this.animSet.hand*2-1)
                    break
                    case 19:
                        this.animSet.loop+=rate
                        this.size=1-lsin(this.animSet.loop*180)
                    break
                    case 20:
                        this.animSet.loop+=rate
                        this.anim.arms[this.animSet.hand].top=24+lsin(this.animSet.loop*90)*36
                        this.anim.arms[this.animSet.hand].bottom=9+lsin(this.animSet.loop*90)*87
                        this.spin.arms[this.animSet.hand].top=(93-lsin(this.animSet.loop*90)*48)*(this.animSet.hand*2-1)
                        this.spin.arms[this.animSet.hand].bottom=(75-lsin(this.animSet.loop*90)*60)*(this.animSet.hand*2-1)
                    break
                    case 21:
                        this.animSet.loop+=rate
                        this.anim.arms[this.animSet.hand].top=24+lsin(this.animSet.loop*180)*36
                        this.anim.arms[this.animSet.hand].bottom=9+lsin(this.animSet.loop*180)*96
                        this.spin.arms[this.animSet.hand].top=(93-lsin(this.animSet.loop*180)*63)*(this.animSet.hand*2-1)
                        this.spin.arms[this.animSet.hand].bottom=(75-lsin(this.animSet.loop*180)*90)*(this.animSet.hand*2-1)
                        for(let g=0;g<2;g++){
                            this.anim.eye[g]=lsin(this.animSet.loop*180)
                        }
                        this.spin.sword=75+lsin(this.animSet.loop*180)*45
                        if(this.name=='Lira'){
                            this.parts.mouth=-65+lsin(this.animSet.loop*180)*-4
                            this.anim.mouth.y=abs(5-lsin(this.animSet.loop*180)*10)
                            this.spin.mouth=lsin(this.animSet.loop*180)>=0.5?36:216
                        }else if(this.name=='Sakura'){
                            this.anim.mouth.y=5+lsin(this.animSet.loop*180)
                        }else if(this.name=='Ume'){
                            this.parts.mouth=-65+lsin(this.animSet.loop*180)*-2
                            this.anim.mouth.y=abs(4-lsin(this.animSet.loop*180)*8)
                            this.spin.mouth=lsin(this.animSet.loop*180)>=0.5?36:216
                        }
                    break
                    case 22:
                        this.animSet.loop+=rate
                        this.anim.arms[1-this.animSet.hand].top=24+lsin(this.animSet.loop*180)*84
                        this.anim.arms[1-this.animSet.hand].bottom=9+lsin(this.animSet.loop*180)*135
                        this.spin.arms[1-this.animSet.hand].top=(93-lsin(this.animSet.loop*180)*57)*(1-this.animSet.hand*2)
                        this.spin.arms[1-this.animSet.hand].bottom=(75-lsin(this.animSet.loop*180)*69)*(1-this.animSet.hand*2)
                    break
                    case 23:
                        this.animSet.loop+=rate
                        this.anim.legs[this.animSet.foot].top=9+lsin(this.animSet.loop*90)*51
                        this.anim.legs[this.animSet.foot].bottom=lsin(this.animSet.loop*90)*48
                        this.spin.legs[this.animSet.foot].top=(60-lsin(this.animSet.loop*90)*45)*(this.animSet.foot*2-1)
                        this.spin.legs[this.animSet.foot].bottom=(120-lsin(this.animSet.loop*90)*105)*(this.animSet.foot*2-1)
                    break
                    case 24:
                        this.animSet.loop+=rate
                        this.offset.position.x=abs(lsin(this.animSet.loop*180))*lsin(this.anim.direction)*60
                        this.offset.position.y=abs(lsin(this.animSet.loop*180))*lcos(this.anim.direction)*30
                    break
                    case 25:
                        this.animSet.loop+=rate
                        this.anim.arms[1-this.animSet.hand].top=24+lsin(this.animSet.loop*90)*48
                        this.anim.arms[1-this.animSet.hand].bottom=9+lsin(this.animSet.loop*90)*84
                        this.spin.arms[1-this.animSet.hand].top=(93-lsin(this.animSet.loop*90)*48)*(1-this.animSet.hand*2)
                        this.spin.arms[1-this.animSet.hand].bottom=(75-lsin(this.animSet.loop*90)*60)*(1-this.animSet.hand*2)
                    break
                    case 26:
                        this.animSet.loop+=rate
                        this.anim.arms[this.animSet.hand].top=24+lsin(this.animSet.loop*90)*18
                        this.anim.arms[this.animSet.hand].bottom=9+lsin(this.animSet.loop*90)*75
                        this.spin.arms[this.animSet.hand].bottom=(75+lsin(this.animSet.loop*90)*30)*(this.animSet.hand*2-1)
                    break
                    case 27:
                        this.animSet.loop+=rate
                        this.anim.arms[1-this.animSet.hand].top=24+lsin(this.animSet.loop*90)*36
                        this.anim.arms[1-this.animSet.hand].bottom=9+lsin(this.animSet.loop*90)*96
                        this.spin.arms[1-this.animSet.hand].top=(93-lsin(this.animSet.loop*90)*63)*(1-this.animSet.hand*2)
                        this.spin.arms[1-this.animSet.hand].bottom=(75-lsin(this.animSet.loop*90)*90)*(1-this.animSet.hand*2)
                    break
                    case 28:
                        this.animSet.loop+=rate
                        this.anim.legs[this.animSet.foot].top=9+lsin(this.animSet.loop*90)*81
                        this.anim.legs[this.animSet.foot].bottom=lsin(this.animSet.loop*90)*75
                        this.spin.legs[this.animSet.foot].top=(60+lsin(this.animSet.loop*90)*45)*(this.animSet.foot*2-1)
                        this.spin.legs[this.animSet.foot].bottom=(120+lsin(this.animSet.loop*90)*105)*(this.animSet.foot*2-1)
                        this.offset.position.y=lsin(this.animSet.loop*90)*-30
                    break
                    case 29:
                        this.animSet.loop+=rate
                        for(let g=0;g<2;g++){
                            this.anim.arms[g].top=24+abs(lsin((this.animSet.loop+this.animSet.flip+g)*180))*60
                            this.anim.arms[g].bottom=9+abs(lsin((this.animSet.loop+this.animSet.flip+g)*180))*93
                            this.spin.arms[g].top=(93-abs(lsin((this.animSet.loop+this.animSet.flip+g)*180))*57)*(g*2-1)
                            this.spin.arms[g].bottom=(75-abs(lsin((this.animSet.loop+this.animSet.flip+g)*180))*60)*(g*2-1)
                        }
                    break
                    case 30:
                        this.animSet.loop+=rate
                        this.anim.arms[1-this.animSet.hand].top=24+lsin(this.animSet.loop*90)*111
                        this.anim.arms[1-this.animSet.hand].bottom=9+lsin(this.animSet.loop*90)*141
                        this.spin.arms[1-this.animSet.hand].top=(-93+lsin(this.animSet.loop*90)*33)*(this.animSet.hand*2-1)
                        this.spin.arms[1-this.animSet.hand].bottom=(-75+lsin(this.animSet.loop*90)*27)*(this.animSet.hand*2-1)
                    break
                    case 31:
                        this.animSet.loop+=rate
                        for(let a=0,la=2;a<la;a++){
                            this.anim.legs[this.animSet.foot+a*(1-this.animSet.foot)].top=9+lsin(this.animSet.loop*90)*81*(1-a*2)
                            this.anim.legs[this.animSet.foot+a*(1-this.animSet.foot)].bottom=lsin(this.animSet.loop*90)*75*(1-a*2)
                            this.spin.legs[this.animSet.foot+a*(1-this.animSet.foot)].top=(60-lsin(this.animSet.loop*90)*60)*(this.animSet.foot*2-1)*(1-a*2)
                            this.spin.legs[this.animSet.foot+a*(1-this.animSet.foot)].bottom=(120-lsin(this.animSet.loop*90)*120)*(this.animSet.foot*2-1)*(1-a*2)
                        }
                    break
                }
            break
            case 'Duck': case 'Fungal Duck': case 'Duckforce': case 'Big Duck': case 'Agent Duck': case 'General Duckion': case 'Blue Duck': case 'Management Autoduck':
                switch(type){
                    case 0:
                        this.animSet.loop+=rate
                        for(let g=0;g<2;g++){
                            this.spin.legs[g].top=(-90+lsin((this.animSet.loop+this.animSet.flip)*180)*75)*(g*2-1)
                            this.spin.arms[g].top=(-90+lsin((this.animSet.loop+this.animSet.flip)*180)*60)*(g*2-1)
                        }
                    break
                    case 2:
                        this.animSet.loop+=rate
                        for(let g=0;g<2;g++){
                            this.spin.arms[g].top=(-90+abs(lsin(this.animSet.loop*540)*75))*(g*2-1)
                            this.anim.arms[g].top=54+abs(lsin(this.animSet.loop*540))*30
                        }
                    break
                    case 3:
                        this.animSet.loop+=rate
                        this.offset.position.y=lsin(this.animSet.loop*180)*-10
                    break
                    case 7:
                        this.animSet.loop+=rate
                        for(let g=0;g<2;g++){
                            this.spin.arms[g].top+=rate*180
                        }
                    break
                }
            break
            case 'Orb Walker':
                switch(type){
                    case 0:
                        this.animSet.loop+=rate
                        for(let g=0;g<4;g++){
                            this.spin.legs[g].top=(-45+g*90+lsin(this.animSet.loop*720)*15*(g%2*2-1))
                        }
                    break
                    case 2:
                        this.animSet.loop+=rate
                        for(let g=0;g<4;g++){
                            this.spin.legs[g].top+=rate*360
                            this.anim.legs[g].top=39+lsin(this.animSet.loop*180)*36
                            this.anim.legs[g].length.top=36+lsin(this.animSet.loop*180)*12
                        }
                        this.offset.position.x=abs(lsin(this.animSet.loop*180))*lsin(this.anim.direction)*60
                        this.offset.position.y=abs(lsin(this.animSet.loop*180))*lcos(this.anim.direction)*30
                    break
                    case 6:
                        this.animSet.loop+=rate
                        this.goal.anim.direction+=rate*180
                        this.anim.direction+=rate*360
                        for(let g=0;g<4;g++){
                            this.anim.legs[g].top=39+lsin(this.animSet.loop*90)*51
                            this.anim.legs[g].length.top=36+lsin(this.animSet.loop*90)*24
                        }
                    break
                }
            break
            case 'Slime': case 'Big Slime': case 'Spike Slime': case 'Big Spike Slime': case 'Slime Boss': case 'Slimoid': case 'Big Slimoid':
            case 'Modicum': case 'Rock Golem': case 'Shield Particle':  case 'Bush Thing': case 'Fireball': case 'Fungling': case 'Bee': case 'Pixie': case 'Darkblot':
                switch(type){
                    case 0:
                        this.animSet.loop+=rate
                        for(let g=0;g<2;g++){
                            this.spin.arms[g].top=(-90+lsin((this.animSet.loop+this.animSet.flip)*180)*60)*(g*2-1)
                        }
                    break
                    case 1:
                        this.animSet.loop+=rate
                        for(let g=0;g<2;g++){
                            this.spin.arms[g].top=(-90+abs(lsin(this.animSet.loop*180)*60))*(g*2-1)
                        }
                    break
                    case 2: case 4:
                        this.animSet.loop+=rate
                        for(let g=0;g<2;g++){
                            this.spin.arms[g].top=(-90+abs(lsin(this.animSet.loop*360)*75))*(g*2-1)
                            this.anim.arms[g].top=54+abs(lsin(this.animSet.loop*360))*30
                        }
                    break
                    case 3:
                        this.animSet.loop+=rate
                        this.offset.position.y=lsin(this.animSet.loop*180)*-10
                    break
                    case 6:
                        this.animSet.loop+=rate
                        this.goal.anim.direction+=rate*180
                        this.anim.direction+=rate*180
                        for(let g=0;g<2;g++){
                            this.anim.arms[g].top=54+abs(lsin(this.animSet.loop*360))*30
                        }
                    break
                    case 7:
                        this.animSet.loop+=rate
                        for(let g=0;g<2;g++){
                            this.anim.arms[g].top=54+abs(lsin(this.animSet.loop*180))*96
                        }
                    break
                    case 10:
                        this.animSet.loop+=rate
                        this.size=1-lsin(this.animSet.loop*180)
                    break
                }
            break
            case 'Spheron': case 'Louse':
                switch(type){
                    case 2:
                        this.animSet.loop+=rate
                        this.offset.position.x=abs(lsin(this.animSet.loop*180))*lsin(this.anim.direction)*60
                        this.offset.position.y=abs(lsin(this.animSet.loop*180))*lcos(this.anim.direction)*30
                    break
                }
            break
            case 'Flame': case 'Hexaghost Orb': case 'Hexaghost Core':
                this.animSet.loop+=rate
                this.anim.glow=1+abs(lsin(this.animSet.loop*180))*0.5
            break
            case 'Flying Rock':
                switch(type){
                    case 0:
                        this.animSet.loop+=rate
                        this.goal.anim.direction+=rate*360
                        this.anim.direction+=rate*360
                    break
                    case 1:
                        this.animSet.loop+=rate
                        this.goal.anim.direction+=rate*360
                        this.anim.direction+=rate*360
                        this.offset.position.y=abs(lsin(this.animSet.loop*360))*20
                    break
                    case 2:
                        this.animSet.loop+=rate
                        this.goal.anim.direction+=rate*360
                        this.anim.direction+=rate*360
                        this.offset.position.x=abs(lsin(this.animSet.loop*180))*lsin(this.anim.direction)*60
                        this.offset.position.y=abs(lsin(this.animSet.loop*180))*lcos(this.anim.direction)*30
                    break
                }
            break
            case 'Repulsor':
                switch(type){
                    case 0:
                        this.animSet.loop+=rate
                        this.anim.body+=rate*180
                    break
                    case 2:
                        this.animSet.loop+=rate
                        this.anim.body+=rate*180
                        this.offset.position.x=abs(lsin(this.animSet.loop*180))*lsin(this.anim.direction)*60
                        this.offset.position.y=abs(lsin(this.animSet.loop*180))*lcos(this.anim.direction)*30
                    break
                    case 9:
                        this.animSet.loop+=rate
                        this.anim.body+=rate*180
                        this.offset.position.y=lsin(this.animSet.loop*180)*-20
                    break
                }
            break
            case 'Dead Shell':
                switch(type){
                    case 0:
                        this.animSet.loop+=rate
                        for(let g=0;g<4;g++){
                            this.spin.legs[g]=(-120+g*60+floor(g/2)*60+lsin(this.animSet.loop*720)*15*(g%2*2-1))
                        }
                    break
                    case 2:
                        this.animSet.loop+=rate
                        for(let g=0;g<4;g++){
                            this.spin.legs[g]+=rate*360
                        }
                    break
                    case 4:
                        this.animSet.loop+=rate
                        for(let g=0;g<4;g++){
                            this.spin.legs[g]+=rate*360*lcos(this.animSet.loop*180)
                        }
                    break
                }
            break
            case 'Hwurmp':
                switch(type){
                    case 9:
                        this.animSet.loop+=rate
                        this.anim.body=1+lsin(this.animSet.loop*180)
                    break
                }
            break
            case 'Antihwurmp':
                switch(type){
                    case 9:
                        this.animSet.loop+=rate
                        this.anim.body=2-lsin(this.animSet.loop*180)
                    break
                }
            break
            case 'Glimerrer':
                switch(type){
                    case 9:
                        this.animSet.loop+=rate
                        this.offset.position.y=lsin(this.animSet.loop*180)*-20
                    break
                }
            break
            case 'Host': case 'Host Drone':
                switch(type){
                    case 1: case 8:
                        this.animSet.loop+=rate
                        this.anim.body=lsin(this.animSet.loop*180)
                    break
                    case 2:
                        this.animSet.loop+=rate
                        this.offset.position.x=abs(lsin(this.animSet.loop*180))*lsin(this.anim.direction)*60
                        this.offset.position.y=abs(lsin(this.animSet.loop*180))*lcos(this.anim.direction)*30
                    break
                }
            break
            case 'Bronze Orb C': case 'Bronze Orb A': case 'Sentry': case 'Management Drone': case 'Personnel Carrier': break
            default:
                switch(type){
                    case 0:
                        if(this.name!='Jet'){
                            this.animSet.loop+=rate
                            if(this.animSet.loop>=1){
                                this.animSet.loop-=1
                                this.animSet.flip=1-this.animSet.flip
                            }
                            this.animSet.flip=round(this.animSet.flip)
                            for(let g=0;g<2;g++){
                                if(lsin((this.animSet.loop+this.animSet.flip+g)*180)>=0){
                                    this.anim.legs[g].top=9+lsin((this.animSet.loop+this.animSet.flip+g)*180)*27
                                    this.anim.legs[g].bottom=lsin((this.animSet.loop+this.animSet.flip+g)*180)*21
                                    this.spin.legs[g].top=(60+lsin((this.animSet.loop+this.animSet.flip+g)*180)*-30)*(g*2-1)
                                    this.spin.legs[g].bottom=(120+lsin((this.animSet.loop+this.animSet.flip+g)*180)*-90)*(g*2-1)
                                    this.anim.arms[g].top=24+lsin((this.animSet.loop+this.animSet.flip+g)*180)*6
                                    this.anim.arms[g].bottom=9+lsin((this.animSet.loop+this.animSet.flip+g)*180)*9
                                    this.spin.arms[g].top=(93+lsin((this.animSet.loop+this.animSet.flip+g)*180)*24)*(g*2-1)
                                    this.spin.arms[g].bottom=(75+lsin((this.animSet.loop+this.animSet.flip+g)*180)*36)*(g*2-1)
                                }else{
                                    this.anim.legs[g].top=9+lsin((this.animSet.loop+this.animSet.flip+g)*180)*-9
                                    this.anim.legs[g].bottom=lsin((this.animSet.loop+this.animSet.flip+g)*180)*-30
                                    this.spin.legs[g].top=(60+lsin((this.animSet.loop+this.animSet.flip+g)*180)*-60)*(g*2-1)
                                    this.spin.legs[g].bottom=(120+lsin((this.animSet.loop+this.animSet.flip+g)*180)*-30)*(g*2-1)
                                    this.anim.arms[g].top=24-lsin((this.animSet.loop+this.animSet.flip+g)*180)*3
                                    this.anim.arms[g].bottom=9-lsin((this.animSet.loop+this.animSet.flip+g)*180)*18
                                    this.spin.arms[g].top=(93-lsin((this.animSet.loop+this.animSet.flip+g)*180)*-24)*(g*2-1)
                                    this.spin.arms[g].bottom=(75-lsin((this.animSet.loop+this.animSet.flip+g)*180)*-18)*(g*2-1)
                                }
                            }
                        }
                    break
                    case 1:
                        this.animSet.loop+=rate
                        this.anim.arms[1].top=24+lsin(this.animSet.loop*180)*27
                        this.anim.arms[1].bottom=9+lsin(this.animSet.loop*180)*45
                        this.spin.arms[1].top=93-lsin(this.animSet.loop*180)*72
                        this.spin.arms[1].bottom=75-lsin(this.animSet.loop*180)*105
                    break
                    case 2:
                        this.animSet.loop+=rate
                        if(this.name=='Goon'||this.name=='Slaver'||this.name=='Pointy'||this.name=='Romeo'||this.name=='Batter'||this.name=='Swordmaster'||this.name=='Champion'||this.name=='Purge X02'||this.name=='Vengeful'||this.name=='Lunaria'||this.name=='Divine Guard'||this.name=='Avant Guard'){
                            this.anim.arms[0].top=24+lsin(this.animSet.loop*180)*36
                            this.anim.arms[0].bottom=9+lsin(this.animSet.loop*180)*96
                            this.spin.arms[0].top=-93+lsin(this.animSet.loop*180)*63
                            this.spin.arms[0].bottom=-75+lsin(this.animSet.loop*180)*90
                            this.spin.sword=75+lsin(this.animSet.loop*180)*45
                        }else{
                            for(let g=0;g<2;g++){
                                if(lsin((this.animSet.loop+this.animSet.flip+g)*180)>=0){
                                    this.anim.arms[g].top=24+lsin((this.animSet.loop+this.animSet.flip+g)*180)*36
                                    this.anim.arms[g].bottom=9+lsin((this.animSet.loop+this.animSet.flip+g)*180)*96
                                    this.spin.arms[g].top=(93-lsin((this.animSet.loop+this.animSet.flip+g)*180)*63)*(g*2-1)
                                    this.spin.arms[g].bottom=(75-lsin((this.animSet.loop+this.animSet.flip+g)*180)*90)*(g*2-1)
                                }
                            }
                        }
                    break
                    case 3:
                        this.animSet.loop+=rate
                        for(let g=0;g<2;g++){
                            this.anim.arms[g].top=24+lsin(this.animSet.loop*90)*24
                            this.anim.arms[g].bottom=9+lsin(this.animSet.loop*90)*87
                            this.spin.arms[g].top=(93+lsin(this.animSet.loop*90)*-63)*(g*2-1)
                            this.spin.arms[g].bottom=(75+lsin(this.animSet.loop*90)*-60)*(g*2-1)
                        }
                    break
                    case 4:
                        this.animSet.loop+=rate
                        for(let g=0;g<2;g++){
                            this.anim.arms[g].top=24+abs(lsin((this.animSet.loop+this.animSet.flip+g)*180))*60
                            this.anim.arms[g].bottom=9+abs(lsin((this.animSet.loop+this.animSet.flip+g)*180))*93
                            this.spin.arms[g].top=(93-abs(lsin((this.animSet.loop+this.animSet.flip+g)*180))*57)*(g*2-1)
                            this.spin.arms[g].bottom=(75-abs(lsin((this.animSet.loop+this.animSet.flip+g)*180))*60)*(g*2-1)
                        }
                    break
                    case 5:
                        this.animSet.loop+=rate
                        this.anim.arms[0].top=24+lsin(this.animSet.loop*90)*48
                        this.anim.arms[0].bottom=9+lsin(this.animSet.loop*90)*84
                        this.spin.arms[0].top=-93+lsin(this.animSet.loop*90)*48
                        this.spin.arms[0].bottom=-75+lsin(this.animSet.loop*90)*60
                    break
                    case 6:
                        this.animSet.loop+=rate
                        this.goal.anim.direction+=rate*180
                        this.anim.direction+=rate*180
                        this.anim.arms[0].top=24+lsin(this.animSet.loop*90)*60
                        this.anim.arms[0].bottom=9+lsin(this.animSet.loop*90)*63
                        this.spin.sword=75+lsin(this.animSet.loop*90)*15
                    break
                    case 7:
                        this.animSet.loop+=rate
                        for(let g=0;g<2;g++){
                            this.anim.arms[g].top=24+abs(lsin(this.animSet.loop*180))*12
                            this.anim.arms[g].bottom=9+abs(lsin(this.animSet.loop*180))*15
                        }
                    break
                    case 8:
                        this.animSet.loop+=rate
                        for(let g=0;g<2;g++){
                            this.anim.arms[g].top=24+abs(lsin(this.animSet.loop*180))*81
                            this.anim.arms[g].bottom=9+abs(lsin(this.animSet.loop*180))*126
                        }
                    break
                    case 9:
                        this.animSet.loop+=rate
                        for(let g=0;g<2;g++){
                            this.anim.legs[g].top=9+lsin(this.animSet.loop*180)*27
                            this.anim.legs[g].bottom=lsin(this.animSet.loop*180)*12
                            this.spin.legs[g].top=(60+lsin(this.animSet.loop*180)*15)*(g*2-1)
                            this.spin.legs[g].bottom=(120-lsin(this.animSet.loop*180)*45)*(g*2-1)
                        }
                        this.offset.position.y=lsin(this.animSet.loop*180)*-20
                    break
                    case 10:
                        this.animSet.loop+=rate
                        this.size=1-lsin(this.animSet.loop*180)
                    break
                    case 11:
                        this.animSet.loop+=rate
                        this.anim.mouth.x=8+lsin(this.animSet.loop*540)*6
                        this.anim.mouth.y=5+lsin(this.animSet.loop*540)*2
                    break
                    case 12:
                        this.animSet.loop+=rate
                        this.anim.legs[0].top=9+lsin(this.animSet.loop*90)*81
                        this.anim.legs[0].bottom=lsin(this.animSet.loop*90)*75
                        this.spin.legs[0].top=-60+lsin(this.animSet.loop*90)*45
                        this.spin.legs[0].bottom=-120+lsin(this.animSet.loop*90)*105
                    break
                    case 13:
                        this.animSet.loop+=rate
                        for(let g=0;g<2;g++){
                            this.anim.arms[g].top=24+abs(lsin((this.animSet.loop+g)*180))*21
                            this.anim.arms[g].bottom=9+abs(lsin((this.animSet.loop+g)*180))*66
                            this.spin.arms[g].top=(93-abs(lsin((this.animSet.loop+g)*180))*33)*(g*2-1)
                            this.spin.arms[g].bottom=(75-abs(lsin((this.animSet.loop+g)*180))*75)*(g*2-1)
                        }
                        this.size+=rate/8
                    break
                    case 14:
                        this.animSet.loop+=rate
                        this.anim.arms[1].top=24+lsin(this.animSet.loop*180)*27
                        this.anim.arms[1].bottom=9+lsin(this.animSet.loop*180)*45
                        this.spin.arms[1].top=93-lsin(this.animSet.loop*180)*39
                        this.spin.arms[1].bottom=75-lsin(this.animSet.loop*180)*66
                    break

                }
            break
            
        }
    }
    minorDisplay(type,key){
        switch(this.name){
            case 'Lira':
                switch(type){
                    case 0:
                        this.layer.push()
                        this.layer.translate(this.graphics.arms[key].bottom.x*0.9+this.graphics.arms[key].middle.x*0.1,this.graphics.arms[key].bottom.y*0.9+this.graphics.arms[key].middle.y*0.1)
                        this.layer.rotate(90+90*sign(lsin(this.anim.direction+this.spin.arms[key].bottom-75))-this.spin.sword*sign(lsin(this.anim.direction+this.spin.arms[key].bottom-75)))
                        this.layer.scale(1,constrain(lsin(this.anim.direction+this.spin.arms[key].bottom-75)*2,-1,1)*this.anim.sword)
                        this.layer.fill(235,245,255,this.fade)
                        this.layer.noStroke()
                        this.layer.rect(0,-20,3,40)
                        this.layer.triangle(-3/2,-40,3/2,-40,0,-55)
                        this.layer.fill(160,170,180,this.fade)
                        this.layer.rect(3/4,-20,3/2,40)
                        this.layer.triangle(3/2,-40,0,-55,0,-40)
                        for(let g=0;g<4;g++){
                            this.layer.stroke(125+g*10,70+g*10,80+g*10,this.fade)
                            this.layer.strokeWeight(4-g)
                            this.layer.line(0,-3+g/2,0,2-g/2)
                        }
                        this.layer.pop()
                    break
                    case 1:
                        this.layer.stroke(this.color.band[1][0],this.color.band[1][1],this.color.band[1][2],this.fade*this.fades.band[0])
                        this.layer.strokeWeight(0.5)
                        if(this.trigger.display.extra.damage){
                            this.layer.line(
                                this.graphics.arms[key].middle.x*0.1+this.graphics.arms[key].bottom.x*0.9-1.1*lsin(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                                this.graphics.arms[key].middle.y*0.1+this.graphics.arms[key].bottom.y*0.9-1.1*lcos(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                                this.graphics.arms[key].middle.x*0.1+this.graphics.arms[key].bottom.x*0.9-1.925*lsin(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                                this.graphics.arms[key].middle.y*0.1+this.graphics.arms[key].bottom.y*0.9-1.925*lcos(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90))
                            this.layer.line(
                                this.graphics.arms[key].middle.x*0.1+this.graphics.arms[key].bottom.x*0.9+1.925*lsin(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                                this.graphics.arms[key].middle.y*0.1+this.graphics.arms[key].bottom.y*0.9+1.925*lcos(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                                this.graphics.arms[key].middle.x*0.1+this.graphics.arms[key].bottom.x*0.9+1.1*lsin(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                                this.graphics.arms[key].middle.y*0.1+this.graphics.arms[key].bottom.y*0.9+1.1*lcos(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90))
                        }else{
                            this.layer.line(
                                this.graphics.arms[key].middle.x*0.1+this.graphics.arms[key].bottom.x*0.9+1.925*lsin(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                                this.graphics.arms[key].middle.y*0.1+this.graphics.arms[key].bottom.y*0.9+1.925*lcos(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                                this.graphics.arms[key].middle.x*0.1+this.graphics.arms[key].bottom.x*0.9-1.925*lsin(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                                this.graphics.arms[key].middle.y*0.1+this.graphics.arms[key].bottom.y*0.9-1.925*lcos(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90))
                        }
                        this.layer.stroke(this.color.band[2][0],this.color.band[2][1],this.color.band[2][2],this.fade*this.fades.band[0])
                        this.layer.strokeWeight(0.6)
                        for(let g=0;g<4;g++){
                            if(!this.trigger.display.extra.damage||g<1||g>3){
                                this.layer.point(
                                    this.graphics.arms[key].middle.x*0.1+this.graphics.arms[key].bottom.x*0.9+(-1.8+g*1.2)*lsin(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                                    this.graphics.arms[key].middle.y*0.1+this.graphics.arms[key].bottom.y*0.9+(-1.8+g*1.2)*lcos(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90))
                            }
                        }
                    break
                }
            break
            case 'Sakura':
                switch(type){
                    case 0:
                        this.layer.push()
                        this.layer.translate(this.graphics.arms[key].bottom.x*0.9+this.graphics.arms[key].middle.x*0.1,this.graphics.arms[key].bottom.y*0.9+this.graphics.arms[key].middle.y*0.1)
                        this.layer.rotate(90+90*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75))-this.spin.sword*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75)))
                        this.layer.scale(-1,constrain(lsin(this.anim.direction+this.spin.arms[key].bottom+75)*2,-1,1)*this.anim.sword)
                        this.layer.image(graphics.minor[17],-27*this.fade,-15-27*this.fade,54*this.fade,54*this.fade)
                        this.layer.pop()
                    break
                    case 1:
                        if(this.anim.sword2>0){
                            this.layer.push()
                            this.layer.translate(this.graphics.arms[key].bottom.x*0.9+this.graphics.arms[key].middle.x*0.1,this.graphics.arms[key].bottom.y*0.9+this.graphics.arms[key].middle.y*0.1)
                            this.layer.rotate(90+90*sign(lsin(this.anim.direction+this.spin.arms[key].bottom-75))-this.spin.sword*sign(lsin(this.anim.direction+this.spin.arms[key].bottom-75)))
                            this.layer.scale(-0.5,-0.5*constrain(lsin(this.anim.direction+this.spin.arms[key].bottom-75)*2,-1,1)*this.anim.sword2)
                            this.layer.strokeCap(SQUARE)
                            this.layer.noFill()
                            this.layer.stroke(207,217,220,this.fade)
                            this.layer.strokeWeight(0.4)
                            this.layer.beginShape()
                            this.layer.vertex(45,45)
                            this.layer.bezierVertex(25,40,-25,40,-45,45)
                            this.layer.endShape()
                            this.layer.strokeCap(ROUND)
                            this.layer.fill(237,155,140,this.fade)
                            this.layer.noStroke()
                            this.layer.beginShape()
                            this.layer.vertex(-45,45)
                            this.layer.vertex(0,65)
                            this.layer.vertex(45,45)
                            this.layer.bezierVertex(25,40,-25,40,-45,45)
                            this.layer.endShape()
                            this.layer.stroke(104,78,95,this.fade)
                            this.layer.strokeWeight(1.5)
                            this.layer.line(0,-5,0,50)
                            this.layer.image(graphics.minor[24],-75*this.fade,50-30*this.fade,150*this.fade,60*this.fade)
                            this.layer.fill(246,209,161,this.fade)
                            this.layer.noStroke()
                            this.layer.beginShape()
                            this.layer.vertex(-45,45)
                            this.layer.vertex(0,65)
                            this.layer.vertex(45,45)
                            this.layer.bezierVertex(25,50,-25,50,-45,45)
                            this.layer.endShape()
                            this.layer.image(graphics.minor[25],-50*this.fade,60-20*this.fade,100*this.fade,40*this.fade)
                            this.layer.push()
                            this.layer.fill(239,230,231,this.fade)
                            this.layer.ellipse(0,65,3,3)
                            this.layer.translate(0,65)
                            this.layer.rotate(95-165*3/4)
                            for(let a=0;a<4;a++){
                                this.layer.arc(0,0,12.5,2.5,-90,90)
                                this.layer.rotate(-165/4)
                            }
                            this.layer.pop()
                            this.layer.fill(225,202,187,this.fade)
                            this.layer.rect(0,65.5,3.5,0.4)
                            this.layer.strokeCap(SQUARE)
                            this.layer.noFill()
                            this.layer.stroke(207,217,220,this.fade)
                            this.layer.strokeWeight(0.4)
                            this.layer.beginShape()
                            this.layer.vertex(45.5,45)
                            this.layer.bezierVertex(25,50,-25,50,-45.5,45)
                            this.layer.endShape()
                            this.layer.strokeCap(ROUND)
                            this.layer.pop()
                        }
                    break
                }
            break
            case 'Ume':
                switch(type){
                    case -1:
                        this.layer.push()
                        this.layer.translate(this.graphics.arms[key].bottom.x*0.95+this.graphics.arms[key].middle.x*0.05,this.graphics.arms[key].bottom.y*0.95+this.graphics.arms[key].middle.y*0.05)
                        this.layer.rotate(90+90*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75))-this.spin.sword*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75)))
                        this.layer.scale(1,constrain(lsin(this.anim.direction+this.spin.arms[key].bottom+75)*2,-1,1)*this.anim.sword)
                        this.layer.fill(225,this.fade)
                        this.layer.noStroke()
                        this.layer.rect(0,-12,1,24)
                        this.layer.fill(50,255,200)
                        this.layer.ellipse(0,-24,3,3)
                        this.layer.pop()
                    break
                    default:
                        minorGraphicDisplay(this.layer,type)
                    break
                }
            break
            case 'Goon':
                switch(type){
                    case 0:
                        this.layer.push()
                        this.layer.translate(this.graphics.arms[key].bottom.x*0.95+this.graphics.arms[key].middle.x*0.05,this.graphics.arms[key].bottom.y*0.95+this.graphics.arms[key].middle.y*0.05)
                        this.layer.rotate(90+90*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75))-this.spin.sword*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75)))
                        this.layer.scale(1,constrain(lsin(this.anim.direction+this.spin.arms[key].bottom+75)*2,-1,1)*this.anim.sword)
                        this.layer.fill(150,this.fade)
                        this.layer.noStroke()
                        this.layer.rect(0,-18,3,36)
                        this.layer.pop()
                    break
                }
            break
            case 'Slaver':
                switch(type){
                    case 0:
                        this.layer.push()
                        this.layer.translate(this.graphics.arms[key].bottom.x*0.95+this.graphics.arms[key].middle.x*0.05,this.graphics.arms[key].bottom.y*0.95+this.graphics.arms[key].middle.y*0.05)
                        this.layer.rotate(90+90*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75))-this.spin.sword*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75)))
                        this.layer.scale(1,constrain(lsin(this.anim.direction+this.spin.arms[key].bottom+75)*2,-1,1)*this.anim.sword)
                        this.layer.noFill()
                        this.layer.stroke(200,this.fade)
                        this.layer.strokeWeight(3)
                        this.layer.line(0,12,0,-36)
                        this.layer.arc(0,-36,12,24,0,180)
                        this.layer.pop()
                    break
                }
            break
            case 'Pointy':
                switch(type){
                    case 0:
                        this.layer.push()
                        this.layer.translate(this.graphics.arms[key].bottom.x*0.95+this.graphics.arms[key].middle.x*0.05,this.graphics.arms[key].bottom.y*0.95+this.graphics.arms[key].middle.y*0.05)
                        this.layer.rotate(90+90*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75-key*150))-this.spin.sword*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75-key*150)))
                        this.layer.scale(1,constrain(lsin(this.anim.direction+this.spin.arms[key].bottom+75-key*150)*2,-1,1)*this.anim.sword)
                        this.layer.fill(200,this.fade)
                        this.layer.noStroke()
                        this.layer.rect(0,-12,1.5,24)
                        this.layer.pop()
                    break
                }
            break
            case 'Romeo':
                switch(type){
                    case 0:
                        this.layer.push()
                        this.layer.translate(this.graphics.arms[key].bottom.x*0.95+this.graphics.arms[key].middle.x*0.05,this.graphics.arms[key].bottom.y*0.95+this.graphics.arms[key].middle.y*0.05)
                        this.layer.rotate(90+90*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75))-this.spin.sword*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75)))
                        this.layer.scale(1,constrain(lsin(this.anim.direction+this.spin.arms[key].bottom+75)*2,-1,1)*this.anim.sword)
                        this.layer.fill(80,this.fade)
                        this.layer.noStroke()
                        this.layer.rect(0,-20,2,40)
                        this.layer.pop()
                    break
                }
            break
            case 'Batter':
                switch(type){
                    case 0:
                        this.layer.push()
                        this.layer.translate(this.graphics.arms[key].bottom.x*0.9+this.graphics.arms[key].middle.x*0.1,this.graphics.arms[key].bottom.y*0.9+this.graphics.arms[key].middle.y*0.1)
                        this.layer.rotate(90+90*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75))-this.spin.sword*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75)))
                        this.layer.scale(1,constrain(lsin(this.anim.direction+this.spin.arms[key].bottom+75)*2,-1,1)*this.anim.sword)
                        this.layer.fill(220,180,60,this.fade)
                        this.layer.noStroke()
                        this.layer.rect(0,-18,6,36)
                        this.layer.arc(0,-36,6,4,-180,0)
                        this.layer.pop()
                    break
                }
            break
            case 'Billy Beatup':
                switch(type){
                    case 1:
                        this.layer.stroke(this.color.band[0],this.color.band[1],this.color.band[2],this.fade*this.fades.band)
                        this.layer.strokeWeight(1)
                        this.layer.line(
                            this.graphics.arms[key].middle.x*0.1+this.graphics.arms[key].bottom.x*0.9+1.925*lsin(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                            this.graphics.arms[key].middle.y*0.1+this.graphics.arms[key].bottom.y*0.9+1.925*lcos(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                            this.graphics.arms[key].middle.x*0.1+this.graphics.arms[key].bottom.x*0.9-1.925*lsin(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                            this.graphics.arms[key].middle.y*0.1+this.graphics.arms[key].bottom.y*0.9-1.925*lcos(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90))
                    break
                }
            break
            case 'Lunar Shard': case 'Solar Shard':
                switch(type){
                    case 1:
                        this.layer.stroke(this.color.band[0],this.color.band[1],this.color.band[2],this.fade*this.fades.band)
                        this.layer.strokeWeight(2)
                        this.layer.line(
                            this.graphics.arms[key].middle.x*0.1+this.graphics.arms[key].bottom.x*0.9+1.85*lsin(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                            this.graphics.arms[key].middle.y*0.1+this.graphics.arms[key].bottom.y*0.9+1.85*lcos(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                            this.graphics.arms[key].middle.x*0.1+this.graphics.arms[key].bottom.x*0.9-1.85*lsin(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                            this.graphics.arms[key].middle.y*0.1+this.graphics.arms[key].bottom.y*0.9-1.85*lcos(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90))
                    break
                }
            break
            case 'Coffee Commander':
                switch(type){
                    case 1:
                        this.layer.stroke(this.color.band[0],this.color.band[1],this.color.band[2],this.fade*this.fades.band)
                        this.layer.strokeWeight(1.5)
                        this.layer.line(
                            this.graphics.arms[key].middle.x*0.2+this.graphics.arms[key].bottom.x*0.8+1.8875*lsin(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                            this.graphics.arms[key].middle.y*0.2+this.graphics.arms[key].bottom.y*0.8+1.8875*lcos(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                            this.graphics.arms[key].middle.x*0.2+this.graphics.arms[key].bottom.x*0.8-1.8875*lsin(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                            this.graphics.arms[key].middle.y*0.2+this.graphics.arms[key].bottom.y*0.8-1.8875*lcos(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90))
                    break
                }
            break
            case 'Swordmaster':
                switch(type){
                    case 0:
                        this.layer.push()
                        this.layer.translate(this.graphics.arms[key].bottom.x*0.9+this.graphics.arms[key].middle.x*0.1,this.graphics.arms[key].bottom.y*0.9+this.graphics.arms[key].middle.y*0.1)
                        this.layer.rotate(90+90*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75))-this.spin.sword*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75)))
                        this.layer.scale(1,constrain(lsin(this.anim.direction+this.spin.arms[key].bottom+75)*2,-1,1)*this.anim.sword)
                        this.layer.fill(175,this.fade)
                        this.layer.noStroke()
                        this.layer.rect(0,-25,4,50)
                        this.layer.triangle(-2,-50,2,-50,0,-70)
                        this.layer.fill(125,this.fade)
                        this.layer.rect(1,-25,2,50)
                        this.layer.triangle(2,-50,0,-70,0,-50)
                        for(let g=0;g<4;g++){
                            this.layer.stroke(100+g*10,50+g*10,25+g*10,this.fade)
                            this.layer.strokeWeight(4-g)
                            this.layer.line(0,-4+g/2,0,3-g/2)
                        }
                        this.layer.pop()
                    break
                }
            break
            case 'Gas Man':
                switch(type){
                    case 1:
                        this.layer.push()
                        this.layer.translate(this.graphics.arms[key].bottom.x,this.graphics.arms[key].bottom.y)
                        this.layer.fill(100,70,35,this.fade)
                        this.layer.noStroke()
                        this.layer.quad(10,-1,8,-3,4,1,6,3)
                        this.layer.fill(120,90,45,this.fade)
                        this.layer.rect(0,10,12,18,2)
                        this.layer.fill(110,80,40,this.fade)
                        this.layer.rect(0,10,2,18)
                        this.layer.rect(0,10,12,2)
                        this.layer.pop()
                    break
                }
            break
            case 'Champion':
                switch(type){
                    case 0:
                        this.layer.push()
                        this.layer.translate(this.graphics.arms[key].bottom.x*0.95+this.graphics.arms[key].middle.x*0.05,this.graphics.arms[key].bottom.y*0.95+this.graphics.arms[key].middle.y*0.05)
                        this.layer.rotate(90+90*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75))-this.spin.sword*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75)))
                        this.layer.scale(1,constrain(lsin(this.anim.direction+this.spin.arms[key].bottom+75)*2,-1,1)*this.anim.sword)
                        this.layer.fill(240,this.fade)
                        this.layer.noStroke()
                        this.layer.rect(0,-16,2,32)
                        this.layer.pop()
                    break
                }
            break
            case 'Assistant Hiring Officer':
                switch(type){
                    case 1:
                        this.layer.push()
                        this.layer.translate(this.graphics.arms[key].bottom.x,this.graphics.arms[key].bottom.y)
                        this.layer.noStroke()
                        this.layer.fill(90,60,30,this.fade)
                        this.layer.rect(0,10,12,18,2)
                        this.layer.fill(220,this.fade)
                        this.layer.rect(0,10,10,16)
                        this.layer.fill(0,this.fade)
                        this.layer.rect(0,4,8,1)
                        this.layer.rect(0,6,8,1)
                        this.layer.pop()
                    break
                }
            break
            case 'Purge X02':
                switch(type){
                    case 0:
                        this.layer.push()
                        this.layer.translate(this.graphics.arms[key].bottom.x*0.85+this.graphics.arms[key].middle.x*0.15,this.graphics.arms[key].bottom.y*0.85+this.graphics.arms[key].middle.y*0.15)
                        this.layer.rotate(90+90*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75))-this.spin.sword*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75)))
                        this.layer.scale(1,constrain(lsin(this.anim.direction+this.spin.arms[key].bottom+75)*2,-1,1)*this.anim.sword)
                        this.layer.stroke(175,75,175,this.fade/2)
                        this.layer.strokeWeight(12)
                        this.layer.line(0,0,0,-36)
                        this.layer.stroke(175,75,175,this.fade)
                        this.layer.strokeWeight(6)
                        this.layer.line(0,0,0,-36)
                        this.layer.pop()
                    break
                }
            break
            case 'Billy Beatup':
                switch(type){
                    case 1:
                        this.layer.stroke(this.color.band[0],this.color.band[1],this.color.band[2],this.fade*this.fades.band)
                        this.layer.strokeWeight(1.5)
                        this.layer.line(
                            this.graphics.arms[key].middle.x*0.35+this.graphics.arms[key].bottom.x*0.65+1.9*lsin(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                            this.graphics.arms[key].middle.y*0.35+this.graphics.arms[key].bottom.y*0.65+1.9*lcos(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                            this.graphics.arms[key].middle.x*0.35+this.graphics.arms[key].bottom.x*0.65-1.9*lsin(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                            this.graphics.arms[key].middle.y*0.35+this.graphics.arms[key].bottom.y*0.65-1.9*lcos(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90))
                    break
                }
            break
            case 'Vengeful':
                switch(type){
                    case 0:
                        this.layer.push()
                        this.layer.translate(this.graphics.arms[key].bottom.x*0.95+this.graphics.arms[key].middle.x*0.05,this.graphics.arms[key].bottom.y*0.95+this.graphics.arms[key].middle.y*0.05)
                        this.layer.rotate(90+90*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75))-this.spin.sword*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75)))
                        this.layer.scale(1,constrain(lsin(this.anim.direction+this.spin.arms[key].bottom+75)*2,-1,1)*this.anim.sword)
                        this.layer.stroke(60,145,255,this.fade)
                        this.layer.strokeWeight(3)
                        this.layer.line(0,0,0,-32)
                        this.layer.pop()
                    break
                }
            break
            case 'Lunaria':
                switch(type){
                    case 0:
                        this.layer.push()
                        this.layer.translate(this.graphics.arms[key].bottom.x*0.95+this.graphics.arms[key].middle.x*0.05,this.graphics.arms[key].bottom.y*0.95+this.graphics.arms[key].middle.y*0.05)
                        this.layer.rotate(90+90*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75))-this.spin.sword*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75)))
                        this.layer.scale(1,constrain(lsin(this.anim.direction+this.spin.arms[key].bottom+75)*2,-1,1)*this.anim.sword)
                        this.layer.stroke(90,this.fade)
                        this.layer.strokeWeight(2)
                        this.layer.fill(135,this.fade/2)
                        this.layer.line(0,10,0,-30)
                        this.layer.line(0,-30,-3,-27)
                        this.layer.line(0,-30,3,-27)
                        this.layer.ellipse(-5,-20,10,10)
                        this.layer.ellipse(5,-20,10,10)
                        this.layer.fill(255,this.fade)
                        this.layer.stroke(255,235,235,this.fade)
                        this.layer.strokeWeight(1)
                        this.layer.beginShape()
                        this.layer.vertex(-5,-18)
                        this.layer.bezierVertex(-4,-19,-4,-21,-5,-22)
                        this.layer.bezierVertex(-4.5,-21,-4.5,-19,-5,-18)
                        this.layer.bezierVertex(-4,-19,-4,-21,-5,-22)
                        this.layer.bezierVertex(-4.5,-21,-4.5,-19,-5,-18)
                        this.layer.endShape()
                        this.layer.noFill()
                        this.layer.stroke(255,145,70,this.fade)
                        this.layer.ellipse(5,-20,5,5)
                        for(g=0,lg=8;g<lg;g++){
                            this.layer.line(5+2.5*lsin(g/lg*360),-20+2.5*lcos(g/lg*360),5+3.5*lsin(g/lg*360),-20+3.5*lcos(g/lg*360))
                        }
                        this.layer.pop()
                    break
                }
            break
            case 'Divine Guard':
                switch(type){
                    case 0:
                        this.layer.push()
                        this.layer.translate(this.graphics.arms[key].bottom.x*0.95+this.graphics.arms[key].middle.x*0.05,this.graphics.arms[key].bottom.y*0.95+this.graphics.arms[key].middle.y*0.05)
                        this.layer.rotate(90+90*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75))-this.spin.sword*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75)))
                        this.layer.scale(1,constrain(lsin(this.anim.direction+this.spin.arms[key].bottom+75)*2,-1,1)*this.anim.sword)
                        this.layer.stroke(255,this.fade)
                        this.layer.strokeWeight(2)
                        this.layer.line(4,-32,-4,-34)
                        this.layer.line(4,-28,-4,-30)
                        this.layer.stroke(180,150,60,this.fade)
                        this.layer.strokeWeight(3)
                        this.layer.line(0,7,0,-38)
                        this.layer.stroke(255,this.fade)
                        this.layer.strokeWeight(2)
                        this.layer.line(-4,-34,4,-36)
                        this.layer.line(-4,-30,4,-32)
                        this.layer.line(-4,-26,4,-28)
                        this.layer.noStroke()
                        this.layer.fill(255,250,220,this.fade)
                        this.layer.triangle(-6,-40,6,-40,0,-52)
                        this.layer.pop()
                    break
                    case 1:
                        this.layer.stroke(this.color.band[0],this.color.band[1],this.color.band[2],this.fade*this.fades.band)
                        this.layer.strokeWeight(1.5)
                        this.layer.line(
                            this.graphics.arms[key].middle.x*0.35+this.graphics.arms[key].bottom.x*0.65+1.8875*lsin(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                            this.graphics.arms[key].middle.y*0.35+this.graphics.arms[key].bottom.y*0.65+1.8875*lcos(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                            this.graphics.arms[key].middle.x*0.35+this.graphics.arms[key].bottom.x*0.65-1.8875*lsin(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                            this.graphics.arms[key].middle.y*0.35+this.graphics.arms[key].bottom.y*0.65-1.8875*lcos(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90))
                    break
                }
            break
            case 'Avant Guard':
                switch(type){
                    case 0:
                        this.layer.push()
                        this.layer.translate(this.graphics.arms[key].bottom.x*0.95+this.graphics.arms[key].middle.x*0.05,this.graphics.arms[key].bottom.y*0.95+this.graphics.arms[key].middle.y*0.05)
                        this.layer.rotate(90+90*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75))-this.spin.sword*sign(lsin(this.anim.direction+this.spin.arms[key].bottom+75)))
                        this.layer.scale(1,constrain(lsin(this.anim.direction+this.spin.arms[key].bottom+75)*2,-1,1)*this.anim.sword)
                        this.layer.noStroke()
                        this.layer.fill(10,12,14,this.fade)
                        this.layer.rect(0,-11,4,44)
                        this.layer.fill(30,36,42,this.fade)
                        this.layer.arc(0,-33,36,36,-45,45)
                        this.layer.arc(0,-33,36,36,135,225)
                        this.layer.fill(255,250,215,this.fade)
                        this.layer.arc(0,-33,24,24,-45,45)
                        this.layer.arc(0,-33,24,24,135,225)
                        this.layer.fill(30,36,42,this.fade)
                        this.layer.arc(0,-33,21,21,-45,45)
                        this.layer.arc(0,-33,21,21,135,225)
                        this.layer.ellipse(0,-33,6,6)
                        this.layer.pop()
                    break
                    case 1:
                        this.layer.stroke(this.color.band[0],this.color.band[1],this.color.band[2],this.fade*this.fades.band)
                        this.layer.strokeWeight(1)
                        this.layer.line(
                            this.graphics.arms[key].middle.x*0.275+this.graphics.arms[key].bottom.x*0.725+1.9*lsin(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                            this.graphics.arms[key].middle.y*0.275+this.graphics.arms[key].bottom.y*0.725+1.9*lcos(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                            this.graphics.arms[key].middle.x*0.275+this.graphics.arms[key].bottom.x*0.725-1.9*lsin(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                            this.graphics.arms[key].middle.y*0.275+this.graphics.arms[key].bottom.y*0.725-1.9*lcos(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90))
                        this.layer.line(
                            this.graphics.arms[key].middle.x*0.15+this.graphics.arms[key].bottom.x*0.85+1.9*lsin(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                            this.graphics.arms[key].middle.y*0.15+this.graphics.arms[key].bottom.y*0.85+1.9*lcos(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                            this.graphics.arms[key].middle.x*0.15+this.graphics.arms[key].bottom.x*0.85-1.9*lsin(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90),
                            this.graphics.arms[key].middle.y*0.15+this.graphics.arms[key].bottom.y*0.85-1.9*lcos(atan2(this.graphics.arms[key].middle.x-this.graphics.arms[key].bottom.x,this.graphics.arms[key].middle.y-this.graphics.arms[key].bottom.y)+90))
                    break
                }
            break
        }
    }
    minorDisplayGeneral(type,key){
        switch(type){
            case 0:
                this.layer.noFill()
                if(this.anim.eyeStyle[key]==3&&this.anim.eye[key]>0){
                    this.layer.stroke(this.color.eye.back[0],this.color.eye.back[1],this.color.eye.back[2],this.fade*this.fades.eye[key])
                    this.layer.strokeWeight((4-this.anim.eye[key]*3)*constrain(lcos(this.spin.eye[key]+this.anim.head)*5,0,1))
                    this.layer.line(lsin(this.spin.eye[key]+this.anim.head)*this.parts.minor-(key*2-1)*lcos(this.spin.eye[key]+this.anim.head)*this.anim.eye[key]*2,this.parts.eyeLevel,lsin(this.spin.eye[key]+this.anim.head)*this.parts.minor+(key*2-1)*lcos(this.spin.eye[key]+this.anim.head)*this.anim.eye[key]*2,this.parts.eyeLevel-this.anim.eye[key]*2)
                    this.layer.line(lsin(this.spin.eye[key]+this.anim.head)*this.parts.minor-(key*2-1)*lcos(this.spin.eye[key]+this.anim.head)*this.anim.eye[key]*2,this.parts.eyeLevel+this.anim.eye[key]*2,lsin(this.spin.eye[key]+this.anim.head)*this.parts.minor+(key*2-1)*lcos(this.spin.eye[key]+this.anim.head)*this.anim.eye[key]*2,this.parts.eyeLevel)
                    this.layer.stroke(this.color.eye.front[0],this.color.eye.front[1],this.color.eye.front[2],this.fade*this.fades.eye[key])
                    this.layer.strokeWeight((3-this.anim.eye[key]*2)*constrain(lcos(this.spin.eye[key]+this.anim.head)*5,0,1))
                    this.layer.line(lsin(this.spin.eye[key]+this.anim.head)*((this.parts.minor+0.5)-this.anim.eye[key]*0.5)-(key*2-1)*lcos(this.spin.eye[key]+this.anim.head)*this.anim.eye[key]*2,this.parts.eyeLevel+0.2-this.anim.eye[key]*0.2,lsin(this.spin.eye[key]+this.anim.head)*((this.parts.minor+0.5)-this.anim.eye[key]*0.5)+(key*2-1)*lcos(this.spin.eye[key]+this.anim.head)*this.anim.eye[key]*2,this.parts.eyeLevel-this.anim.eye[key]*2+0.2-this.anim.eye[key]*0.2)
                    this.layer.line(lsin(this.spin.eye[key]+this.anim.head)*((this.parts.minor+0.5)-this.anim.eye[key]*0.5)-(key*2-1)*lcos(this.spin.eye[key]+this.anim.head)*this.anim.eye[key]*2,this.parts.eyeLevel+0.2-this.anim.eye[key]*0.2+this.anim.eye[key]*2,lsin(this.spin.eye[key]+this.anim.head)*((this.parts.minor+0.5)-this.anim.eye[key]*0.5)+(key*2-1)*lcos(this.spin.eye[key]+this.anim.head)*this.anim.eye[key]*2,this.parts.eyeLevel+0.2-this.anim.eye[key]*0.2)
                }else if(this.anim.eyeStyle[key]==2&&this.anim.eye[key]>0){
                    this.layer.stroke(this.color.eye.back[0],this.color.eye.back[1],this.color.eye.back[2],this.fade*this.fades.eye[key])
                    this.layer.strokeWeight((4-this.anim.eye[key]*3)*constrain(lcos(this.spin.eye[key]+this.anim.head)*5,0,1))
                    this.layer.arc(lsin(this.spin.eye[key]+this.anim.head)*this.parts.minor,this.parts.eyeLevel-1*this.anim.eye[key],3*this.anim.eye[key],4*this.anim.eye[key],30,150)
                    this.layer.stroke(this.color.eye.front[0],this.color.eye.front[1],this.color.eye.front[2],this.fade*this.fades.eye[key])
                    this.layer.strokeWeight((3-this.anim.eye[key]*2)*constrain(lcos(this.spin.eye[key]+this.anim.head)*5,0,1))
                    this.layer.arc(lsin(this.spin.eye[key]+this.anim.head)*((this.parts.minor+0.5)-this.anim.eye[key]*0.5),this.parts.eyeLevel-1*this.anim.eye[key],3*this.anim.eye[key],4*this.anim.eye[key],30,150)
                }else if(this.anim.eyeStyle[key]==1&&this.anim.eye[key]>0){                    
                    this.layer.stroke(this.color.eye.back[0],this.color.eye.back[1],this.color.eye.back[2],this.fade*this.fades.eye[key])
                    this.layer.strokeWeight((4-this.anim.eye[key]*3)*constrain(lcos(this.spin.eye[key]+this.anim.head)*5,0,1))
                    this.layer.arc(lsin(this.spin.eye[key]+this.anim.head)*this.parts.minor,this.parts.eyeLevel+2*this.anim.eye[key],3*this.anim.eye[key],4*this.anim.eye[key],-150,-30)
                    this.layer.stroke(this.color.eye.front[0],this.color.eye.front[1],this.color.eye.front[2],this.fade*this.fades.eye[key])
                    this.layer.strokeWeight((3-this.anim.eye[key]*2)*constrain(lcos(this.spin.eye[key]+this.anim.head)*5,0,1))
                    this.layer.arc(lsin(this.spin.eye[key]+this.anim.head)*((this.parts.minor+0.5)-this.anim.eye[key]*0.5),this.parts.eyeLevel+2*this.anim.eye[key],3*this.anim.eye[key],4*this.anim.eye[key],-150,-30)
                }else{
                    this.layer.stroke(this.color.eye.back[0],this.color.eye.back[1],this.color.eye.back[2],this.fade*this.fades.eye[key])
                    this.layer.strokeWeight((4-this.anim.eye[key]*3)*constrain(lcos(this.spin.eye[key]+this.anim.head)*5,0,1))
                    this.layer.line(lsin(this.spin.eye[key]+this.anim.head)*this.parts.minor-(key*2-1)*lcos(this.spin.eye[key]+this.anim.head)*this.anim.eye[key]*2,this.parts.eyeLevel,lsin(this.spin.eye[key]+this.anim.head)*this.parts.minor+(key*2-1)*lcos(this.spin.eye[key]+this.anim.head)*this.anim.eye[key]*2,this.parts.eyeLevel-this.anim.eye[key]*2)
                    this.layer.line(lsin(this.spin.eye[key]+this.anim.head)*this.parts.minor-(key*2-1)*lcos(this.spin.eye[key]+this.anim.head)*this.anim.eye[key]*2,this.parts.eyeLevel,lsin(this.spin.eye[key]+this.anim.head)*this.parts.minor+(key*2-1)*lcos(this.spin.eye[key]+this.anim.head)*this.anim.eye[key]*2,this.parts.eyeLevel+this.anim.eye[key]*2)
                    this.layer.stroke(this.color.eye.front[0],this.color.eye.front[1],this.color.eye.front[2],this.fade*this.fades.eye[key])
                    this.layer.strokeWeight((3-this.anim.eye[key]*2)*constrain(lcos(this.spin.eye[key]+this.anim.head)*5,0,1))
                    this.layer.line(lsin(this.spin.eye[key]+this.anim.head)*((this.parts.minor+0.5)-this.anim.eye[key]*0.5)-(key*2-1)*lcos(this.spin.eye[key]+this.anim.head)*this.anim.eye[key]*2,this.parts.eyeLevel+0.2-this.anim.eye[key]*0.2,lsin(this.spin.eye[key]+this.anim.head)*((this.parts.minor+0.5)-this.anim.eye[key]*0.5)+(key*2-1)*lcos(this.spin.eye[key]+this.anim.head)*this.anim.eye[key]*2,this.parts.eyeLevel-this.anim.eye[key]*2+0.2-this.anim.eye[key]*0.2)
                    this.layer.line(lsin(this.spin.eye[key]+this.anim.head)*((this.parts.minor+0.5)-this.anim.eye[key]*0.5)-(key*2-1)*lcos(this.spin.eye[key]+this.anim.head)*this.anim.eye[key]*2,this.parts.eyeLevel+0.2-this.anim.eye[key]*0.2,lsin(this.spin.eye[key]+this.anim.head)*((this.parts.minor+0.5)-this.anim.eye[key]*0.5)+(key*2-1)*lcos(this.spin.eye[key]+this.anim.head)*this.anim.eye[key]*2,this.parts.eyeLevel+this.anim.eye[key]*2+0.2-this.anim.eye[key]*0.2)
                    if(this.anim.eye[key]==0){
                        this.layer.stroke(this.color.eye.glow[0],this.color.eye.glow[1],this.color.eye.glow[2],this.fade*this.fades.eye[key]/4)
                        this.layer.strokeWeight(0.6)
                        this.layer.arc(lsin(this.spin.eye[key]+this.anim.head)*(this.parts.minor+0.5),this.parts.eyeLevel,1.8,1.8,-72,-12)
                    }
                }
            break
            case 1:
                this.calc.int=this.anim.mouth.x/this.anim.mouth.y*lcos(this.anim.direction)/(0.5+lcos(this.anim.direction)*0.5)
                if(this.anim.mouth.open>0){
                    this.layer.fill(this.color.mouth.in[0],this.color.mouth.in[1],this.color.mouth.in[2],this.fade*this.fades.mouth)
                }else{
                    this.layer.noFill()
                }
                this.layer.stroke(this.color.mouth.out[0],this.color.mouth.out[1],this.color.mouth.out[2],this.fade*this.fades.mouth)
                this.layer.strokeWeight(0.5-this.anim.mouth.open*0.25)
                this.layer.arc(lsin(this.anim.direction)*(this.parts.minor-2),this.parts.mouth,this.anim.mouth.x*lcos(this.anim.direction),this.anim.mouth.y*(0.5+lcos(this.anim.direction)*0.5),this.spin.mouth,180-this.spin.mouth)
                this.layer.strokeWeight(0.25*this.anim.mouth.open)
                this.layer.line(lsin(this.anim.direction)*(this.parts.minor-2)-this.anim.mouth.x/2*lcos(this.anim.direction),this.parts.mouth,lsin(this.anim.direction)*(this.parts.minor-2)+this.anim.mouth.x/2*lcos(this.anim.direction),this.parts.mouth)
            break
        }
    }
    display(){
        if(this.fade>0&&this.size>0){
            this.calculateParts()
            this.layer.push()
            this.layer.translate(this.position.x+this.offset.position.x,this.position.y+this.offset.position.y)
            this.layer.rotate(this.direction)
            this.layer.scale(this.size)
            switch(this.name){
                case 'Placeholder':
                    this.layer.rotate(-this.anim.direction)
                    this.layer.fill(this.flashColor([200,200,200])[0],this.flashColor([200,200,200])[1],this.flashColor([200,200,200])[2],this.fade)
                    this.layer.noStroke()
                    this.layer.triangle(-6,-8,6,-8,0,12)
                break
                case 'George':
                    if(this.trigger.display.visor&&lcos(this.anim.direction)<0){
                        this.layer.fill(this.color.visor[0],this.color.visor[1],this.color.visor[2],this.fade*this.fades.visor*0.5)
                        this.layer.noStroke()
                        if(this.trigger.display.extra.damage){
                            this.layer.triangle(lsin(this.anim.direction)*16-9*lcos(this.anim.direction),-84,lsin(this.anim.direction)*16+9*lcos(this.anim.direction),-84,lsin(this.anim.direction)*16,-78)
                        }else{
                            this.layer.rect(lsin(this.anim.direction)*16,-81,18*lcos(this.anim.direction),6)
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.ellipse(0,-50,16,42)
                    }
                    if(this.trigger.display.belt){
                        this.layer.fill(this.flashColor(this.color.belt)[0],this.flashColor(this.color.belt)[1],this.flashColor(this.color.belt)[2],this.fade*this.fades.belt)
                        this.layer.noStroke()
                        for(let a=0,la=7;a<la;a++){
                            this.layer.rect(lsin(360*a/la+this.anim.direction)*8,-48,3*lcos(360*a/la+this.anim.direction),2)
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        for(let h=0;h<2;h++){
                            if((g==0&&h==0||g==1&&h==1)&&lcos(this.spin.legs[0].bottom+this.anim.direction)<=lcos(this.spin.legs[1].bottom+this.anim.direction)||(g==0&&h==1||g==1&&h==0)&&lcos(this.spin.legs[0].bottom+this.anim.direction)>lcos(this.spin.legs[1].bottom+this.anim.direction)){
                                if(this.trigger.display.skin.legs){
                                    this.layer.stroke(this.flashColor(this.color.skin.legs)[0],this.flashColor(this.color.skin.legs)[1],this.flashColor(this.color.skin.legs)[2],this.fade*this.fades.skin.legs)
                                    this.layer.strokeWeight(4)
                                    this.layer.line(this.graphics.legs[h].top.x,this.graphics.legs[h].top.y,this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y)
                                    this.layer.line(this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y,this.graphics.legs[h].bottom.x,this.graphics.legs[h].bottom.y)
                                }
                            }
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.4&&lcos(this.spin.arms[g].top+this.anim.direction)<0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                    }
                    if(this.trigger.display.badge&&lcos(this.anim.direction+60)>0){
                        if(this.trigger.display.extra.damage){
                            this.layer.fill(this.color.badge[0][0],this.color.badge[0][1],this.color.badge[0][2])
                            this.layer.noStroke()
                            this.layer,arc(lsin(this.anim.direction+60)*7,-58,lcos(this.anim.direction+48)*6,6,0,180)
                            this.layer.fill(this.color.badge[1][0],this.color.badge[1][1],this.color.badge[1][2])
                            this.layer.triangle(lsin(this.anim.direction+60)*7-lcos(this.anim.direction+60),-58,lsin(this.anim.direction+60)*7+lcos(this.anim.direction+60),-58,lsin(this.anim.direction+60)*7,-55)
                        }else{
                            this.layer.fill(this.color.badge[0][0],this.color.badge[0][1],this.color.badge[0][2])
                            this.layer.noStroke()
                            this.layer.ellipse(lsin(this.anim.direction+60)*7,-58,lcos(this.anim.direction+48)*6,6)
                            this.layer.fill(this.color.badge[1][0],this.color.badge[1][1],this.color.badge[1][2])
                            this.layer.quad(lsin(this.anim.direction+60)*7-lcos(this.anim.direction+60),-58,lsin(this.anim.direction+60)*7,-61,lsin(this.anim.direction+60)*7+lcos(this.anim.direction+60),-58,lsin(this.anim.direction+60)*7,-55)
                        }
                    }
                    if(this.trigger.display.skin.head){
                        this.layer.fill(this.flashColor(this.color.skin.head)[0],this.flashColor(this.color.skin.head)[1],this.flashColor(this.color.skin.head)[2],this.fade*this.fades.skin.head)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-84,30,30)
                    }
                    if(this.trigger.display.mouth&&lcos(this.anim.direction)>0.1){
                        this.minorDisplayGeneral(1,0)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>=0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].bottom+this.anim.direction)>=0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        if(this.trigger.display.eye[g]){
                            this.minorDisplayGeneral(0,g)
                        }
                    }
                    if(this.trigger.display.visor&&lcos(this.anim.direction)>=0){
                        this.layer.fill(this.color.visor[0],this.color.visor[1],this.color.visor[2],this.fade*this.fades.visor*0.5)
                        this.layer.noStroke()
                        if(this.trigger.display.extra.damage){
                            this.layer.triangle(lsin(this.anim.direction)*16-9*lcos(this.anim.direction),-84,lsin(this.anim.direction)*16+9*lcos(this.anim.direction),-84,lsin(this.anim.direction)*16,-78)
                        }else{
                            this.layer.rect(lsin(this.anim.direction)*16,-81,18*lcos(this.anim.direction),6)
                        }
                    }
                    if(this.trigger.display.helmet){
                        this.layer.fill(this.color.helmet[0],this.color.helmet[1],this.color.helmet[2],this.fade*this.fades.helmet)
                        this.layer.noStroke()
                        this.layer.arc(0,-84,36,36,-180,0)
                    }
                    if(!this.graphic){
                        this.layer.noFill()
                        this.layer.stroke(240,240,40,this.fade)
                        this.layer.strokeWeight(3)
                        this.layer.strokeCap(SQUARE)
                        this.layer.arc(0.5,-121.5,15,15,-135,45)
                        this.layer.arc(-0.5,-120.5,15,15,45,225)
                        this.layer.strokeCap(ROUND)
                        this.layer.noStroke()
                        this.layer.fill(255,this.fade)
                        this.layer.textSize(12)
                        this.layer.text(this.combo,0,-120.5)
                    }
                break
                case 'Lira':
                    if(this.trigger.display.hair.back){
                        this.layer.image(graphics.combatant[0].sprites.hair.back[this.sprites.spinDetailHead],-25*this.fade,-75-20*this.fade,50*this.fade,100*this.fade)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.extra.sword&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.6&&g==1){
                            this.minorDisplay(0,g)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        if(this.trigger.display.band[1]&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.6&&g==0){
                            this.minorDisplay(1,g)
                        }
                    }
                    if(this.trigger.display.kimono.outside.back){
                        if(this.trigger.display.extra.damage){
                            this.layer.image(graphics.combatant[0].sprites.kimono.outsideDamage.back[this.sprites.spinDetail],-15*this.fade*this.fades.kimono.outside.back.x,this.parts.kimono.outside-15*this.fades.kimono.outside.back.y,30*this.fade*this.fades.kimono.outside.back.x,66*this.fade*this.fades.kimono.outside.back.y)
                        }else{
                            this.layer.image(graphics.combatant[0].sprites.kimono.outside.back[this.sprites.spinDetail],-15*this.fade*this.fades.kimono.outside.back.x,this.parts.kimono.outside-15*this.fades.kimono.outside.back.y,30*this.fade*this.fades.kimono.outside.back.x,66*this.fade*this.fades.kimono.outside.back.y)
                        }
                    }
                    if(this.trigger.display.kimono.main.back){
                        if(this.trigger.display.extra.damage){
                            this.layer.image(graphics.combatant[0].sprites.kimono.mainDamage.back[this.sprites.spinDetail],-15*this.fade*this.fades.kimono.main.back.x,this.parts.kimono.main-15*this.fades.kimono.main.back.y,30*this.fade*this.fades.kimono.main.back.x,66*this.fade*this.fades.kimono.main.back.y)
                        }else{
                            this.layer.image(graphics.combatant[0].sprites.kimono.main.back[this.sprites.spinDetail],-15*this.fade*this.fades.kimono.main.back.x,this.parts.kimono.main-15*this.fades.kimono.main.back.y,30*this.fade*this.fades.kimono.main.back.x,66*this.fade*this.fades.kimono.main.back.y)
                        }
                    }
                    if(this.trigger.display.kimono.decoration){
                        this.layer.noStroke()
                        for(let g=0,lg=this.kimono.decoration.length;g<lg;g++){
                            if(lcos(this.kimono.decoration[g].spin+this.anim.direction)<=0&&!(this.trigger.display.extra.damage&&this.kimono.decoration[g].y<20)){
                                this.layer.push()
                                this.layer.translate((1.5+this.kimono.decoration[g].y*0.16)*lsin(this.kimono.decoration[g].spin+this.anim.direction)*this.fades.kimono.decoration.position.x,this.parts.kimono.main-13*this.fades.kimono.decoration.position.y+this.kimono.decoration[g].y*this.fades.kimono.decoration.position.y)
                                this.layer.rotate(-12*lsin(this.kimono.decoration[g].spin+this.anim.direction))
                                this.layer.scale(this.fades.kimono.decoration.size.x*lcos(this.kimono.decoration[g].spin+this.anim.direction),this.fades.kimono.decoration.size.y)
                                this.layer.rotate(this.kimono.decoration[g].rotate)
                                for(let h=0,lh=5;h<lh;h++){
                                    this.layer.fill(
                                        mergeColor(this.color.kimono.decoration.back[this.kimono.decoration[g].type],this.color.kimono.decoration.back[this.kimono.decoration[g].type+1],h/lh)[0],
                                        mergeColor(this.color.kimono.decoration.back[this.kimono.decoration[g].type],this.color.kimono.decoration.back[this.kimono.decoration[g].type+1],h/lh)[1],
                                        mergeColor(this.color.kimono.decoration.back[this.kimono.decoration[g].type],this.color.kimono.decoration.back[this.kimono.decoration[g].type+1],h/lh)[2],this.fade*this.fades.kimono.decoration.fade)
                                    for(let i=0;i<3;i++){
                                        this.layer.rotate(120)
                                        this.layer.ellipse(0,-this.kimono.decoration[g].height*0.8,this.kimono.decoration[g].width*2.8*(1-h/lh),this.kimono.decoration[g].height*1.6*(1-h/lh))
                                        this.layer.ellipse(0,this.kimono.decoration[g].height*0.8,this.kimono.decoration[g].width*2.8*(1-h/lh),this.kimono.decoration[g].height*1.6*(1-h/lh))
                                    }
                                }
                                this.layer.pop()
                            }
                        }
                    }
                    if(this.trigger.display.under.under.button&&lcos(this.spin.under.under.button[0]+this.anim.direction)<=0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,-lcos(this.spin.under.under.button[0]+this.anim.direction)/4+0.75))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,-lcos(this.spin.under.under.button[0]+this.anim.direction)/4+0.75))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,-lcos(this.spin.under.under.button[0]+this.anim.direction)/4+0.75))[2],this.fade*this.fades.under.under.button)
                        this.layer.ellipse(lsin(this.spin.under.under.button[0]+this.anim.direction)*5.5,-49.5,lcos(this.spin.under.under.button[0]+this.anim.direction)*0.25+1,1.25)
                    }
                    if(this.trigger.display.under.under.button&&lcos(this.spin.under.under.button[1]+this.anim.direction)<=0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,-lcos(this.spin.under.under.button[1]+this.anim.direction)/4+0.75))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,-lcos(this.spin.under.under.button[1]+this.anim.direction)/4+0.75))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,-lcos(this.spin.under.under.button[1]+this.anim.direction)/4+0.75))[2],this.fade*this.fades.under.under.button)
                        this.layer.ellipse(lsin(this.spin.under.under.button[1]+this.anim.direction)*5.5,-49.5,lcos(this.spin.under.under.button[1]+this.anim.direction)*0.25+1,1.25)
                    }
                    if(this.trigger.display.under.under.top&&lcos(this.spin.under.under.top[0]+this.anim.direction)<=0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,-lcos(this.spin.under.under.top[0]+this.anim.direction)))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,-lcos(this.spin.under.under.top[0]+this.anim.direction)))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,-lcos(this.spin.under.under.top[0]+this.anim.direction)))[2],this.fade*this.fades.under.under.top)
                        this.layer.ellipse(lsin(this.spin.under.under.top[0]+this.anim.direction)*4.2,-50,lcos(this.spin.under.under.top[0]+this.anim.direction)*2.5+3.5,6)
                    }
                    if(this.trigger.display.under.under.top&&lcos(this.spin.under.under.top[1]+this.anim.direction)<=0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,-lcos(this.spin.under.under.top[1]+this.anim.direction)))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,-lcos(this.spin.under.under.top[1]+this.anim.direction)))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,-lcos(this.spin.under.under.top[1]+this.anim.direction)))[2],this.fade*this.fades.under.under.top)
                        this.layer.ellipse(lsin(this.spin.under.under.top[1]+this.anim.direction)*4.2,-50,lcos(this.spin.under.under.top[1]+this.anim.direction)*2.5+3.5,6)
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.ellipse(0,-46,11,30)
                    }
                    if(this.trigger.display.skin.button){
                        if(lcos(this.spin.button+this.anim.direction)>0){
                            this.layer.noStroke()
                            this.layer.fill(this.flashColor(this.color.skin.button)[0],this.flashColor(this.color.skin.button)[1],this.flashColor(this.color.skin.button)[2],this.fade*this.fades.skin.button)
                            this.layer.ellipse(lsin(this.spin.button+this.anim.direction)*5.2,-42,1*lcos(this.spin.button+this.anim.direction),2)
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.extra.sword&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.6&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4&&g==1){
                            this.minorDisplay(0,g)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        if(this.trigger.display.band[1]&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.6&&g==0){
                            this.minorDisplay(1,g)
                        }
                        for(let h=0;h<2;h++){
                            if((g==0&&h==0||g==1&&h==1)&&lcos(this.spin.legs[0].bottom+this.anim.direction)<=lcos(this.spin.legs[1].bottom+this.anim.direction)||(g==0&&h==1||g==1&&h==0)&&lcos(this.spin.legs[0].bottom+this.anim.direction)>lcos(this.spin.legs[1].bottom+this.anim.direction)){
                                if(this.fades.sandal.back[h]>0&&this.trigger.display.sandal.back[h]){
                                    this.layer.translate(this.graphics.legs[h].sandal.back.x,this.graphics.legs[h].sandal.back.y+1.5)
                                    this.layer.scale(1.2,0.6)
                                    this.layer.rotate(-this.anim.direction+this.spin.sandal[h])
                                    if(this.trigger.display.extra.damage){
                                        this.layer.image(graphics.minor[5+h],-4*this.fades.sandal.back[h]*this.fade,-4*this.fades.sandal.back[h]*this.fade,8*this.fades.sandal.back[h]*this.fade,8*this.fades.sandal.back[h]*this.fade)
                                    }else{
                                        this.layer.image(graphics.minor[4],-4*this.fades.sandal.back[h]*this.fade,-4*this.fades.sandal.back[h]*this.fade,8*this.fades.sandal.back[h]*this.fade,8*this.fades.sandal.back[h]*this.fade)
                                    }
                                    this.layer.rotate(this.anim.direction-this.spin.sandal[h])
                                    this.layer.scale(5/6,5/3)
                                    this.layer.translate(-this.graphics.legs[h].sandal.back.x,-this.graphics.legs[h].sandal.back.y-1.5)
                                }
                                if(this.fades.sandal.front[h]>0&&this.trigger.display.sandal.front[h]){
                                    this.layer.translate(this.graphics.legs[h].sandal.front.x,this.graphics.legs[h].sandal.front.y+1.5)
                                    this.layer.scale(1.2,0.6)
                                    this.layer.rotate(-this.anim.direction+this.spin.sandal[h])
                                    for(let i=0;i<2;i++){
                                        if((lcos(this.anim.direction+65*(i*2-1)-this.spin.sandal[h])<=0.2&&this.trigger.display.mode.sandal.edge==0||i%2!=h&&this.trigger.display.mode.sandal.edge==1)){
                                            this.layer.image(graphics.minor[7+i],-4*this.fades.sandal.front[h]*this.fade,-4*this.fades.sandal.front[h]*this.fade,8*this.fades.sandal.front[h]*this.fade,8*this.fades.sandal.front[h]*this.fade)
                                        }
                                    }
                                    this.layer.rotate(this.anim.direction-this.spin.sandal[h])
                                    this.layer.scale(5/6,5/3)
                                    this.layer.translate(-this.graphics.legs[h].sandal.front.x,-this.graphics.legs[h].sandal.front.y-1.5)
                                }
                                if(this.trigger.display.skin.legs){
                                    this.layer.stroke(upColor(this.color.skin.legs,lcos(this.anim.direction+this.spin.legs[h].top)*10,[1,1,1])[0],upColor(this.color.skin.legs,lcos(this.anim.direction+this.spin.legs[h].top)*10,[1,1,1])[1],upColor(this.color.skin.legs,lcos(this.anim.direction+this.spin.legs[h].top)*10,[1,1,1])[2],this.fade*this.fades.skin.legs)
                                    this.layer.strokeWeight(4)
                                    this.layer.line(this.graphics.legs[h].top.x,this.graphics.legs[h].top.y,this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y)
                                    this.layer.line(this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y,this.graphics.legs[h].bottom.x,this.graphics.legs[h].bottom.y)
                                }
                                if(this.trigger.display.band[0]&&h==1){
                                    this.layer.noFill()
                                    this.layer.stroke(this.color.band[0][0],this.color.band[0][1],this.color.band[0][2],this.fade*this.fades.band[0])
                                    this.layer.strokeWeight(0.45)
                                    this.layer.line(
                                        this.graphics.legs[h].top.x*0.5+this.graphics.legs[h].middle.x*0.5+1.9*lsin(atan2(this.graphics.legs[h].top.x-this.graphics.legs[h].middle.x,this.graphics.legs[h].top.y-this.graphics.legs[h].middle.y)+90),
                                        this.graphics.legs[h].top.y*0.5+this.graphics.legs[h].middle.y*0.5+1.9*lcos(atan2(this.graphics.legs[h].top.x-this.graphics.legs[h].middle.x,this.graphics.legs[h].top.y-this.graphics.legs[h].middle.y)+90),
                                        this.graphics.legs[h].top.x*0.5+this.graphics.legs[h].middle.x*0.5-1.9*lsin(atan2(this.graphics.legs[h].top.x-this.graphics.legs[h].middle.x,this.graphics.legs[h].top.y-this.graphics.legs[h].middle.y)+90),
                                        this.graphics.legs[h].top.y*0.5+this.graphics.legs[h].middle.y*0.5-1.9*lcos(atan2(this.graphics.legs[h].top.x-this.graphics.legs[h].middle.x,this.graphics.legs[h].top.y-this.graphics.legs[h].middle.y)+90))
                                    this.layer.strokeWeight(0.3)
                                    if(this.trigger.display.extra.damage){
                                        this.layer.line(
                                            this.graphics.legs[h].top.x*0.5+this.graphics.legs[h].middle.x*0.5,this.graphics.legs[h].top.y*0.5+this.graphics.legs[h].middle.y*0.5,
                                            this.graphics.legs[h].top.x*0.375+this.graphics.legs[h].middle.x*0.625-0.3125*lsin(atan2(this.graphics.legs[h].top.x-this.graphics.legs[h].middle.x,this.graphics.legs[h].top.y-this.graphics.legs[h].middle.y)+90),
                                            this.graphics.legs[h].top.y*0.375+this.graphics.legs[h].middle.y*0.625-0.3125*lcos(atan2(this.graphics.legs[h].top.x-this.graphics.legs[h].middle.x,this.graphics.legs[h].top.y-this.graphics.legs[h].middle.y)+90))
                                        this.layer.line(
                                            this.graphics.legs[h].top.x*0.5+this.graphics.legs[h].middle.x*0.5,this.graphics.legs[h].top.y*0.5+this.graphics.legs[h].middle.y*0.5,
                                            this.graphics.legs[h].top.x*0.4+this.graphics.legs[h].middle.x*0.6+0.25*lsin(atan2(this.graphics.legs[h].top.x-this.graphics.legs[h].middle.x,this.graphics.legs[h].top.y-this.graphics.legs[h].middle.y)+90),
                                            this.graphics.legs[h].top.y*0.4+this.graphics.legs[h].middle.y*0.6+0.25*lcos(atan2(this.graphics.legs[h].top.x-this.graphics.legs[h].middle.x,this.graphics.legs[h].top.y-this.graphics.legs[h].middle.y)+90))
                                        this.layer.arc(
                                            this.graphics.legs[h].top.x*0.46+this.graphics.legs[h].middle.x*0.54-0.5*lsin(atan2(this.graphics.legs[h].top.x-this.graphics.legs[h].middle.x,this.graphics.legs[h].top.y-this.graphics.legs[h].middle.y)+90),
                                            this.graphics.legs[h].top.y*0.46+this.graphics.legs[h].middle.y*0.54-0.5*lcos(atan2(this.graphics.legs[h].top.x-this.graphics.legs[h].middle.x,this.graphics.legs[h].top.y-this.graphics.legs[h].middle.y)+90),1,1,-150,30)
                                        this.layer.arc(
                                            this.graphics.legs[h].top.x*0.46+this.graphics.legs[h].middle.x*0.54+0.5*lsin(atan2(this.graphics.legs[h].top.x-this.graphics.legs[h].middle.x,this.graphics.legs[h].top.y-this.graphics.legs[h].middle.y)+90),
                                            this.graphics.legs[h].top.y*0.46+this.graphics.legs[h].middle.y*0.54+0.5*lcos(atan2(this.graphics.legs[h].top.x-this.graphics.legs[h].middle.x,this.graphics.legs[h].top.y-this.graphics.legs[h].middle.y)+90),1,1,-210,-30)
                                    }else{
                                        this.layer.line(
                                            this.graphics.legs[h].top.x*0.5+this.graphics.legs[h].middle.x*0.5,this.graphics.legs[h].top.y*0.5+this.graphics.legs[h].middle.y*0.5,
                                            this.graphics.legs[h].top.x*0.35+this.graphics.legs[h].middle.x*0.65-0.375*lsin(atan2(this.graphics.legs[h].top.x-this.graphics.legs[h].middle.x,this.graphics.legs[h].top.y-this.graphics.legs[h].middle.y)+90),
                                            this.graphics.legs[h].top.y*0.35+this.graphics.legs[h].middle.y*0.65-0.375*lcos(atan2(this.graphics.legs[h].top.x-this.graphics.legs[h].middle.x,this.graphics.legs[h].top.y-this.graphics.legs[h].middle.y)+90))
                                        this.layer.line(
                                            this.graphics.legs[h].top.x*0.5+this.graphics.legs[h].middle.x*0.5,this.graphics.legs[h].top.y*0.5+this.graphics.legs[h].middle.y*0.5,
                                            this.graphics.legs[h].top.x*0.35+this.graphics.legs[h].middle.x*0.65+0.375*lsin(atan2(this.graphics.legs[h].top.x-this.graphics.legs[h].middle.x,this.graphics.legs[h].top.y-this.graphics.legs[h].middle.y)+90),
                                            this.graphics.legs[h].top.y*0.35+this.graphics.legs[h].middle.y*0.65+0.375*lcos(atan2(this.graphics.legs[h].top.x-this.graphics.legs[h].middle.x,this.graphics.legs[h].top.y-this.graphics.legs[h].middle.y)+90))
                                        this.layer.ellipse(
                                            this.graphics.legs[h].top.x*0.46+this.graphics.legs[h].middle.x*0.54-0.5*lsin(atan2(this.graphics.legs[h].top.x-this.graphics.legs[h].middle.x,this.graphics.legs[h].top.y-this.graphics.legs[h].middle.y)+90),
                                            this.graphics.legs[h].top.y*0.46+this.graphics.legs[h].middle.y*0.54-0.5*lcos(atan2(this.graphics.legs[h].top.x-this.graphics.legs[h].middle.x,this.graphics.legs[h].top.y-this.graphics.legs[h].middle.y)+90),1,1)
                                        this.layer.ellipse(
                                            this.graphics.legs[h].top.x*0.46+this.graphics.legs[h].middle.x*0.54+0.5*lsin(atan2(this.graphics.legs[h].top.x-this.graphics.legs[h].middle.x,this.graphics.legs[h].top.y-this.graphics.legs[h].middle.y)+90),
                                            this.graphics.legs[h].top.y*0.46+this.graphics.legs[h].middle.y*0.54+0.5*lcos(atan2(this.graphics.legs[h].top.x-this.graphics.legs[h].middle.x,this.graphics.legs[h].top.y-this.graphics.legs[h].middle.y)+90),1,1)
                                    }
                                }
                                if(this.fades.sandal.front[h]>0&&this.trigger.display.sandal.front[h]){
                                    this.layer.translate(this.graphics.legs[h].sandal.front.x,this.graphics.legs[h].sandal.front.y+1.5)
                                    this.layer.scale(1.2,0.6)
                                    this.layer.rotate(-this.anim.direction+this.spin.sandal[h])
                                    for(let i=0;i<2;i++){
                                        if((lcos(this.anim.direction+65*(i*2-1)-this.spin.sandal[h])>0.2&&this.trigger.display.mode.sandal.edge==0||i%2==h&&this.trigger.display.mode.sandal.edge==1)){
                                            this.layer.image(graphics.minor[7+i],-4*this.fades.sandal.front[h]*this.fade,-4*this.fades.sandal.front[h]*this.fade,8*this.fades.sandal.front[h]*this.fade,8*this.fades.sandal.front[h]*this.fade)
                                        }
                                    }
                                    this.layer.rotate(this.anim.direction-this.spin.sandal[h])
                                    this.layer.scale(5/6,5/3)
                                    this.layer.translate(-this.graphics.legs[h].sandal.front.x,-this.graphics.legs[h].sandal.front.y-1.5)
                                }
                            }
                        }
                    }
                    if(this.trigger.display.under.under.top&&lcos(this.spin.under.under.top[0]+this.anim.direction)>0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,lcos(this.spin.under.under.top[0]+this.anim.direction)))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,lcos(this.spin.under.under.top[0]+this.anim.direction)))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,lcos(this.spin.under.under.top[0]+this.anim.direction)))[2],this.fade*this.fades.under.under.top)
                        this.layer.ellipse(lsin(this.spin.under.under.top[0]+this.anim.direction)*4.2,-50,lcos(this.spin.under.under.top[0]+this.anim.direction)*2.5+3.5,6)
                    }
                    if(this.trigger.display.under.under.top&&lcos(this.spin.under.under.top[1]+this.anim.direction)>0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,lcos(this.spin.under.under.top[1]+this.anim.direction)))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,lcos(this.spin.under.under.top[1]+this.anim.direction)))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,lcos(this.spin.under.under.top[1]+this.anim.direction)))[2],this.fade*this.fades.under.under.top)
                        this.layer.ellipse(lsin(this.spin.under.under.top[1]+this.anim.direction)*4.2,-50,lcos(this.spin.under.under.top[1]+this.anim.direction)*2.5+3.5,6)
                    }
                    if(this.trigger.display.under.under.button&&lcos(this.spin.under.under.button[0]+this.anim.direction)>0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,lcos(this.spin.under.under.button[0]+this.anim.direction)/4+0.75))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,lcos(this.spin.under.under.button[0]+this.anim.direction)/4+0.75))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,lcos(this.spin.under.under.button[0]+this.anim.direction)/4+0.75))[2],this.fade*this.fades.under.under.button)
                        this.layer.ellipse(lsin(this.spin.under.under.button[0]+this.anim.direction)*5.5,-49.5,lcos(this.spin.under.under.button[0]+this.anim.direction)*0.25+1,1.25)
                    }
                    if(this.trigger.display.under.under.button&&lcos(this.spin.under.under.button[1]+this.anim.direction)>0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,lcos(this.spin.under.under.button[1]+this.anim.direction)/4+0.75))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,lcos(this.spin.under.under.button[1]+this.anim.direction)/4+0.75))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,lcos(this.spin.under.under.button[1]+this.anim.direction)/4+0.75))[2],this.fade*this.fades.under.under.button)
                        this.layer.ellipse(lsin(this.spin.under.under.button[1]+this.anim.direction)*5.5,-49.5,lcos(this.spin.under.under.button[1]+this.anim.direction)*0.25+1,1.25)
                    }
                    if(this.trigger.display.under.top){
                        this.sprites.temp=createGraphics(80,80)
                        setupLayer(this.sprites.temp)
                        this.sprites.temp.translate(40,0)
                        this.sprites.temp.noStroke()
                        this.sprites.temp.fill(this.color.under.outside[0],this.color.under.outside[1],this.color.under.outside[2],this.fade*this.fades.under.top)
                        for(let g=0;g<2;g++){
                            if(lcos(this.spin.under.under.top[g]+this.anim.direction)){
                                if(lsin(this.spin.under.under.top[g]+this.anim.direction+27)*9-lsin(this.spin.under.under.top[g]+this.anim.direction)*6>0){
                                    this.sprites.temp.arc(lsin(this.spin.under.under.top[g]+this.anim.direction)*18,75,lsin(this.spin.under.under.top[g]+this.anim.direction+27)*36-lsin(this.spin.under.under.top[g]+this.anim.direction)*24,70,-90,0)
                                    this.sprites.temp.ellipse(lsin(this.spin.under.under.top[g]+this.anim.direction)*18,75,4,70)
                                }
                                if(lsin(this.spin.under.under.top[g]+this.anim.direction)*6-lsin(this.spin.under.under.top[g]+this.anim.direction-27)*9>0){
                                    this.sprites.temp.arc(lsin(this.spin.under.under.top[g]+this.anim.direction)*18,75,lsin(this.spin.under.under.top[g]+this.anim.direction)*24-lsin(this.spin.under.under.top[g]+this.anim.direction-27)*36,70,-180,-90)
                                    this.sprites.temp.ellipse(lsin(this.spin.under.under.top[g]+this.anim.direction)*18,75,4,70)
                                }
                            }
                        }
                        this.sprites.temp.rect(0,59,44,2)
                        this.sprites.temp.erase()
                        this.sprites.temp.rect(0,70,80,20)
                        this.layer.image(this.sprites.temp,-10*this.anim.under.top.x,this.parts.under.top-12*this.anim.under.top.y,20*this.anim.under.top.x,20*this.anim.under.top.y)
                        this.layer.noStroke()
                        this.layer.fill(this.color.under.outside[0],this.color.under.outside[1],this.color.under.outside[2],this.fade*this.fades.under.top)
                        if(this.trigger.display.under.under.button&&lcos(this.spin.under.under.button[0]+this.anim.direction)>-0.4){
                            this.layer.ellipse(lsin(this.spin.under.under.button[0]+this.anim.direction)*5.5,-49.5,lcos(this.spin.under.under.button[0]+this.anim.direction)*0.25+1,1.5)
                        }
                        if(this.trigger.display.under.under.button&&lcos(this.spin.under.under.button[1]+this.anim.direction)>-0.4){
                            this.layer.ellipse(lsin(this.spin.under.under.button[1]+this.anim.direction)*5.5,-49.5,lcos(this.spin.under.under.button[1]+this.anim.direction)*0.25+1,1.5)
                        }
                        this.layer.fill(this.color.under.fringe[0],this.color.under.fringe[1],this.color.under.fringe[2],this.fade)
                        for(let g=0,lg=this.spin.under.top.length;g<lg;g++){
                            if(lcos(this.spin.under.top[g]+this.anim.direction)>0){
                                this.layer.arc(5.5*lsin(this.spin.under.top[g]+this.anim.direction)*this.anim.under.top.x,this.parts.under.top+3*this.anim.under.top.y,lcos(this.spin.under.top[g]+this.anim.direction)*1.4*this.anim.under.top.x,3.5*this.anim.under.top.y,0,180)
                            }
                        }
                        for(let g=0,lg=2;g<lg;g++){
                            if(lcos(this.spin.under.under.top[g]+this.anim.direction)>0){
                                this.layer.push()
                                this.layer.translate(5.5*lsin(this.spin.under.under.top[g]+this.anim.direction),-50)
                                this.layer.rotate(-10*lsin(this.spin.under.under.top[g]+this.anim.direction))
                                this.layer.scale(lcos(this.spin.under.under.top[g]+this.anim.direction),1)
                                this.layer.rotate(45+g*45)
                                this.layer.fill(this.color.under.decoration,this.fade*this.fades.under.bottom)
                                for(let h=0;h<6;h++){
                                    this.layer.rotate(60)
                                    this.layer.ellipse(0,-0.6,0.4,1.2)
                                }
                                this.layer.pop()
                            }
                        }
                    }
                    if(this.trigger.display.under.under.bottom&&lcos(this.spin.under.under.bottom[0]+this.anim.direction)>0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.bottom[0],lcos(this.spin.under.under.bottom[0]+this.anim.direction)))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.bottom[0],lcos(this.spin.under.under.bottom[0]+this.anim.direction)))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.bottom[0],lcos(this.spin.under.under.bottom[0]+this.anim.direction)))[2],this.fade*this.fades.under.under.bottom)
                        this.layer.beginShape()
                        this.layer.vertex(lsin(this.spin.under.under.bottom[0]+this.anim.direction)*3.5,-35)
                        this.layer.bezierVertex(lsin(this.spin.under.under.bottom[0]+this.anim.direction)*2.75,-33.5,lsin(this.spin.under.under.bottom[1]*this.anim.under.under.bottom+this.anim.direction)*2.75,-34,lsin(this.spin.under.under.bottom[1]*this.anim.under.under.bottom+this.anim.direction)*2.5,-33)
                        this.layer.bezierVertex(lsin(this.spin.under.under.bottom[1]*this.anim.under.under.bottom+this.anim.direction)*2.25,-32,lsin(this.spin.under.under.bottom[0]+this.anim.direction)*2.25,-32.5,lsin(this.spin.under.under.bottom[0]+this.anim.direction)*1.5,-31)
                        this.layer.bezierVertex(lsin(this.spin.under.under.bottom[0]+this.anim.direction)*2.25,-32.5,lsin(this.spin.under.under.bottom[2]*this.anim.under.under.bottom+this.anim.direction)*2.25,-32,lsin(this.spin.under.under.bottom[2]*this.anim.under.under.bottom+this.anim.direction)*2.5,-33)
                        this.layer.bezierVertex(lsin(this.spin.under.under.bottom[2]*this.anim.under.under.bottom+this.anim.direction)*2.75,-34,lsin(this.spin.under.under.bottom[0]+this.anim.direction)*2.75,-33.5,lsin(this.spin.under.under.bottom[0]+this.anim.direction)*3.5,-35)
                        this.layer.endShape()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.bottom[1],lcos(this.spin.under.under.bottom[0]+this.anim.direction)))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.bottom[1],lcos(this.spin.under.under.bottom[0]+this.anim.direction)))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.bottom[1],lcos(this.spin.under.under.bottom[0]+this.anim.direction)))[2],this.fade*this.fades.under.under.bottom)
                        this.layer.beginShape()
                        this.layer.vertex(lsin(this.spin.under.under.bottom[0]+this.anim.direction)*3.5,-35)
                        this.layer.bezierVertex(lsin(this.spin.under.under.bottom[0]+this.anim.direction)*2.75,-33.5,lsin(this.spin.under.under.bottom[3]*this.anim.under.under.bottom+this.anim.direction)*2.75,-34,lsin(this.spin.under.under.bottom[3]*this.anim.under.under.bottom+this.anim.direction)*2.5,-33)
                        this.layer.bezierVertex(lsin(this.spin.under.under.bottom[3]*this.anim.under.under.bottom+this.anim.direction)*2.25,-32,lsin(this.spin.under.under.bottom[0]+this.anim.direction)*2.25,-32.5,lsin(this.spin.under.under.bottom[0]+this.anim.direction)*1.5,-31)
                        this.layer.bezierVertex(lsin(this.spin.under.under.bottom[0]+this.anim.direction)*2.25,-32.5,lsin(this.spin.under.under.bottom[4]*this.anim.under.under.bottom+this.anim.direction)*2.25,-32,lsin(this.spin.under.under.bottom[4]*this.anim.under.under.bottom+this.anim.direction)*2.5,-33)
                        this.layer.bezierVertex(lsin(this.spin.under.under.bottom[4]*this.anim.under.under.bottom+this.anim.direction)*2.75,-34,lsin(this.spin.under.under.bottom[0]+this.anim.direction)*2.75,-33.5,lsin(this.spin.under.under.bottom[0]+this.anim.direction)*3.5,-35)
                        this.layer.endShape()
                    }
                    if(this.trigger.display.under.tanga){
                        this.sprites.temp=createGraphics(40,40)
                        setupLayer(this.sprites.temp)
                        this.sprites.temp.noStroke()
                        this.sprites.temp.fill(this.color.under.tanga[0],this.color.under.tanga[1],this.color.under.tanga[2],this.fade*this.fades.under.tanga)
                        if(abs(this.anim.direction)<this.spin.under.tanga){
                            this.sprites.temp.arc(20,2,18*lsin(this.anim.direction+this.spin.under.tanga),36,0,90)
                            this.sprites.temp.arc(20,2,18*lsin(this.anim.direction-this.spin.under.tanga),36,90,180)
                        }else if(this.anim.direction>=this.spin.under.tanga&&this.anim.direction<(this.spin.under.tanga+90)){
                            this.sprites.temp.arc(20,2,18*lsin(this.anim.direction+this.spin.under.tanga),36,0,90)
                        }else if(this.anim.direction<=-this.spin.under.tanga&&this.anim.direction>-(this.spin.under.tanga+90)){
                            this.sprites.temp.arc(20,2,18*lsin(this.anim.direction-this.spin.under.tanga),36,90,180)
                        }
                        if(abs(this.anim.direction)>=(180-this.spin.under.tanga)){
                            this.sprites.temp.arc(20,2,18*lsin(this.anim.direction-(180-this.spin.under.tanga)),36,0,90)
                            this.sprites.temp.arc(20,2,18*lsin(this.anim.direction+(180-this.spin.under.tanga)),36,90,180)
                        }else if(this.anim.direction>=-(180-this.spin.under.tanga)&&this.anim.direction<-(90-this.spin.under.tanga)){
                            this.sprites.temp.arc(20,2,18*lsin(this.anim.direction-(180-this.spin.under.tanga)),36,0,90)
                        }else if(this.anim.direction<=(180-this.spin.under.tanga)&&this.anim.direction>(90-this.spin.under.tanga)){
                            this.sprites.temp.arc(20,2,18*lsin(this.anim.direction+(180-this.spin.under.tanga)),36,90,180)
                        }
                        this.sprites.temp.erase()
                        this.sprites.temp.rect(20,6,40,11)
                        if(this.anim.direction>=this.spin.under.tanga&&this.anim.direction<(this.spin.under.tanga+90)){
                            this.sprites.temp.arc(20,2,18*lsin(this.anim.direction-this.spin.under.tanga),36,0,90)
                        }else if(this.anim.direction<=-this.spin.under.tanga&&this.anim.direction>-(this.spin.under.tanga+90)){
                            this.sprites.temp.arc(20,2,18*lsin(this.anim.direction+this.spin.under.tanga),36,90,180)
                        }
                        if(this.anim.direction>=-(180-this.spin.under.tanga)&&this.anim.direction<-(90-this.spin.under.tanga)){
                            this.sprites.temp.arc(20,2,18*lsin(this.anim.direction+(180-this.spin.under.tanga)),36,0,90)
                        }else if(this.anim.direction<=(180-this.spin.under.tanga)&&this.anim.direction>(90-this.spin.under.tanga)){
                            this.sprites.temp.arc(20,2,18*lsin(this.anim.direction-(180-this.spin.under.tanga)),36,90,180)
                        }
                        this.sprites.temp.noErase()
                        this.sprites.temp.rect(20,11,16,1/this.anim.under.bottom.y)
                        if(this.anim.under.bottom.y<=0){
                            this.layer.push()
                            this.layer.translate(0,this.parts.under.bottom-6*this.anim.under.bottom.y)
                            this.layer.scale(1,-1)
                            this.layer.image(this.sprites.temp,-10*this.anim.under.bottom.x,-5,20*this.anim.under.bottom.x,20*abs(this.anim.under.bottom.y))
                            this.layer.pop()
                        }else{
                            this.layer.image(this.sprites.temp,-10*this.anim.under.bottom.x,this.parts.under.bottom-5*this.anim.under.bottom.y-5,20*this.anim.under.bottom.x,20*abs(this.anim.under.bottom.y))
                        }
                    }
                    if(this.trigger.display.under.bottom){
                        this.sprites.temp=createGraphics(80,90)
                        setupLayer(this.sprites.temp)
                        this.sprites.temp.scale(2)
                        this.sprites.temp.fill(this.color.under.outside[0],this.color.under.outside[1],this.color.under.outside[2],this.fade*this.fades.under.bottom)
                        this.sprites.temp.noStroke()
                        if(abs(this.anim.direction)<this.spin.under.piece){
                            this.sprites.temp.arc(20,2,19*lsin(this.anim.direction+this.spin.under.piece),40,0,90)
                            this.sprites.temp.arc(20,2,19*lsin(this.anim.direction-this.spin.under.piece),40,90,180)
                        }else if(this.anim.direction>=this.spin.under.piece&&this.anim.direction<(this.spin.under.piece+90)){
                            this.sprites.temp.arc(20,2,19*lsin(this.anim.direction+this.spin.under.piece),40,0,90)
                        }else if(this.anim.direction<=-this.spin.under.piece&&this.anim.direction>-(this.spin.under.piece+90)){
                            this.sprites.temp.arc(20,2,19*lsin(this.anim.direction-this.spin.under.piece),40,90,180)
                        }
                        if(abs(this.anim.direction)>=(180-this.spin.under.piece)){
                            this.sprites.temp.arc(20,2,19*lsin(this.anim.direction-(180-this.spin.under.piece)),40,0,90)
                            this.sprites.temp.arc(20,2,19*lsin(this.anim.direction+(180-this.spin.under.piece)),40,90,180)
                        }else if(this.anim.direction>=-(180-this.spin.under.piece)&&this.anim.direction<-(90-this.spin.under.piece)){
                            this.sprites.temp.arc(20,2,19*lsin(this.anim.direction-(180-this.spin.under.piece)),40,0,90)
                        }else if(this.anim.direction<=(180-this.spin.under.piece)&&this.anim.direction>(90-this.spin.under.piece)){
                            this.sprites.temp.arc(20,2,19*lsin(this.anim.direction+(180-this.spin.under.piece)),40,90,180)
                        }
                        this.sprites.temp.erase()
                        this.sprites.temp.rect(20,6,40,11)
                        if(this.anim.direction>=this.spin.under.piece&&this.anim.direction<(this.spin.under.piece+90)){
                            this.sprites.temp.arc(20,2,19*lsin(this.anim.direction-this.spin.under.piece),40,0,90)
                        }else if(this.anim.direction<=-this.spin.under.piece&&this.anim.direction>-(this.spin.under.piece+90)){
                            this.sprites.temp.arc(20,2,19*lsin(this.anim.direction+this.spin.under.piece),40,90,180)
                        }
                        if(this.anim.direction>=-(180-this.spin.under.piece)&&this.anim.direction<-(90-this.spin.under.piece)){
                            this.sprites.temp.arc(20,2,19*lsin(this.anim.direction+(180-this.spin.under.piece)),40,0,90)
                        }else if(this.anim.direction<=(180-this.spin.under.piece)&&this.anim.direction>(90-this.spin.under.piece)){
                            this.sprites.temp.arc(20,2,19*lsin(this.anim.direction-(180-this.spin.under.piece)),40,90,180)
                        }
                        this.sprites.temp.noErase()
                        this.sprites.temp.rect(20,11,17.5,1/this.anim.under.bottom.y)
                        if(this.anim.under.bottom.y<=0){
                            this.layer.push()
                            this.layer.translate(0,this.parts.under.bottom-7*this.anim.under.bottom.y)
                            this.layer.scale(1,-1)
                            this.layer.image(this.sprites.temp,-10*this.anim.under.bottom.x,-5,20*this.anim.under.bottom.x,22.5*abs(this.anim.under.bottom.y))
                            this.layer.pop()
                        }else{
                            this.layer.image(this.sprites.temp,-10*this.anim.under.bottom.x,this.parts.under.bottom-6*this.anim.under.bottom.y-5,20*this.anim.under.bottom.x,22.5*abs(this.anim.under.bottom.y))
                        }
                        this.layer.fill(this.color.under.fringe[0],this.color.under.fringe[1],this.color.under.fringe[2],this.fade)
                        this.layer.noStroke()
                        for(let g=0,lg=this.spin.under.bottom.length;g<lg;g++){
                            if(lcos(this.spin.under.bottom[g]+this.anim.direction)>0){
                                this.layer.arc(4.375*lsin(this.spin.under.bottom[g]+this.anim.direction)*this.anim.under.bottom.x,this.parts.under.bottom-5.3*this.anim.under.bottom.y,lcos(this.spin.under.bottom[g]+this.anim.direction)*1.4*this.anim.under.bottom.x,3.5*this.anim.under.bottom.y,0,180)
                            }
                        }
                        for(let g=0,lg=2;g<lg;g++){
                            if(lcos(g*180+this.anim.direction)>0){
                                this.layer.push()
                                this.layer.translate(3*lsin(g*180+this.anim.direction),-34)
                                this.layer.rotate(30*lsin(g*180+this.anim.direction))
                                this.layer.scale(lcos(g*180+this.anim.direction),1)
                                this.layer.rotate(15+g*25)
                                this.layer.fill(this.color.under.decoration,this.fade*this.fades.under.bottom)
                                for(let h=0;h<6;h++){
                                    this.layer.rotate(60)
                                    this.layer.ellipse(0,-0.6,0.4,1.2)
                                }
                                this.layer.pop()
                            }
                        }
                    }
                    if(this.trigger.display.under.bow.top){
                        this.layer.fill(this.color.under.bow[0],this.color.under.bow[1],this.color.under.bow[2],this.fade*this.fades.under.bow.top)
                        this.layer.stroke(this.color.under.bow[0],this.color.under.bow[1],this.color.under.bow[2],this.fade*this.fades.under.bow.top)
                        this.layer.strokeWeight(0.3)
                        if(lcos(this.spin.underBow.top.center/2+this.spin.underBow.top.loop[0]/2+this.anim.direction)>0){
                            this.layer.triangle(
                                lsin(this.spin.underBow.top.center+this.anim.direction)*5.75*this.anim.under.bow.top.position.x,this.parts.under.top+this.parts.under.bow.top*this.anim.under.bow.top.position.y,
                                lsin(this.spin.underBow.top.loop[0]+this.anim.direction)*5.75*this.anim.under.bow.top.position.x,this.parts.under.top+(this.parts.under.bow.top-0.5)*this.anim.under.bow.top.position.y,
                                lsin(this.spin.underBow.top.loop[0]+this.anim.direction)*5.75*this.anim.under.bow.top.position.x,this.parts.under.top+(this.parts.under.bow.top+0.5)*this.anim.under.bow.top.position.y
                            )
                        }
                        if(lcos(this.spin.underBow.top.center/2+this.spin.underBow.top.loop[1]/2+this.anim.direction)>0){
                            this.layer.triangle(
                                lsin(this.spin.underBow.top.center+this.anim.direction)*5.75*this.anim.under.bow.top.position.x,this.parts.under.top+this.parts.under.bow.top*this.anim.under.bow.top.position.y,
                                lsin(this.spin.underBow.top.loop[1]+this.anim.direction)*5.75*this.anim.under.bow.top.position.x,this.parts.under.top+(this.parts.under.bow.top-0.5)*this.anim.under.bow.top.position.y,
                                lsin(this.spin.underBow.top.loop[1]+this.anim.direction)*5.75*this.anim.under.bow.top.position.x,this.parts.under.top+(this.parts.under.bow.top+0.5)*this.anim.under.bow.top.position.y
                            )
                        }
                        this.layer.noFill()
                        if(lcos(this.spin.underBow.top.center/2+this.spin.underBow.top.end[0]/2+this.anim.direction)>0){
                            this.layer.line(lsin(this.spin.underBow.top.center+this.anim.direction)*5.75*this.anim.under.bow.top.position.x,this.parts.under.top+this.parts.under.bow.top*this.anim.under.bow.top.position.y,lsin(this.spin.underBow.top.end[0]*this.anim.under.bow.top.size.x/this.anim.under.bow.top.position.x+this.anim.direction)*(5.75*this.anim.under.bow.top.position.x+0.25*this.anim.under.bow.top.size.x),this.parts.under.top+this.parts.under.bow.top*this.anim.under.bow.top.position.y+1.2*this.anim.under.bow.top.size.y)
                        }
                        if(lcos(this.spin.underBow.top.center/2+this.spin.underBow.top.end[1]/2+this.anim.direction)>0){
                            this.layer.line(lsin(this.spin.underBow.top.center+this.anim.direction)*5.75*this.anim.under.bow.top.position.x,this.parts.under.top+this.parts.under.bow.top*this.anim.under.bow.top.position.y,lsin(this.spin.underBow.top.end[1]*this.anim.under.bow.top.size.x/this.anim.under.bow.top.position.x+this.anim.direction)*(5.75*this.anim.under.bow.top.position.x+0.25*this.anim.under.bow.top.size.x),this.parts.under.top+this.parts.under.bow.top*this.anim.under.bow.top.position.y+1.2*this.anim.under.bow.top.size.y)
                        }
                    }
                    if(this.trigger.display.under.bow.bottom){
                        this.layer.fill(this.color.under.bow[0],this.color.under.bow[1],this.color.under.bow[2],this.fade*this.fades.under.bow.bottom)
                        this.layer.stroke(this.color.under.bow[0],this.color.under.bow[1],this.color.under.bow[2],this.fade*this.fades.under.bow.bottom)
                        this.layer.strokeWeight(0.3)
                        if(lcos(this.spin.underBow.bottom.center/2+this.spin.underBow.bottom.loop[0]/2+this.anim.direction)>0){
                            this.layer.triangle(
                                lsin(this.spin.underBow.bottom.center+this.anim.direction)*4.5*this.anim.under.bow.bottom.position.x,this.parts.under.bottom+this.parts.under.bow.bottom*this.anim.under.bow.bottom.position.y,
                                lsin(this.spin.underBow.bottom.loop[0]+this.anim.direction)*4.5*this.anim.under.bow.bottom.position.x,this.parts.under.bottom+(this.parts.under.bow.bottom-0.5)*this.anim.under.bow.bottom.position.y,
                                lsin(this.spin.underBow.bottom.loop[0]+this.anim.direction)*4.5*this.anim.under.bow.bottom.position.x,this.parts.under.bottom+(this.parts.under.bow.bottom+0.5)*this.anim.under.bow.bottom.position.y
                            )
                        }
                        if(lcos(this.spin.underBow.bottom.center/2+this.spin.underBow.bottom.loop[1]/2+this.anim.direction)>0){
                            this.layer.triangle(
                                lsin(this.spin.underBow.bottom.center+this.anim.direction)*4.5*this.anim.under.bow.bottom.position.x,this.parts.under.bottom+this.parts.under.bow.bottom*this.anim.under.bow.bottom.position.y,
                                lsin(this.spin.underBow.bottom.loop[1]+this.anim.direction)*4.5*this.anim.under.bow.bottom.position.x,this.parts.under.bottom+(this.parts.under.bow.bottom-0.5)*this.anim.under.bow.bottom.position.y,
                                lsin(this.spin.underBow.bottom.loop[1]+this.anim.direction)*4.5*this.anim.under.bow.bottom.position.x,this.parts.under.bottom+(this.parts.under.bow.bottom+0.5)*this.anim.under.bow.bottom.position.y
                            )
                        }
                        this.layer.noFill()
                        if(lcos(this.spin.underBow.bottom.center/2+this.spin.underBow.bottom.end[0]/2+this.anim.direction)>0){
                            this.layer.line(lsin(this.spin.underBow.bottom.center+this.anim.direction)*4.5*this.anim.under.bow.bottom.position.x,this.parts.under.bottom+this.parts.under.bow.bottom*this.anim.under.bow.bottom.position.y,lsin(this.spin.underBow.bottom.end[0]*this.anim.under.bow.bottom.size.x/this.anim.under.bow.bottom.position.x+this.anim.direction)*(4.5*this.anim.under.bow.bottom.position.x+0.25*this.anim.under.bow.bottom.size.x),this.parts.under.bottom+this.parts.under.bow.bottom*this.anim.under.bow.bottom.position.y+1.2*this.anim.under.bow.bottom.size.y)
                        }
                        if(lcos(this.spin.underBow.bottom.center/2+this.spin.underBow.bottom.end[1]/2+this.anim.direction)>0){
                            this.layer.line(lsin(this.spin.underBow.bottom.center+this.anim.direction)*4.5*this.anim.under.bow.bottom.position.x,this.parts.under.bottom+this.parts.under.bow.bottom*this.anim.under.bow.bottom.position.y,lsin(this.spin.underBow.bottom.end[1]*this.anim.under.bow.bottom.size.x/this.anim.under.bow.bottom.position.x+this.anim.direction)*(4.5*this.anim.under.bow.bottom.position.x+0.25*this.anim.under.bow.bottom.size.x),this.parts.under.bottom+this.parts.under.bow.bottom*this.anim.under.bow.bottom.position.y+1.2*this.anim.under.bow.bottom.size.y)
                        }
                    }
                    if(this.trigger.display.kimono.main.front){
                        if(this.trigger.display.extra.damage){
                            this.layer.image(graphics.combatant[0].sprites.kimono.mainDamage.front[this.sprites.spinDetail],-15*this.fade*this.fades.kimono.main.back.x,this.parts.kimono.main-15*this.fades.kimono.main.back.y,30*this.fade*this.fades.kimono.main.back.x,66*this.fade*this.fades.kimono.main.back.y)
                        }else{
                            this.layer.image(graphics.combatant[0].sprites.kimono.main.front[this.sprites.spinDetail],-15*this.fade*this.fades.kimono.main.back.x,this.parts.kimono.main-15*this.fades.kimono.main.back.y,30*this.fade*this.fades.kimono.main.back.x,66*this.fade*this.fades.kimono.main.back.y)
                        }
                    }
                    if(this.trigger.display.kimono.decoration){
                        this.layer.noStroke()
                        for(let g=0,lg=this.kimono.decoration.length;g<lg;g++){
                            if(lcos(this.kimono.decoration[g].spin+this.anim.direction)>0&&!(this.trigger.display.extra.damage&&this.kimono.decoration[g].y<20)){
                                this.layer.push()
                                this.layer.translate((1.5+this.kimono.decoration[g].y*0.16)*lsin(this.kimono.decoration[g].spin+this.anim.direction)*this.fades.kimono.decoration.position.x,this.parts.kimono.main-13*this.fades.kimono.decoration.position.y+this.kimono.decoration[g].y*this.fades.kimono.decoration.position.y)
                                this.layer.rotate(-12*lsin(this.kimono.decoration[g].spin+this.anim.direction))
                                this.layer.scale(this.fades.kimono.decoration.size.x*lcos(this.kimono.decoration[g].spin+this.anim.direction),this.fades.kimono.decoration.size.y)
                                this.layer.rotate(this.kimono.decoration[g].rotate)
                                for(let h=0,lh=5;h<lh;h++){
                                    this.layer.fill(
                                        mergeColor(this.color.kimono.decoration.front[this.kimono.decoration[g].type],this.color.kimono.decoration.front[this.kimono.decoration[g].type+1],h/lh)[0],
                                        mergeColor(this.color.kimono.decoration.front[this.kimono.decoration[g].type],this.color.kimono.decoration.front[this.kimono.decoration[g].type+1],h/lh)[1],
                                        mergeColor(this.color.kimono.decoration.front[this.kimono.decoration[g].type],this.color.kimono.decoration.front[this.kimono.decoration[g].type+1],h/lh)[2],this.fade*this.fades.kimono.decoration.fade)
                                    for(let i=0;i<3;i++){
                                        this.layer.rotate(120)
                                        this.layer.ellipse(0,-this.kimono.decoration[g].height*0.8,this.kimono.decoration[g].width*2.8*(1-h/lh),this.kimono.decoration[g].height*1.6*(1-h/lh))
                                        this.layer.ellipse(0,this.kimono.decoration[g].height*0.8,this.kimono.decoration[g].width*2.8*(1-h/lh),this.kimono.decoration[g].height*1.6*(1-h/lh))
                                    }
                                }
                                this.layer.pop()
                            }
                        }
                    }
                    if(this.trigger.display.kimono.outside.front){
                        if(this.trigger.display.extra.damage){
                            this.layer.image(graphics.combatant[0].sprites.kimono.outsideDamage.front[this.sprites.spinDetail],-15*this.fade*this.fades.kimono.outside.back.x,this.parts.kimono.outside-15*this.fades.kimono.outside.back.y,30*this.fade*this.fades.kimono.outside.back.x,66*this.fade*this.fades.kimono.outside.back.y)
                        }else{
                            this.layer.image(graphics.combatant[0].sprites.kimono.outside.front[this.sprites.spinDetail],-15*this.fade*this.fades.kimono.outside.back.x,this.parts.kimono.outside-15*this.fades.kimono.outside.back.y,30*this.fade*this.fades.kimono.outside.back.x,66*this.fade*this.fades.kimono.outside.back.y)
                        }
                    }
                    if(this.trigger.display.kimono.bow){
                        this.layer.noFill()
                        this.layer.stroke(this.color.kimono.bow[0],this.color.kimono.bow[1],this.color.kimono.bow[2],this.fade*this.fades.kimono.bow)
                        this.layer.strokeWeight(0.25)
                        if(this.trigger.display.extra.damage){
                            if(lcos(this.anim.direction+this.spin.bow.loop[0]/2)>0){
                                this.layer.arc(lsin(this.anim.direction+this.spin.bow.loop[0]/2)*5.4,this.parts.kimono.bow,lcos(this.anim.direction+this.spin.bow.loop[0]/2)*2.4,2.4,0,135)
                            }
                            if(lcos(this.anim.direction+this.spin.bow.loop[1]/2)>0){
                                this.layer.arc(lsin(this.anim.direction+this.spin.bow.loop[1]/2)*5.4,this.parts.kimono.bow,lcos(this.anim.direction+this.spin.bow.loop[1]/2)*2.4,2.4,45,180)
                            }
                            if(lcos(this.anim.direction)>0){
                                this.layer.arc(lsin(this.anim.direction)*5.5,this.parts.kimono.bow+1.2,lcos(this.anim.direction)*2.4,2.4,-45,225)
                            }
                        }else{
                            if(lcos(this.anim.direction+this.spin.bow.loop[0]/2)>0){
                                this.layer.ellipse(lsin(this.anim.direction+this.spin.bow.loop[0]/2)*5.4,this.parts.kimono.bow,lcos(this.anim.direction+this.spin.bow.loop[0]/2)*2.4,2.4)
                            }
                            if(lcos(this.anim.direction+this.spin.bow.loop[1]/2)>0){
                                this.layer.ellipse(lsin(this.anim.direction+this.spin.bow.loop[1]/2)*5.4,this.parts.kimono.bow,lcos(this.anim.direction+this.spin.bow.loop[1]/2)*2.4,2.4)
                            }
                            if(lcos(this.anim.direction)>0){
                                this.layer.ellipse(lsin(this.anim.direction)*5.3,this.parts.kimono.bow-1.2,lcos(this.anim.direction)*2.4,2.4)
                                this.layer.ellipse(lsin(this.anim.direction)*5.5,this.parts.kimono.bow+1.2,lcos(this.anim.direction)*2.4,2.4)
                            }
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.extra.sword&&(lcos(this.spin.arms[g].top+this.anim.direction)>=0.4&&lcos(this.spin.arms[g].top+this.anim.direction)<0.6)&&g==1){
                            this.minorDisplay(0,g)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.4&&lcos(this.spin.arms[g].top+this.anim.direction)<0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                        if(this.trigger.display.band[1]&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.4&&lcos(this.spin.arms[g].top+this.anim.direction)<0.6&&g==0){
                            this.minorDisplay(1,g)
                        }
                    }
                    if(this.trigger.display.skin.head){
                        this.layer.fill(this.flashColor(this.color.skin.head)[0],this.flashColor(this.color.skin.head)[1],this.flashColor(this.color.skin.head)[2],this.fade*this.fades.skin.head)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-75,30,30)
                    }
                    if(this.trigger.display.mouth&&lcos(this.anim.direction)>0.1){
                        this.minorDisplayGeneral(1,0)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.extra.sword&&(lcos(this.spin.arms[g].top+this.anim.direction)>=0.6||lcos(this.spin.arms[g].bottom+this.anim.direction)>=0.3)&&g==1){
                            this.minorDisplay(0,g)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>=0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].bottom+this.anim.direction)>=0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        if(this.trigger.display.band[1]&&(lcos(this.spin.arms[g].top+this.anim.direction)>=0.6||lcos(this.spin.arms[g].bottom+this.anim.direction)>=0.2)&&g==0){
                            this.minorDisplay(1,g)
                        }
                        if(this.trigger.display.eye[g]){
                            this.minorDisplayGeneral(0,g)
                        }
                    }
                    if(this.trigger.display.hair.front){
                        this.layer.image(graphics.combatant[0].sprites.hair.front[this.sprites.spinDetailHead],-25*this.fade,-75-20*this.fade,50*this.fade,100*this.fade)
                    }
                    if(this.trigger.display.hair.glow){
                        this.layer.noFill()
                        this.layer.stroke(this.color.hair.glow[0],this.color.hair.glow[1],this.color.hair.glow[2],this.fade/4)
                        for(let g=0;g<6;g++){
                            this.layer.strokeWeight((3-g/2)*this.fade)
                            this.layer.arc(0,-75,30+g,30+g,-72+g*6,-12-g*6)
                        }
                    }
                    if(this.trigger.display.flower[2]&&this.fades.flower[2]>0){
                        if(constrain((pow(lcos(this.spin.flower[2]+this.anim.head),1.5)*2-0.2),0,1)>0){
                            this.layer.image(graphics.minor[3],lsin(this.spin.flower[2]+this.anim.head)*18.5-5*this.fade*this.fades.flower[2]*constrain((pow(lcos(this.spin.flower[2]+this.anim.head),1.5)*2-0.2),0,1),this.parts.flowerLevel[2]-5*this.fade*this.fades.flower[2],10*this.fade*this.fades.flower[2]*constrain((pow(lcos(this.spin.flower[2]+this.anim.head),1.5)*2-0.2),0,1),10*this.fade*this.fades.flower[2])
                        }
                    }
                    if(this.trigger.display.flower[1]&&this.fades.flower[1]>0){
                        if(constrain((pow(lcos(this.spin.flower[1]+this.anim.head),1.5)*2-0.2),0,1)>0){
                            this.layer.image(graphics.minor[2],lsin(this.spin.flower[1]+this.anim.head)*18.5-8*this.fade*this.fades.flower[1]*constrain((pow(lcos(this.spin.flower[1]+this.anim.head),1.5)*2-0.2),0,1),this.parts.flowerLevel[1]-8*this.fade*this.fades.flower[1],16*this.fade*this.fades.flower[1]*constrain((pow(lcos(this.spin.flower[1]+this.anim.head),1.5)*2-0.2),0,1),16*this.fade*this.fades.flower[1])
                        }
                    }
                    if(this.trigger.display.flower[0]&&this.fades.flower[0]>0){
                        if(constrain((pow(lcos(this.spin.flower[0]+this.anim.head),1.5)*2-0.2),0,1)>0){
                            if(this.trigger.display.extra.damage){
                                this.layer.image(graphics.minor[1],lsin(this.spin.flower[0]+this.anim.head)*18.5-10*this.fade*this.fades.flower[0]*constrain((pow(lcos(this.spin.flower[0]+this.anim.head),1.5)*2-0.2),0,1),this.parts.flowerLevel[0]-10*this.fade*this.fades.flower[0],20*this.fade*this.fades.flower[0]*constrain((pow(lcos(this.spin.flower[0]+this.anim.head),1.5)*2-0.2),0,1),20*this.fade*this.fades.flower[0])
                            }else{
                                this.layer.image(graphics.minor[0],lsin(this.spin.flower[0]+this.anim.head)*18.5-10*this.fade*this.fades.flower[0]*constrain((pow(lcos(this.spin.flower[0]+this.anim.head),1.5)*2-0.2),0,1),this.parts.flowerLevel[0]-10*this.fade*this.fades.flower[0],20*this.fade*this.fades.flower[0]*constrain((pow(lcos(this.spin.flower[0]+this.anim.head),1.5)*2-0.2),0,1),20*this.fade*this.fades.flower[0])
                            }
                        }
                    }
                break
                case 'Sakura':
                    if(this.trigger.display.hair.back){
                        this.layer.image(graphics.combatant[1].sprites.hair.back[this.sprites.spinDetailHead],-20*this.fade,-75-20*this.fade,40*this.fade,60*this.fade)
                    }
                    if(this.trigger.display.hair.tail&&lcos(this.spin.tail+this.anim.direction)<=0){
                        this.layer.image(graphics.combatant[1].sprites.hair.tail[this.sprites.spinDetailHead],lsin(this.spin.tail+this.anim.direction)*14.5-10*this.fade,-50-25*this.fade,20*this.fade,50*this.fade)
                    }
                    if(this.trigger.display.necklace.back){
                        this.layer.noFill()
                        this.layer.stroke(this.color.necklace[0],this.color.necklace[1],this.color.necklace[2],this.fade*this.fades.necklace.back)
                        this.layer.strokeWeight(0.4)
                        if(lcos(this.spin.necklace[0]+this.anim.direction)<=0){
                            this.layer.arc(0,-59,6,3,atan2(lsin(90-this.spin.necklace[0]-this.anim.direction),lcos(90-this.spin.necklace[0]-this.anim.direction)*2),0)
                        }
                        if(lcos(this.spin.necklace[1]+this.anim.direction)<=0){
                            this.layer.arc(0,-59,6,3,-180,atan2(lsin(90-this.spin.necklace[1]-this.anim.direction),lcos(90-this.spin.necklace[1]-this.anim.direction)*2))
                        }
                        if(lcos(this.spin.necklace[0]+this.anim.direction)>0&&lcos(this.spin.necklace[1]+this.anim.direction)>0){
                            this.layer.arc(0,-59,6,3,-180,0)
                        }
                        if(lcos(this.spin.necklaceBow.center+this.anim.direction)>0){
                            this.layer.line(lsin(this.spin.necklaceBow.center+this.anim.direction)*3,this.parts.necklaceBow+1.5*sqrt(1-lsin(this.spin.necklaceBow.center+this.anim.direction)*lsin(this.spin.necklaceBow.center+this.anim.direction)),
                            lsin(this.spin.necklaceBow.end[0]+this.anim.direction)*3.5,this.parts.necklaceBow+2+1.5*sqrt(1-lsin(this.spin.necklaceBow.end[0]+this.anim.direction)*lsin(this.spin.necklaceBow.end[0]+this.anim.direction)))
                            this.layer.line(lsin(this.spin.necklaceBow.center+this.anim.direction)*3,this.parts.necklaceBow+1.5*sqrt(1-lsin(this.spin.necklaceBow.center+this.anim.direction)*lsin(this.spin.necklaceBow.center+this.anim.direction)),
                            lsin(this.spin.necklaceBow.end[1]+this.anim.direction)*3.5,this.parts.necklaceBow+2+1.5*sqrt(1-lsin(this.spin.necklaceBow.end[1]+this.anim.direction)*lsin(this.spin.necklaceBow.end[1]+this.anim.direction)))
                            this.layer.ellipse(lsin(this.spin.necklaceBow.loop[0]+this.anim.direction)*3.2,this.parts.necklaceBow+0.5+1.5*sqrt(1-lsin(this.spin.necklaceBow.loop[0]+this.anim.direction)*lsin(this.spin.necklaceBow.loop[0]+this.anim.direction)),
                            lcos(this.spin.necklaceBow.loop[0]+this.anim.direction)*1.2,1.2)
                            this.layer.ellipse(lsin(this.spin.necklaceBow.loop[1]+this.anim.direction)*3.2,this.parts.necklaceBow+0.5+1.5*sqrt(1-lsin(this.spin.necklaceBow.loop[1]+this.anim.direction)*lsin(this.spin.necklaceBow.loop[1]+this.anim.direction)),
                            lcos(this.spin.necklaceBow.loop[1]+this.anim.direction)*1.2,1.2)
                        }
                        if(!(this.spin.necklace[0]+this.anim.direction>-130&&this.spin.necklace[0]+this.anim.direction<65)){
                            if(lsin(this.spin.necklace[2]+this.anim.direction)*5.25<lsin(this.spin.necklace[0]+this.anim.direction)*3){
                                this.layer.arc(lsin(this.spin.necklace[0]+this.anim.direction)*3,-54,lsin(this.spin.necklace[2]+this.anim.direction)*10.5-lsin(this.spin.necklace[0]+this.anim.direction)*6,10-lcos(this.spin.necklace[0]+this.anim.direction)*3,-180,-90)
                            }else{
                                this.layer.arc(lsin(this.spin.necklace[0]+this.anim.direction)*3,-54,lsin(this.spin.necklace[2]+this.anim.direction)*10.5-lsin(this.spin.necklace[0]+this.anim.direction)*6,10-lcos(this.spin.necklace[0]+this.anim.direction)*3,-90,0)
                            }
                        }
                        if(!(this.spin.necklace[1]+this.anim.direction<130&&this.spin.necklace[1]+this.anim.direction>-65)){
                            if(lsin(this.spin.necklace[2]+this.anim.direction)*5.25>lsin(this.spin.necklace[1]+this.anim.direction)*3){
                                this.layer.arc(lsin(this.spin.necklace[1]+this.anim.direction)*3,-54,lsin(this.spin.necklace[2]+this.anim.direction)*10.5-lsin(this.spin.necklace[1]+this.anim.direction)*6,10-lcos(this.spin.necklace[1]+this.anim.direction)*3,-90,0)
                            }else{
                                this.layer.arc(lsin(this.spin.necklace[1]+this.anim.direction)*3,-54,lsin(this.spin.necklace[2]+this.anim.direction)*10.5-lsin(this.spin.necklace[1]+this.anim.direction)*6,10-lcos(this.spin.necklace[1]+this.anim.direction)*3,-180,-90)
                            }
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.extra.sword&&lcos(this.spin.arms[g].top+this.anim.direction)<=0.6&&g==0){
                            this.minorDisplay(0,g)
                        }
                        if(this.trigger.display.extra.sword2&&lcos(this.spin.arms[g].top+this.anim.direction)<=0.6&&g==1){
                            this.minorDisplay(1,g)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        if(this.trigger.display.wrap.sleeve&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.3){
                            this.layer.strokeJoin(ROUND)
                            this.layer.strokeWeight(0.4)
                            this.layer.fill(this.color.wrap.in[0],this.color.wrap.in[1],this.color.wrap.in[2],this.fade*this.fades.wrap.bow)
                            this.layer.stroke(this.color.wrap.out[0],this.color.wrap.out[1],this.color.wrap.out[2],this.fade*this.fades.wrap.bow)
                            this.calc.int=[
                                this.graphics.arms[g].top.x-constrain(lsin(this.spin.arms[g].top+this.anim.direction)*1.2,-1,1)*(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*0.135-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)/8,
                                this.graphics.arms[g].top.y+constrain(lsin(this.spin.arms[g].top+this.anim.direction)*1.2,-1,1)*(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*0.135-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)/8,
                                this.graphics.arms[g].top.x-constrain(lsin(this.spin.arms[g].top+this.anim.direction)*1.2,-1,1)*(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*0.15-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)/4,
                                this.graphics.arms[g].top.y+constrain(lsin(this.spin.arms[g].top+this.anim.direction)*1.2,-1,1)*(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*0.15-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)/4
                            ]
                            if(!(this.anim.direction*(g*2-1)+this.spin.arms[g].lock>-150&&this.anim.direction*(g*2-1)+this.spin.arms[g].lock<150&&(lcos(this.spin.wrap.center+this.anim.direction)>=0||lcos(90*(g*2-1)+this.anim.direction)>=0))){
                                this.layer.triangle(this.calc.int[0],this.calc.int[1],this.calc.int[2],this.calc.int[3],lsin(this.spin.wrap.center+this.anim.direction)*6.6*this.fades.kimono.outside.front.x,this.parts.kimono.outside+16*this.fades.kimono.outside.front.y)
                            }
                            if(!((this.anim.direction*(g*2-1)+this.spin.arms[g].lock<-50||this.anim.direction*(g*2-1)+this.spin.arms[g].lock>50)&&(lcos(this.spin.wrap.center+this.anim.direction)<0||lcos(90*(g*2-1)+this.anim.direction)>=0))){
                                this.layer.triangle(this.calc.int[0],this.calc.int[1],this.calc.int[2],this.calc.int[3],lsin(this.spin.wrap.center+this.anim.direction)*-6.6*this.fades.kimono.outside.front.x,this.parts.kimono.outside+16*this.fades.kimono.outside.front.y)
                            }
                        }
                        if(this.trigger.display.sleeve&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.6){
                            this.layer.noStroke()
                            for(let h=0,lh=10;h<lh;h++){
                                this.layer.fill(mergeColor(this.color.sleeve.back,this.color.sleeve.front,h/lh),this.fade*this.fades.sleeve)
                                if(this.trigger.display.extra.damage){
                                    this.layer.beginShape()
                                    this.layer.vertex(this.graphics.arms[g].top.x+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.18-0.18*h/lh)*(g*2-1)-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.125+(0.175+g*0.05)*h/lh),
                                        this.graphics.arms[g].top.y-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.18-0.18*h/lh)*(g*2-1)-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.125+(0.175+g*0.05)*h/lh))
                                    this.layer.vertex(this.graphics.arms[g].top.x+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(-0.05+g*0.075)*(g*2-1)-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.3+g*0.05),
                                        this.graphics.arms[g].top.y-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(-0.05+g*0.075)*(g*2-1)-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.3+g*0.05))
                                    this.layer.vertex(this.graphics.arms[g].top.x-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.12-0.12*h/lh)*(g*2-1)-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.125+(0.175+g*0.05)*h/lh),
                                        this.graphics.arms[g].top.y+(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.12-0.12*h/lh)*(g*2-1)-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.125+(0.175+g*0.05)*h/lh))
                                    this.layer.vertex(this.graphics.arms[g].middle.x-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.18-0.18*h/lh)*(g*2-1),
                                        this.graphics.arms[g].middle.y+(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.18-0.18*h/lh)*(g*2-1))
                                    this.layer.vertex(this.graphics.arms[g].middle.x+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.27-0.27*h/lh)*(g*2-1),
                                        this.graphics.arms[g].middle.y-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.27-0.27*h/lh)*(g*2-1))
                                    this.layer.endShape()
                                }else{
                                    this.layer.quad(
                                        this.graphics.arms[g].top.x+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.18-0.18*h/lh)*(g*2-1)-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)/8,
                                        this.graphics.arms[g].top.y-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.18-0.18*h/lh)*(g*2-1)-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)/8,
                                        this.graphics.arms[g].top.x-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.12-0.12*h/lh)*(g*2-1)-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)/8,
                                        this.graphics.arms[g].top.y+(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.12-0.12*h/lh)*(g*2-1)-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)/8,
                                        this.graphics.arms[g].middle.x-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.18-0.18*h/lh)*(g*2-1),
                                        this.graphics.arms[g].middle.y+(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.18-0.18*h/lh)*(g*2-1),
                                        this.graphics.arms[g].middle.x+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.27-0.27*h/lh)*(g*2-1),
                                        this.graphics.arms[g].middle.y-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.27-0.27*h/lh)*(g*2-1)
                                    )
                                }
                                this.layer.push()
                                this.layer.translate(((this.graphics.arms[g].middle.x-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.18-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)))+
                                (this.graphics.arms[g].middle.x+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(g*2-1)*0.27*sign(lcos(this.anim.direction))))/2,
                                ((this.graphics.arms[g].middle.y+(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.18-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)))+
                                (this.graphics.arms[g].middle.y-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(g*2-1)*0.27*sign(lcos(this.anim.direction))))/2)
                                this.layer.rotate(atan2(this.graphics.arms[g].middle.x-this.graphics.arms[g].top.x,this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y))
                                let i=dist(0,0,
                                    ((this.graphics.arms[g].middle.x-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.18-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)))-
                                    (this.graphics.arms[g].middle.x+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(g*2-1)*0.27*sign(lcos(this.anim.direction)))),
                                    ((this.graphics.arms[g].middle.y+(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.18-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)))-
                                    (this.graphics.arms[g].middle.y-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(g*2-1)*0.27*sign(lcos(this.anim.direction)))))
                                this.layer.arc(0,0,i,i*(0.6-0.1*h/lh),-180,0)
                                this.layer.pop()
                                if(this.trigger.display.extra.damage){
                                    this.layer.beginShape()
                                    this.layer.vertex(this.graphics.arms[g].middle.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.165-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.165-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)))
                                    this.layer.vertex(this.graphics.arms[g].middle.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.165-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.165-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)))
                                    this.layer.vertex(this.graphics.arms[g].bottom.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.27-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.45+(0.2+g*0.05)*h/lh),
                                        this.graphics.arms[g].bottom.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.27-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.45+(0.2+g*0.05)*h/lh))
                                    this.layer.vertex(this.graphics.arms[g].bottom.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(-0.1+g*0.175)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.65+g*0.05),
                                        this.graphics.arms[g].bottom.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(-0.1+g*0.175)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.65+g*0.05))
                                    this.layer.vertex(this.graphics.arms[g].bottom.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.27-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.45+(0.2+g*0.05)*h/lh),
                                        this.graphics.arms[g].bottom.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.27-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.45+(0.2+g*0.05)*h/lh))
                                    this.layer.endShape()
                                }else{
                                    this.layer.quad(
                                        this.graphics.arms[g].middle.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.165-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.165-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.165-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.165-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].bottom.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.27-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)/4,
                                        this.graphics.arms[g].bottom.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.27-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)/4,
                                        this.graphics.arms[g].bottom.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.27-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)/4,
                                        this.graphics.arms[g].bottom.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.27-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)/4
                                    )
                                }
                            }
                        }
                    }
                    if(this.trigger.display.wrap.bow&&lcos(this.spin.wrap.bow+this.anim.direction)<=0){
                        this.layer.strokeJoin(ROUND)
                        this.layer.strokeWeight(0.4)
                        this.layer.fill(this.color.wrap.in[0],this.color.wrap.in[1],this.color.wrap.in[2],this.fade*this.fades.wrap.bow)
                        this.layer.stroke(this.color.wrap.out[0],this.color.wrap.out[1],this.color.wrap.out[2],this.fade*this.fades.wrap.bow)
                        this.calc.int=[this.parts.kimono.main+(this.parts.wrap.bow-this.parts.kimono.main)*this.fades.kimono.main.front.y]
                        if(this.trigger.display.extra.damage){
                            this.layer.beginShape()
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*7.3*this.fades.kimono.outside.front.x,this.calc.int[0])
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*9.1*this.fades.kimono.outside.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*6,this.calc.int[0]+3.6)
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*8.8*this.fades.kimono.outside.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*8,this.calc.int[0]+1.8)
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*8.2*this.fades.kimono.outside.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*8,this.calc.int[0]-1.8)
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*7.9*this.fades.kimono.outside.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*6,this.calc.int[0]-3.6)
                            this.layer.endShape(CLOSE)
                            this.layer.beginShape()
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*7.3*this.fades.kimono.outside.front.x,this.calc.int[0])
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*9.1*this.fades.kimono.outside.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*6,this.calc.int[0]+3.6)
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*8.8*this.fades.kimono.outside.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*8,this.calc.int[0]+1.8)
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*8.2*this.fades.kimono.outside.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*8,this.calc.int[0]-1.8)
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*7.9*this.fades.kimono.outside.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*6,this.calc.int[0]-3.6)
                            this.layer.endShape(CLOSE)
                        }else{
                            this.layer.triangle(lsin(this.spin.wrap.bow+this.anim.direction)*7.3*this.fades.kimono.outside.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*9.3*this.fades.kimono.outside.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*8,this.calc.int[0]+4.8,lsin(this.spin.wrap.bow+this.anim.direction)*7.7*this.fades.kimono.outside.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*8,this.calc.int[0]-4.8)
                            this.layer.triangle(lsin(this.spin.wrap.bow+this.anim.direction)*7.3*this.fades.kimono.outside.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*9.3*this.fades.kimono.outside.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*8,this.calc.int[0]+4.8,lsin(this.spin.wrap.bow+this.anim.direction)*7.7*this.fades.kimono.outside.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*8,this.calc.int[0]-4.8)
                        }
                        this.layer.line(lsin(this.spin.wrap.bow+this.anim.direction)*7.3*this.fades.kimono.outside.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*7.8*this.fades.kimono.outside.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*6,this.calc.int[0]+1.2)
                        this.layer.line(lsin(this.spin.wrap.bow+this.anim.direction)*7.3*this.fades.kimono.outside.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*7.8*this.fades.kimono.outside.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*6,this.calc.int[0]+1.2)
                        this.layer.line(lsin(this.spin.wrap.bow+this.anim.direction)*7.3*this.fades.kimono.outside.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*7.6*this.fades.kimono.outside.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*6,this.calc.int[0]-1.2)
                        this.layer.line(lsin(this.spin.wrap.bow+this.anim.direction)*7.3*this.fades.kimono.outside.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*7.6*this.fades.kimono.outside.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*6,this.calc.int[0]-1.2)
                        this.layer.strokeJoin(MITER)
                    }
                    if(this.trigger.display.kimono.fringe.back){
                        this.layer.image(graphics.combatant[1].sprites.kimono.fringe.back[this.sprites.spin%12],-15*this.fade*this.fades.kimono.fringe.back.x,this.parts.kimono.fringe-5*this.fade*this.fades.kimono.fringe.back.y,30*this.fade*this.fades.kimono.fringe.back.x,10*this.fade*this.fades.kimono.fringe.back.y)
                    }
                    if(this.trigger.display.wrap.bar&&lcos(this.spin.wrap.bar+this.anim.direction)<=0){
                        this.layer.strokeJoin(ROUND)
                        this.layer.strokeWeight(0.4)
                        this.layer.fill(this.color.wrap.in[0],this.color.wrap.in[1],this.color.wrap.in[2],this.fade*this.fades.wrap.bar)
                        this.layer.stroke(this.color.wrap.out[0],this.color.wrap.out[1],this.color.wrap.out[2],this.fade*this.fades.wrap.bar)
                        this.layer.quad(
                            lsin(this.spin.wrap.bar-this.parts.wrap.bar+this.anim.direction)*7.8*this.fades.kimono.outside.front.x,this.parts.kimono.outside+20*this.fades.kimono.outside.front.y,
                            lsin(this.spin.wrap.bar+this.parts.wrap.bar+this.anim.direction)*7.8*this.fades.kimono.outside.front.x,this.parts.kimono.outside+20*this.fades.kimono.outside.front.y,
                            lsin(this.spin.wrap.bar+this.parts.wrap.bar+this.anim.direction)*9.2*this.fades.kimono.outside.front.x,this.parts.kimono.outside+29*this.fades.kimono.outside.front.y,
                            lsin(this.spin.wrap.bar-this.parts.wrap.bar+this.anim.direction)*9.2*this.fades.kimono.outside.front.x,this.parts.kimono.outside+29*this.fades.kimono.outside.front.y
                        )
                        this.layer.strokeJoin(MITER)
                    }
                    if(this.trigger.display.kimono.string){
                        this.layer.noStroke()
                        this.layer.fill(this.color.kimono.string[0],this.color.kimono.string[1],this.color.kimono.string[2],this.fade*this.fades.kimono.string)
                        for(let g=0,lg=this.kimono.string.length;g<lg;g++){
                            if(lcos(this.kimono.string[g]+this.anim.direction)>0){
                                this.layer.rect(lsin(this.kimono.string[g]+this.anim.direction)*5.4*this.fades.kimono.outside.front.x,this.parts.kimono.outside+this.parts.kimono.string*this.fades.kimono.outside.front.y,lcos(this.kimono.string[g]+this.anim.direction)*this.fades.kimono.outside.front.x,0.25)
                            }
                        }
                    }
                    if(this.trigger.display.kimono.outside.back){
                        if(this.trigger.display.extra.damage){
                            this.layer.image(graphics.combatant[1].sprites.kimono.outsideDamage.back[this.sprites.spin%24],-15*this.fade*this.fades.kimono.outside.back.x,this.parts.kimono.outside,30*this.fade*this.fades.kimono.outside.back.x,40*this.fade*this.fades.kimono.outside.back.y)
                        }else{
                            this.layer.image(graphics.combatant[1].sprites.kimono.outside.back[this.sprites.spin%24],-15*this.fade*this.fades.kimono.outside.back.x,this.parts.kimono.outside,30*this.fade*this.fades.kimono.outside.back.x,40*this.fade*this.fades.kimono.outside.back.y)
                        }
                    }
                    if(this.trigger.display.kimono.main.back){
                        if(this.trigger.display.extra.damage){
                            this.layer.image(graphics.combatant[1].sprites.kimono.mainDamage.back[this.sprites.spinDetail],-20*this.fade*this.fades.kimono.main.back.x,this.parts.kimono.main-15*this.fades.kimono.main.back.y,40*this.fade*this.fades.kimono.main.back.x,66*this.fade*this.fades.kimono.main.back.y)
                        }else{
                            this.layer.image(graphics.combatant[1].sprites.kimono.main.back[this.sprites.spinDetail],-20*this.fade*this.fades.kimono.main.back.x,this.parts.kimono.main-15*this.fades.kimono.main.back.y,40*this.fade*this.fades.kimono.main.back.x,66*this.fade*this.fades.kimono.main.back.y)
                        }
                    }
                    if(this.trigger.display.kimono.decoration.small&&!this.trigger.display.extra.damage){
                        this.layer.noStroke()
                        this.layer.fill(this.color.kimono.decoration.back[0],this.color.kimono.decoration.back[1],this.color.kimono.decoration.back[2],this.fade*this.fades.kimono.decoration.fade.small)
                        for(let g=0,lg=this.kimono.decoration.small.length;g<lg;g++){
                            if(lcos(this.kimono.decoration.small[g].spin+this.anim.direction)<=0){
                                if(this.kimono.decoration.small[g].y<36||this.trigger.display.mode.kimono.main==0){
                                    this.layer.translate((2.375+this.kimono.decoration.small[g].y*0.16)*lsin(this.kimono.decoration.small[g].spin+this.anim.direction)*this.fades.kimono.decoration.position.small.x,this.parts.kimono.main-13*this.fades.kimono.decoration.position.small.y+this.kimono.decoration.small[g].y*this.fades.kimono.decoration.position.small.y)
                                    this.layer.rotate(this.kimono.decoration.small[g].rotate)
                                    this.layer.ellipse(0,0,this.kimono.decoration.small[g].width*lcos(this.kimono.decoration.small[g].spin+this.anim.direction)*this.fades.kimono.decoration.size.small.x,this.kimono.decoration.small[g].height*this.fades.kimono.decoration.size.small.y)
                                    this.layer.rotate(-this.kimono.decoration.small[g].rotate)
                                    this.layer.translate(-(2.375+this.kimono.decoration.small[g].y*0.16)*lsin(this.kimono.decoration.small[g].spin+this.anim.direction)*this.fades.kimono.decoration.position.small.x,-this.parts.kimono.main+13*this.fades.kimono.decoration.position.small.y-this.kimono.decoration.small[g].y*this.fades.kimono.decoration.position.small.y)
                                }else{
                                    this.layer.translate((0+this.kimono.decoration.small[g].y*0.26)*lsin(this.kimono.decoration.small[g].spin+this.anim.direction)*this.fades.kimono.decoration.position.small.x,this.parts.kimono.main-13*this.fades.kimono.decoration.position.small.y+(25.5+this.kimono.decoration.small[g].y*0.4)*this.fades.kimono.decoration.position.small.y)
                                    this.layer.rotate(this.kimono.decoration.small[g].rotate)
                                    this.layer.ellipse(0,0,this.kimono.decoration.small[g].width*lcos(this.kimono.decoration.small[g].spin+this.anim.direction)*this.fades.kimono.decoration.size.small.x,this.kimono.decoration.small[g].height*this.fades.kimono.decoration.size.small.y)
                                    this.layer.rotate(-this.kimono.decoration.small[g].rotate)
                                    this.layer.translate(-(0+this.kimono.decoration.small[g].y*0.26)*lsin(this.kimono.decoration.small[g].spin+this.anim.direction)*this.fades.kimono.decoration.position.small.x,-this.parts.kimono.main+13*this.fades.kimono.decoration.position.small.y-(25.5+this.kimono.decoration.small[g].y*0.4)*this.fades.kimono.decoration.position.small.y)
                                }
                            }
                        }
                    }
                    if(this.trigger.display.kimono.decoration.large&&!this.trigger.display.extra.damage){
                        this.layer.noStroke()
                        this.layer.fill(this.color.kimono.decoration.back[0],this.color.kimono.decoration.back[1],this.color.kimono.decoration.back[2],this.fade*this.fades.kimono.decoration.fade.large)
                        for(let g=0,lg=this.kimono.decoration.large.length;g<lg;g++){
                            if(lcos(this.kimono.decoration.large[g].spin+this.anim.direction)<=0){
                                if(this.kimono.decoration.large[g].y<36||this.trigger.display.mode.kimono.main==0){
                                    this.layer.translate((2.375+this.kimono.decoration.large[g].y*0.16)*lsin(this.kimono.decoration.large[g].spin+this.anim.direction)*this.fades.kimono.decoration.position.large.x,this.parts.kimono.main-13*this.fades.kimono.decoration.position.large.y+this.kimono.decoration.large[g].y*this.fades.kimono.decoration.position.large.y)
                                    this.layer.rotate(this.kimono.decoration.large[g].rotate)
                                    diamond(this.layer,0,0,this.kimono.decoration.large[g].width*lcos(this.kimono.decoration.large[g].spin+this.anim.direction)*this.fades.kimono.decoration.size.large.x,this.kimono.decoration.large[g].height*this.fades.kimono.decoration.size.large.y,0)
                                    diamond(this.layer,-this.kimono.decoration.large[g].width*8/3*lcos(this.kimono.decoration.large[g].spin+this.anim.direction)*this.fades.kimono.decoration.size.large.x,0,this.kimono.decoration.large[g].width*lcos(this.kimono.decoration.large[g].spin+this.anim.direction)*3/4*this.fades.kimono.decoration.size.large.x,this.kimono.decoration.large[g].height*3/4*this.fades.kimono.decoration.size.large.y,15)
                                    diamond(this.layer,this.kimono.decoration.large[g].width*8/3*lcos(this.kimono.decoration.large[g].spin+this.anim.direction)*this.fades.kimono.decoration.size.large.x,0,this.kimono.decoration.large[g].width*lcos(this.kimono.decoration.large[g].spin+this.anim.direction)*3/4*this.fades.kimono.decoration.size.large.x,this.kimono.decoration.large[g].height*3/4*this.fades.kimono.decoration.size.large.y,-15)
                                    this.layer.rotate(-this.kimono.decoration.large[g].rotate)
                                    this.layer.translate(-(2.375+this.kimono.decoration.large[g].y*0.16)*lsin(this.kimono.decoration.large[g].spin+this.anim.direction)*this.fades.kimono.decoration.position.large.x,-this.parts.kimono.main+13*this.fades.kimono.decoration.position.large.y-this.kimono.decoration.large[g].y*this.fades.kimono.decoration.position.large.y)
                                }else{
                                    this.layer.translate((0+this.kimono.decoration.large[g].y*0.26)*lsin(this.kimono.decoration.large[g].spin+this.anim.direction)*this.fades.kimono.decoration.position.large.x,this.parts.kimono.main-13*this.fades.kimono.decoration.position.large.y+(25.5+this.kimono.decoration.large[g].y*0.4)*this.fades.kimono.decoration.position.large.y)
                                    this.layer.rotate(this.kimono.decoration.large[g].rotate)
                                    diamond(this.layer,0,0,this.kimono.decoration.large[g].width*lcos(this.kimono.decoration.large[g].spin+this.anim.direction)*this.fades.kimono.decoration.size.large.x,this.kimono.decoration.large[g].height*this.fades.kimono.decoration.size.large.y,0)
                                    diamond(this.layer,-this.kimono.decoration.large[g].width*8/3*lcos(this.kimono.decoration.large[g].spin+this.anim.direction)*this.fades.kimono.decoration.size.large.x,0,this.kimono.decoration.large[g].width*lcos(this.kimono.decoration.large[g].spin+this.anim.direction)*3/4*this.fades.kimono.decoration.size.large.x,this.kimono.decoration.large[g].height*3/4*this.fades.kimono.decoration.size.large.y,15)
                                    diamond(this.layer,this.kimono.decoration.large[g].width*8/3*lcos(this.kimono.decoration.large[g].spin+this.anim.direction)*this.fades.kimono.decoration.size.large.x,0,this.kimono.decoration.large[g].width*lcos(this.kimono.decoration.large[g].spin+this.anim.direction)*3/4*this.fades.kimono.decoration.size.large.x,this.kimono.decoration.large[g].height*3/4*this.fades.kimono.decoration.size.large.y,-15)
                                    this.layer.rotate(-this.kimono.decoration.large[g].rotate)
                                    this.layer.translate(-(0+this.kimono.decoration.large[g].y*0.26)*lsin(this.kimono.decoration.large[g].spin+this.anim.direction)*this.fades.kimono.decoration.position.large.x,-this.parts.kimono.main+13*this.fades.kimono.decoration.position.large.y-(25.5+this.kimono.decoration.large[g].y*0.4)*this.fades.kimono.decoration.position.large.y)
                                }
                            }
                        }
                    }
                    if(this.trigger.display.under.dress.back){
                        this.layer.image(graphics.combatant[1].sprites.under.dress.back[this.sprites.spinDetail],-15*this.fade*this.fades.under.dress.back.x,this.parts.under.dress-15*this.fades.under.dress.back.y,30*this.fade*this.fades.under.dress.back.x,50*this.fade*this.fades.under.dress.back.y)
                    }
                    if(this.trigger.display.under.under.button&&lcos(this.spin.under.under.button[0]+this.anim.direction)<=0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,-lcos(this.spin.under.under.button[0]+this.anim.direction)/4+0.75))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,-lcos(this.spin.under.under.button[0]+this.anim.direction)/4+0.75))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,-lcos(this.spin.under.under.button[0]+this.anim.direction)/4+0.75))[2],this.fade*this.fades.under.under.button)
                        this.layer.ellipse(lsin(this.spin.under.under.button[0]+this.anim.direction)*5.75,-49.5,lcos(this.spin.under.under.button[0]+this.anim.direction)*0.25+1,1.25)
                    }
                    if(this.trigger.display.under.under.button&&lcos(this.spin.under.under.button[1]+this.anim.direction)<=0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,-lcos(this.spin.under.under.button[1]+this.anim.direction)/4+0.75))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,-lcos(this.spin.under.under.button[1]+this.anim.direction)/4+0.75))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,-lcos(this.spin.under.under.button[1]+this.anim.direction)/4+0.75))[2],this.fade*this.fades.under.under.button)
                        this.layer.ellipse(lsin(this.spin.under.under.button[1]+this.anim.direction)*5.75,-49.5,lcos(this.spin.under.under.button[1]+this.anim.direction)*0.25+1,1.25)
                    }
                    if(this.trigger.display.under.under.top&&lcos(this.spin.under.under.top[0]+this.anim.direction)<=0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,-lcos(this.spin.under.under.top[0]+this.anim.direction)))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,-lcos(this.spin.under.under.top[0]+this.anim.direction)))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,-lcos(this.spin.under.under.top[0]+this.anim.direction)))[2],this.fade*this.fades.under.under.top)
                        this.layer.ellipse(lsin(this.spin.under.under.top[0]+this.anim.direction)*4.2,-50,lcos(this.spin.under.under.top[0]+this.anim.direction)*2.5+3.5,6)
                    }
                    if(this.trigger.display.under.under.top&&lcos(this.spin.under.under.top[1]+this.anim.direction)<=0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,-lcos(this.spin.under.under.top[1]+this.anim.direction)))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,-lcos(this.spin.under.under.top[1]+this.anim.direction)))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,-lcos(this.spin.under.under.top[1]+this.anim.direction)))[2],this.fade*this.fades.under.under.top)
                        this.layer.ellipse(lsin(this.spin.under.under.top[1]+this.anim.direction)*4.2,-50,lcos(this.spin.under.under.top[1]+this.anim.direction)*2.5+3.5,6)
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.ellipse(0,-46,11,30)
                    }
                    if(this.trigger.display.skin.button){
                        if(lcos(this.spin.button+this.anim.direction)>0){
                            this.layer.noStroke()
                            this.layer.fill(this.flashColor(this.color.skin.button)[0],this.flashColor(this.color.skin.button)[1],this.flashColor(this.color.skin.button)[2],this.fade*this.fades.skin.button)
                            this.layer.ellipse(lsin(this.spin.button+this.anim.direction)*5.2,-42,1*lcos(this.spin.button+this.anim.direction),2)
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.extra.sword&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.6&&g==0){
                            this.minorDisplay(0,g)
                        }
                        if(this.trigger.display.extra.sword2&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.6&&g==1){
                            this.minorDisplay(1,g)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        if(this.trigger.display.wrap.sleeve&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.3){
                            this.layer.strokeJoin(ROUND)
                            this.layer.strokeWeight(0.4)
                            this.layer.fill(this.color.wrap.in[0],this.color.wrap.in[1],this.color.wrap.in[2],this.fade*this.fades.wrap.sleeve)
                            this.layer.stroke(this.color.wrap.out[0],this.color.wrap.out[1],this.color.wrap.out[2],this.fade*this.fades.wrap.sleeve)
                            this.calc.int=[
                                this.graphics.arms[g].top.x-constrain(lsin(this.spin.arms[g].top+this.anim.direction)*1.2,-1,1)*(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*0.135-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)/8,
                                this.graphics.arms[g].top.y+constrain(lsin(this.spin.arms[g].top+this.anim.direction)*1.2,-1,1)*(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*0.135-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)/8,
                                this.graphics.arms[g].top.x-constrain(lsin(this.spin.arms[g].top+this.anim.direction)*1.2,-1,1)*(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*0.15-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)/4,
                                this.graphics.arms[g].top.y+constrain(lsin(this.spin.arms[g].top+this.anim.direction)*1.2,-1,1)*(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*0.15-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)/4
                            ]
                            if(!(this.anim.direction*(g*2-1)+this.spin.arms[g].lock>-150&&this.anim.direction*(g*2-1)+this.spin.arms[g].lock<150&&(lcos(this.spin.wrap.center+this.anim.direction)>=0||lcos(90*(g*2-1)+this.anim.direction)>=0))){
                                this.layer.triangle(this.calc.int[0],this.calc.int[1],this.calc.int[2],this.calc.int[3],lsin(this.spin.wrap.center+this.anim.direction)*6.6*this.fades.kimono.outside.front.x,this.parts.kimono.outside+16*this.fades.kimono.outside.front.y)
                            }
                            if(!((this.anim.direction*(g*2-1)+this.spin.arms[g].lock<-50||this.anim.direction*(g*2-1)+this.spin.arms[g].lock>50)&&(lcos(this.spin.wrap.center+this.anim.direction)<0||lcos(90*(g*2-1)+this.anim.direction)>=0))){
                                this.layer.triangle(this.calc.int[0],this.calc.int[1],this.calc.int[2],this.calc.int[3],lsin(this.spin.wrap.center+this.anim.direction)*-6.6*this.fades.kimono.outside.front.x,this.parts.kimono.outside+16*this.fades.kimono.outside.front.y)
                            }
                        }
                        if(this.trigger.display.sleeve&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.3&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.6){
                            this.layer.noStroke()
                            for(let h=0,lh=10;h<lh;h++){
                                this.layer.fill(mergeColor(this.color.sleeve.back,this.color.sleeve.front,h/lh),this.fade*this.fades.sleeve)
                                if(this.trigger.display.extra.damage){
                                    this.layer.beginShape()
                                    this.layer.vertex(this.graphics.arms[g].top.x+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.18-0.18*h/lh)*(g*2-1)-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.125+(0.175+g*0.05)*h/lh),
                                        this.graphics.arms[g].top.y-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.18-0.18*h/lh)*(g*2-1)-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.125+(0.175+g*0.05)*h/lh))
                                    this.layer.vertex(this.graphics.arms[g].top.x+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(-0.05+g*0.075)*(g*2-1)-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.3+g*0.05),
                                        this.graphics.arms[g].top.y-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(-0.05+g*0.075)*(g*2-1)-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.3+g*0.05))
                                    this.layer.vertex(this.graphics.arms[g].top.x-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.12-0.12*h/lh)*(g*2-1)-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.125+(0.175+g*0.05)*h/lh),
                                        this.graphics.arms[g].top.y+(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.12-0.12*h/lh)*(g*2-1)-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.125+(0.175+g*0.05)*h/lh))
                                    this.layer.vertex(this.graphics.arms[g].middle.x-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.18-0.18*h/lh)*(g*2-1),
                                        this.graphics.arms[g].middle.y+(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.18-0.18*h/lh)*(g*2-1))
                                    this.layer.vertex(this.graphics.arms[g].middle.x+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.27-0.27*h/lh)*(g*2-1),
                                        this.graphics.arms[g].middle.y-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.27-0.27*h/lh)*(g*2-1))
                                    this.layer.endShape()
                                }else{
                                    this.layer.quad(
                                        this.graphics.arms[g].top.x+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.18-0.18*h/lh)*(g*2-1)-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)/8,
                                        this.graphics.arms[g].top.y-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.18-0.18*h/lh)*(g*2-1)-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)/8,
                                        this.graphics.arms[g].top.x-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.12-0.12*h/lh)*(g*2-1)-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)/8,
                                        this.graphics.arms[g].top.y+(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.12-0.12*h/lh)*(g*2-1)-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)/8,
                                        this.graphics.arms[g].middle.x-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.18-0.18*h/lh)*(g*2-1),
                                        this.graphics.arms[g].middle.y+(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.18-0.18*h/lh)*(g*2-1),
                                        this.graphics.arms[g].middle.x+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.27-0.18*h/lh)*(g*2-1),
                                        this.graphics.arms[g].middle.y-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.27-0.18*h/lh)*(g*2-1)
                                    )
                                }
                                this.layer.push()
                                this.layer.translate(((this.graphics.arms[g].middle.x-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.18-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)))+
                                (this.graphics.arms[g].middle.x+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(g*2-1)*0.27*sign(lcos(this.anim.direction))))/2,
                                ((this.graphics.arms[g].middle.y+(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.18-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)))+
                                (this.graphics.arms[g].middle.y-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(g*2-1)*0.27*sign(lcos(this.anim.direction))))/2)
                                this.layer.rotate(atan2(this.graphics.arms[g].middle.x-this.graphics.arms[g].top.x,this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y))
                                let i=dist(0,0,
                                    ((this.graphics.arms[g].middle.x-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.18-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)))-
                                    (this.graphics.arms[g].middle.x+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(g*2-1)*0.27*sign(lcos(this.anim.direction)))),
                                    ((this.graphics.arms[g].middle.y+(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.18-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)))-
                                    (this.graphics.arms[g].middle.y-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(g*2-1)*0.27*sign(lcos(this.anim.direction)))))
                                this.layer.arc(0,0,i,i*(0.6-0.1*h/lh),-180,0)
                                this.layer.pop()
                                if(this.trigger.display.extra.damage){
                                    this.layer.beginShape()
                                    this.layer.vertex(this.graphics.arms[g].middle.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.165-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.165-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)))
                                    this.layer.vertex(this.graphics.arms[g].middle.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.165-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.165-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)))
                                    this.layer.vertex(this.graphics.arms[g].bottom.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.27-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.45+(0.2+g*0.05)*h/lh),
                                        this.graphics.arms[g].bottom.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.27-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.45+(0.2+g*0.05)*h/lh))
                                    this.layer.vertex(this.graphics.arms[g].bottom.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(-0.1+g*0.175)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.65+g*0.05),
                                        this.graphics.arms[g].bottom.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(-0.1+g*0.175)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.65+g*0.05))
                                    this.layer.vertex(this.graphics.arms[g].bottom.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.27-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.24+(0.2+g*0.05)*h/lh),
                                        this.graphics.arms[g].bottom.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.27-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.24+(0.2+g*0.05)*h/lh))
                                    this.layer.endShape()
                                }else{
                                    this.layer.quad(
                                        this.graphics.arms[g].middle.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.165-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.165-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.165-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.165-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].bottom.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.27-0.09*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)/4,
                                        this.graphics.arms[g].bottom.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.27-0.09*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)/4,
                                        this.graphics.arms[g].bottom.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.27-0.09*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)/4,
                                        this.graphics.arms[g].bottom.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.27-0.09*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)/4
                                    )
                                }
                            }
                        }
                        for(let h=0;h<2;h++){
                            if((g==0&&h==0||g==1&&h==1)&&lcos(this.spin.legs[0].bottom+this.anim.direction)<=lcos(this.spin.legs[1].bottom+this.anim.direction)||(g==0&&h==1||g==1&&h==0)&&lcos(this.spin.legs[0].bottom+this.anim.direction)>lcos(this.spin.legs[1].bottom+this.anim.direction)){
                                if(this.fades.sandal.back[h]>0&&this.trigger.display.sandal.back[h]){
                                    this.layer.translate(this.graphics.legs[h].sandal.back.x,this.graphics.legs[h].sandal.back.y+1.5)
                                    this.layer.scale(1.2,0.6)
                                    this.layer.rotate(-this.anim.direction+this.spin.sandal[h])
                                    if(this.trigger.display.extra.damage){
                                        this.layer.image(graphics.minor[13+h],-4*this.fades.sandal.back[h]*this.fade,-4*this.fades.sandal.back[h]*this.fade,8*this.fades.sandal.back[h]*this.fade,8*this.fades.sandal.back[h]*this.fade)
                                    }else{
                                        this.layer.image(graphics.minor[12],-4*this.fades.sandal.back[h]*this.fade,-4*this.fades.sandal.back[h]*this.fade,8*this.fades.sandal.back[h]*this.fade,8*this.fades.sandal.back[h]*this.fade)
                                    }
                                    this.layer.rotate(this.anim.direction-this.spin.sandal[h])
                                    this.layer.scale(5/6,5/3)
                                    this.layer.translate(-this.graphics.legs[h].sandal.back.x,-this.graphics.legs[h].sandal.back.y-1.5)
                                }
                                if(this.fades.sandal.front[h]>0&&this.trigger.display.sandal.front[h]){
                                    this.layer.translate(this.graphics.legs[h].sandal.front.x,this.graphics.legs[h].sandal.front.y+1.5)
                                    this.layer.scale(1.2,0.6)
                                    this.layer.rotate(-this.anim.direction+this.spin.sandal[h])
                                    for(let i=0;i<2;i++){
                                        if((lcos(this.anim.direction+65*(i*2-1)-this.spin.sandal[h])<=0.2&&this.trigger.display.mode.sandal.edge==0||i%2!=h&&this.trigger.display.mode.sandal.edge==1)){
                                            this.layer.image(graphics.minor[15+i],-4*this.fades.sandal.front[h]*this.fade,-4*this.fades.sandal.front[h]*this.fade,8*this.fades.sandal.front[h]*this.fade,8*this.fades.sandal.front[h]*this.fade)
                                        }
                                    }
                                    this.layer.rotate(this.anim.direction-this.spin.sandal[h])
                                    this.layer.scale(5/6,5/3)
                                    this.layer.translate(-this.graphics.legs[h].sandal.front.x,-this.graphics.legs[h].sandal.front.y-1.5)
                                }
                                if(this.trigger.display.skin.legs){
                                    this.layer.stroke(upColor(this.color.skin.legs,lcos(this.anim.direction+this.spin.legs[h].top)*10,[1,1,1])[0],upColor(this.color.skin.legs,lcos(this.anim.direction+this.spin.legs[h].top)*10,[1,1,1])[1],upColor(this.color.skin.legs,lcos(this.anim.direction+this.spin.legs[h].top)*10,[1,1,1])[2],this.fade*this.fades.skin.legs)
                                    this.layer.strokeWeight(4)
                                    this.layer.line(this.graphics.legs[h].top.x,this.graphics.legs[h].top.y,this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y)
                                    this.layer.line(this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y,this.graphics.legs[h].bottom.x,this.graphics.legs[h].bottom.y)
                                }
                                if(this.fades.sandal.front[h]>0&&this.trigger.display.sandal.front[h]){
                                    this.layer.translate(this.graphics.legs[h].sandal.front.x,this.graphics.legs[h].sandal.front.y+1.5)
                                    this.layer.scale(1.2,0.6)
                                    this.layer.rotate(-this.anim.direction+this.spin.sandal[h])
                                    for(let i=0;i<2;i++){
                                        if((lcos(this.anim.direction+65*(i*2-1)-this.spin.sandal[h])>0.2&&this.trigger.display.mode.sandal.edge==0||i%2==h&&this.trigger.display.mode.sandal.edge==1)){
                                            this.layer.image(graphics.minor[15+i],-4*this.fades.sandal.front[h]*this.fade,-4*this.fades.sandal.front[h]*this.fade,8*this.fades.sandal.front[h]*this.fade,8*this.fades.sandal.front[h]*this.fade)
                                        }
                                    }
                                    this.layer.rotate(this.anim.direction-this.spin.sandal[h])
                                    this.layer.scale(5/6,5/3)
                                    this.layer.translate(-this.graphics.legs[h].sandal.front.x,-this.graphics.legs[h].sandal.front.y-1.5)
                                }
                            }
                        }
                    }
                    if(this.trigger.display.sleeveDecoration){
                        this.layer.noStroke()
                        for(let g=0,lg=this.spin.sleeve.decoration.length;g<lg;g++){
                            if(lcos(this.spin.sleeve.decoration[g].spin+this.anim.direction)>=0.2&&lcos(this.spin.arms[this.spin.sleeve.decoration[g].part].top+this.anim.direction)<=-0.3&&!(this.spin.sleeve.decoration[g].length>1.5&&this.trigger.display.extra.damage)){
                                h=this.spin.sleeve.decoration[g].part
                                this.layer.push()
                                if(this.spin.sleeve.decoration[g].length>1){
                                    this.layer.translate(
                                        lerp(
                                            this.graphics.arms[h].middle.x-(this.graphics.arms[h].middle.y-this.graphics.arms[h].bottom.y)*0.165*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction),
                                            this.graphics.arms[h].bottom.x-(this.graphics.arms[h].middle.y-this.graphics.arms[h].bottom.y)*0.27*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)+(this.graphics.arms[h].middle.x-this.graphics.arms[h].bottom.x)/4,
                                            this.spin.sleeve.decoration[g].length-1
                                        )
                                        ,lerp(
                                            this.graphics.arms[h].middle.y+(this.graphics.arms[h].middle.x-this.graphics.arms[h].bottom.x)*0.165*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction),
                                            this.graphics.arms[h].bottom.y+(this.graphics.arms[h].middle.x-this.graphics.arms[h].bottom.x)*0.27*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)+(this.graphics.arms[h].middle.y-this.graphics.arms[h].bottom.y)/4,
                                            this.spin.sleeve.decoration[g].length-1
                                        ))
                                    this.layer.rotate(-atan2(
                                        ((this.graphics.arms[h].middle.x-(this.graphics.arms[h].middle.y-this.graphics.arms[h].bottom.y)*0.165*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction))-
                                        (this.graphics.arms[h].bottom.x-(this.graphics.arms[h].middle.y-this.graphics.arms[h].bottom.y)*0.27*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)+(this.graphics.arms[h].middle.x-this.graphics.arms[h].bottom.x)/4)),
                                        ((this.graphics.arms[h].middle.y+(this.graphics.arms[h].middle.x-this.graphics.arms[h].bottom.x)*0.165*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction))-
                                        (this.graphics.arms[h].bottom.y+(this.graphics.arms[h].middle.x-this.graphics.arms[h].bottom.x)*0.27*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)+(this.graphics.arms[h].middle.y-this.graphics.arms[h].bottom.y)/4))
                                    ))
                                }else{
                                    this.layer.translate(
                                        lerp(
                                            this.graphics.arms[h].top.x-(this.graphics.arms[h].top.y-this.graphics.arms[h].middle.y)*0.12*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)-(this.graphics.arms[h].top.x-this.graphics.arms[h].middle.x)/8,
                                            this.graphics.arms[h].middle.x-(this.graphics.arms[h].top.y-this.graphics.arms[h].middle.y)*0.15*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction),
                                            this.spin.sleeve.decoration[g].length
                                        )
                                        ,lerp(
                                            this.graphics.arms[h].top.y+(this.graphics.arms[h].top.x-this.graphics.arms[h].middle.x)*0.12*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)-(this.graphics.arms[h].top.y-this.graphics.arms[h].middle.y)/8,
                                            this.graphics.arms[h].middle.y+(this.graphics.arms[h].top.x-this.graphics.arms[h].middle.x)*0.15*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction),
                                            this.spin.sleeve.decoration[g].length
                                        ))
                                    this.layer.rotate(-atan2(
                                        ((this.graphics.arms[h].top.x-(this.graphics.arms[h].top.y-this.graphics.arms[h].middle.y)*0.12*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)-(this.graphics.arms[h].top.x-this.graphics.arms[h].middle.x)/8)-
                                        (this.graphics.arms[h].middle.x-(this.graphics.arms[h].top.y-this.graphics.arms[h].middle.y)*0.15*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction))),
                                        ((this.graphics.arms[h].top.y+(this.graphics.arms[h].top.x-this.graphics.arms[h].middle.x)*0.12*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)-(this.graphics.arms[h].top.y-this.graphics.arms[h].middle.y)/8)-
                                        (this.graphics.arms[h].middle.y+(this.graphics.arms[h].top.x-this.graphics.arms[h].middle.x)*0.15*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)))
                                    ))
                                }
                                this.layer.scale(lcos(this.spin.sleeve.decoration[g].spin+this.anim.direction)*1.1-0.1,1)
                                this.layer.rotate(this.spin.sleeve.decoration[g].rotate)
                                this.layer.fill(this.color.sleeve.decoration[this.spin.sleeve.decoration[g].type],this.fade)
                                this.layer.beginShape()
                                this.layer.vertex(0,2)
                                this.layer.vertex(-0.375,0.25)
                                this.layer.vertex(-2,0)
                                this.layer.vertex(-0.5,-0.25)
                                this.layer.vertex(-1,-1.5)
                                this.layer.vertex(0,-0.5)
                                this.layer.vertex(1,-1.5)
                                this.layer.vertex(0.5,-0.25)
                                this.layer.vertex(2,0)
                                this.layer.vertex(0.375,0.25)
                                this.layer.endShape()
                                this.layer.pop()
                            }
                        }
                    }
                    if(this.trigger.display.under.under.top&&lcos(this.spin.under.under.top[0]+this.anim.direction)>0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,lcos(this.spin.under.under.top[0]+this.anim.direction)))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,lcos(this.spin.under.under.top[0]+this.anim.direction)))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,lcos(this.spin.under.under.top[0]+this.anim.direction)))[2],this.fade*this.fades.under.under.top)
                        this.layer.ellipse(lsin(this.spin.under.under.top[0]+this.anim.direction)*4.2,-50,lcos(this.spin.under.under.top[0]+this.anim.direction)*2.5+3.5,6)
                    }
                    if(this.trigger.display.under.under.top&&lcos(this.spin.under.under.top[1]+this.anim.direction)>0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,lcos(this.spin.under.under.top[1]+this.anim.direction)))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,lcos(this.spin.under.under.top[1]+this.anim.direction)))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,lcos(this.spin.under.under.top[1]+this.anim.direction)))[2],this.fade*this.fades.under.under.top)
                        this.layer.ellipse(lsin(this.spin.under.under.top[1]+this.anim.direction)*4.2,-50,lcos(this.spin.under.under.top[1]+this.anim.direction)*2.5+3.5,6)
                    }
                    if(this.trigger.display.under.under.button&&lcos(this.spin.under.under.button[0]+this.anim.direction)>0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,lcos(this.spin.under.under.button[0]+this.anim.direction)/4+0.75))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,lcos(this.spin.under.under.button[0]+this.anim.direction)/4+0.75))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,lcos(this.spin.under.under.button[0]+this.anim.direction)/4+0.75))[2],this.fade*this.fades.under.under.button)
                        this.layer.ellipse(lsin(this.spin.under.under.button[0]+this.anim.direction)*5.75,-49.5,lcos(this.spin.under.under.button[0]+this.anim.direction)*0.25+1,1.25)
                    }
                    if(this.trigger.display.under.under.button&&lcos(this.spin.under.under.button[1]+this.anim.direction)>0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,lcos(this.spin.under.under.button[1]+this.anim.direction)/4+0.75))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,lcos(this.spin.under.under.button[1]+this.anim.direction)/4+0.75))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,lcos(this.spin.under.under.button[1]+this.anim.direction)/4+0.75))[2],this.fade*this.fades.under.under.button)
                        this.layer.ellipse(lsin(this.spin.under.under.button[1]+this.anim.direction)*5.75,-49.5,lcos(this.spin.under.under.button[1]+this.anim.direction)*0.25+1,1.25)
                    }
                    if(this.trigger.display.under.under.bottom&&lcos(this.spin.under.under.bottom[0]+this.anim.direction)>0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.bottom[0],lcos(this.spin.under.under.bottom[0]+this.anim.direction)))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.bottom[0],lcos(this.spin.under.under.bottom[0]+this.anim.direction)))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.bottom[0],lcos(this.spin.under.under.bottom[0]+this.anim.direction)))[2],this.fade*this.fades.under.under.bottom)
                        this.layer.beginShape()
                        this.layer.vertex(lsin(this.spin.under.under.bottom[0]+this.anim.direction)*3.5,-35)
                        this.layer.bezierVertex(lsin(this.spin.under.under.bottom[0]+this.anim.direction)*2.75,-33.5,lsin(this.spin.under.under.bottom[1]*this.anim.under.under.bottom+this.anim.direction)*2.75,-34,lsin(this.spin.under.under.bottom[1]*this.anim.under.under.bottom+this.anim.direction)*2.5,-33)
                        this.layer.bezierVertex(lsin(this.spin.under.under.bottom[1]*this.anim.under.under.bottom+this.anim.direction)*2.25,-32,lsin(this.spin.under.under.bottom[0]+this.anim.direction)*2.25,-32.5,lsin(this.spin.under.under.bottom[0]+this.anim.direction)*1.5,-31)
                        this.layer.bezierVertex(lsin(this.spin.under.under.bottom[0]+this.anim.direction)*2.25,-32.5,lsin(this.spin.under.under.bottom[2]*this.anim.under.under.bottom+this.anim.direction)*2.25,-32,lsin(this.spin.under.under.bottom[2]*this.anim.under.under.bottom+this.anim.direction)*2.5,-33)
                        this.layer.bezierVertex(lsin(this.spin.under.under.bottom[2]*this.anim.under.under.bottom+this.anim.direction)*2.75,-34,lsin(this.spin.under.under.bottom[0]+this.anim.direction)*2.75,-33.5,lsin(this.spin.under.under.bottom[0]+this.anim.direction)*3.5,-35)
                        this.layer.endShape()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.bottom[1],lcos(this.spin.under.under.bottom[0]+this.anim.direction)))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.bottom[1],lcos(this.spin.under.under.bottom[0]+this.anim.direction)))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.bottom[1],lcos(this.spin.under.under.bottom[0]+this.anim.direction)))[2],this.fade*this.fades.under.under.bottom)
                        this.layer.beginShape()
                        this.layer.vertex(lsin(this.spin.under.under.bottom[0]+this.anim.direction)*3.5,-35)
                        this.layer.bezierVertex(lsin(this.spin.under.under.bottom[0]+this.anim.direction)*2.75,-33.5,lsin(this.spin.under.under.bottom[3]*this.anim.under.under.bottom+this.anim.direction)*2.75,-34,lsin(this.spin.under.under.bottom[3]*this.anim.under.under.bottom+this.anim.direction)*2.5,-33)
                        this.layer.bezierVertex(lsin(this.spin.under.under.bottom[3]*this.anim.under.under.bottom+this.anim.direction)*2.25,-32,lsin(this.spin.under.under.bottom[0]+this.anim.direction)*2.25,-32.5,lsin(this.spin.under.under.bottom[0]+this.anim.direction)*1.5,-31)
                        this.layer.bezierVertex(lsin(this.spin.under.under.bottom[0]+this.anim.direction)*2.25,-32.5,lsin(this.spin.under.under.bottom[4]*this.anim.under.under.bottom+this.anim.direction)*2.25,-32,lsin(this.spin.under.under.bottom[4]*this.anim.under.under.bottom+this.anim.direction)*2.5,-33)
                        this.layer.bezierVertex(lsin(this.spin.under.under.bottom[4]*this.anim.under.under.bottom+this.anim.direction)*2.75,-34,lsin(this.spin.under.under.bottom[0]+this.anim.direction)*2.75,-33.5,lsin(this.spin.under.under.bottom[0]+this.anim.direction)*3.5,-35)
                        this.layer.endShape()
                    }
                    if(this.trigger.display.under.tanga){
                        this.sprites.temp=createGraphics(40,40)
                        setupLayer(this.sprites.temp)
                        this.sprites.temp.noStroke()
                        this.sprites.temp.fill(this.color.under.tanga[0],this.color.under.tanga[1],this.color.under.tanga[2],this.fade*this.fades.under.tanga)
                        if(abs(this.anim.direction)<this.spin.under.tanga){
                            this.sprites.temp.arc(20,2,20*lsin(this.anim.direction+this.spin.under.tanga),42,0,90)
                            this.sprites.temp.arc(20,2,20*lsin(this.anim.direction-this.spin.under.tanga),42,90,180)
                        }else if(this.anim.direction>=this.spin.under.tanga&&this.anim.direction<(this.spin.under.tanga+90)){
                            this.sprites.temp.arc(20,2,20*lsin(this.anim.direction+this.spin.under.tanga),42,0,90)
                        }else if(this.anim.direction<=-this.spin.under.tanga&&this.anim.direction>-(this.spin.under.tanga+90)){
                            this.sprites.temp.arc(20,2,20*lsin(this.anim.direction-this.spin.under.tanga),42,90,180)
                        }
                        if(abs(this.anim.direction)>=(180-this.spin.under.tanga)){
                            this.sprites.temp.arc(20,2,20*lsin(this.anim.direction-(180-this.spin.under.tanga)),42,0,90)
                            this.sprites.temp.arc(20,2,20*lsin(this.anim.direction+(180-this.spin.under.tanga)),42,90,180)
                        }else if(this.anim.direction>=-(180-this.spin.under.tanga)&&this.anim.direction<-(90-this.spin.under.tanga)){
                            this.sprites.temp.arc(20,2,20*lsin(this.anim.direction-(180-this.spin.under.tanga)),42,0,90)
                        }else if(this.anim.direction<=(180-this.spin.under.tanga)&&this.anim.direction>(90-this.spin.under.tanga)){
                            this.sprites.temp.arc(20,2,20*lsin(this.anim.direction+(180-this.spin.under.tanga)),42,90,180)
                        }
                        this.sprites.temp.erase()
                        this.sprites.temp.rect(20,6,40,11)
                        if(this.anim.direction>=this.spin.under.tanga&&this.anim.direction<(this.spin.under.tanga+90)){
                            this.sprites.temp.arc(20,2,20*lsin(this.anim.direction-this.spin.under.tanga),42,0,90)
                        }else if(this.anim.direction<=-this.spin.under.tanga&&this.anim.direction>-(this.spin.under.tanga+90)){
                            this.sprites.temp.arc(20,2,20*lsin(this.anim.direction+this.spin.under.tanga),42,90,180)
                        }
                        if(this.anim.direction>=-(180-this.spin.under.tanga)&&this.anim.direction<-(90-this.spin.under.tanga)){
                            this.sprites.temp.arc(20,2,20*lsin(this.anim.direction+(180-this.spin.under.tanga)),42,0,90)
                        }else if(this.anim.direction<=(180-this.spin.under.tanga)&&this.anim.direction>(90-this.spin.under.tanga)){
                            this.sprites.temp.arc(20,2,20*lsin(this.anim.direction-(180-this.spin.under.tanga)),42,90,180)
                        }
                        this.sprites.temp.noErase()
                        this.sprites.temp.rect(20,11,18,1/this.anim.under.bottom.y)
                        if(this.anim.under.bottom.y<=0){
                            this.layer.push()
                            this.layer.translate(0,this.parts.under.bottom-6*this.anim.under.bottom.y)
                            this.layer.scale(1,-1)
                            this.layer.image(this.sprites.temp,-10*this.anim.under.bottom.x,-5,20*this.anim.under.bottom.x,20*abs(this.anim.under.bottom.y))
                            this.layer.pop()
                        }else{
                            this.layer.image(this.sprites.temp,-10*this.anim.under.bottom.x,this.parts.under.bottom-6*this.anim.under.bottom.y-5,20*this.anim.under.bottom.x,20*abs(this.anim.under.bottom.y))
                        }
                    }
                    if(this.trigger.display.under.bottom){
                        this.layer.noStroke()
                        this.layer.fill(this.color.under.outside[0],this.color.under.outside[1],this.color.under.outside[2],this.fade*this.fades.under.bottom)
                        this.layer.beginShape()
                        this.layer.vertex(-4.75*this.anim.under.bottom.x,this.parts.under.bottom-6.5*this.anim.under.bottom.y)
                        this.layer.bezierVertex(-4.5*this.anim.under.bottom.x,this.parts.under.bottom-5*this.anim.under.bottom.y,-3*this.anim.under.bottom.x,this.parts.under.bottom-1*this.anim.under.bottom.y,0,this.parts.under.bottom)
                        this.layer.bezierVertex(3*this.anim.under.bottom.x,this.parts.under.bottom-1*this.anim.under.bottom.y,4.5*this.anim.under.bottom.x,this.parts.under.bottom-5*this.anim.under.bottom.y,4.75*this.anim.under.bottom.x,this.parts.under.bottom-6.5*this.anim.under.bottom.y)
                        this.layer.endShape()
                        this.layer.fill(this.color.under.fringe[0],this.color.under.fringe[1],this.color.under.fringe[2],this.fade)
                        for(let g=0,lg=this.spin.under.top[0].length;g<lg;g++){
                            if(lcos(this.spin.under.top[0][g]+this.anim.direction)>0){
                                this.layer.arc(4.5*lsin(this.spin.under.top[0][g]+this.anim.direction)*this.anim.under.bottom.x,this.parts.under.bottom-6.5*this.anim.under.bottom.y,lcos(this.spin.under.top[0][g]+this.anim.direction)*1.1*this.anim.under.bottom.x,3*this.anim.under.bottom.y,0,180)
                            }
                        }
                        for(let g=0,lg=this.spin.under.bottom[0].length;g<lg;g++){
                            if(lcos(this.spin.under.bottom[0][g]+this.anim.direction)>0){
                                this.layer.arc(4.5*lsin(this.spin.under.bottom[0][g]+this.anim.direction)*this.anim.under.bottom.x,this.parts.under.bottom-6.5*this.anim.under.bottom.y,lcos(this.spin.under.bottom[0][g]+this.anim.direction)*0.8*this.anim.under.bottom.x,2*this.anim.under.bottom.y,0,180)
                            }
                        }
                        for(let g=0,lg=10;g<lg;g++){
                            if(lcos(360*g/lg+this.anim.direction)>0){
                                this.layer.push()
                                this.layer.translate(4*lsin(360*g/lg+this.anim.direction),-35)
                                this.layer.rotate(30*lsin(360*g/lg+this.anim.direction))
                                this.layer.image(graphics.minor[18],-1.5*lcos(360*g/lg+this.anim.direction)*this.fade*this.fades.under.bottom,-1.5*this.fade*this.fades.under.bottom,3*lcos(360*g/lg+this.anim.direction)*this.fade*this.fades.under.bottom,3*this.fade*this.fades.under.bottom)
                                this.layer.pop()
                            }
                        }
                        for(let g=0,lg=6;g<lg;g++){
                            if(lcos(360*(g+0.25)/lg+this.anim.direction)>0){
                                this.layer.push()
                                this.layer.translate(2.5*lsin(360*(g+0.25)/lg+this.anim.direction),-33)
                                this.layer.rotate(30*lsin(360*(g+0.25)/lg+this.anim.direction))
                                this.layer.image(graphics.minor[18],-1.5*lcos(360*(g+0.25)/lg+this.anim.direction)*this.fade*this.fades.under.bottom,-1.5*this.fade*this.fades.under.bottom,3*lcos(360*(g+0.25)/lg+this.anim.direction)*this.fade*this.fades.under.bottom,3*this.fade*this.fades.under.bottom)
                                this.layer.pop()
                            }
                        }
                    }
                    if(this.trigger.display.under.top){
                        this.sprites.temp=createGraphics(80,80)
                        setupLayer(this.sprites.temp)
                        this.sprites.temp.translate(40,0)
                        this.sprites.temp.noStroke()
                        this.sprites.temp.fill(this.color.under.outside[0],this.color.under.outside[1],this.color.under.outside[2],this.fade*this.fades.under.top)
                        for(let g=0;g<2;g++){
                            if(lcos(this.spin.under.under.top[g]+this.anim.direction)){
                                if(lsin(this.spin.under.under.top[g]+this.anim.direction+27)*13.5-lsin(this.spin.under.under.top[g]+this.anim.direction)*9>0){
                                    this.sprites.temp.arc(lsin(this.spin.under.under.top[g]+this.anim.direction)*15,74,lsin(this.spin.under.under.top[g]+this.anim.direction+27)*54-lsin(this.spin.under.under.top[g]+this.anim.direction)*36,75,-90,0)
                                    this.sprites.temp.ellipse(lsin(this.spin.under.under.top[g]+this.anim.direction)*15,74,6,75)
                                }
                                if(lsin(this.spin.under.under.top[g]+this.anim.direction)*9-lsin(this.spin.under.under.top[g]+this.anim.direction-27)*13.5>0){
                                    this.sprites.temp.arc(lsin(this.spin.under.under.top[g]+this.anim.direction)*15,74,lsin(this.spin.under.under.top[g]+this.anim.direction)*36-lsin(this.spin.under.under.top[g]+this.anim.direction-27)*54,75,-180,-90)
                                    this.sprites.temp.ellipse(lsin(this.spin.under.under.top[g]+this.anim.direction)*15,74,6,75)
                                }
                            }
                        }
                        this.sprites.temp.rect(0,58.5,44,3)
                        this.sprites.temp.erase()
                        this.sprites.temp.rect(0,70,80,20)
                        this.layer.image(this.sprites.temp,-10*this.anim.under.top.x,this.parts.under.top-12*this.anim.under.top.y,20*this.anim.under.top.x,20*this.anim.under.top.y)
                        this.layer.noStroke()
                        this.layer.fill(this.color.under.outside[0],this.color.under.outside[1],this.color.under.outside[2],this.fade*this.fades.under.top)
                        if(this.trigger.display.under.under.button&&lcos(this.spin.under.under.button[0]+this.anim.direction)>-0.4){
                            this.layer.ellipse(lsin(this.spin.under.under.button[0]+this.anim.direction)*5.5,-49.5,lcos(this.spin.under.under.button[0]+this.anim.direction)*0.25+1,1.5)
                        }
                        if(this.trigger.display.under.under.button&&lcos(this.spin.under.under.button[1]+this.anim.direction)>-0.4){
                            this.layer.ellipse(lsin(this.spin.under.under.button[1]+this.anim.direction)*5.5,-49.5,lcos(this.spin.under.under.button[1]+this.anim.direction)*0.25+1,1.5)
                        }
                        this.layer.fill(this.color.under.fringe[0],this.color.under.fringe[1],this.color.under.fringe[2],this.fade)
                        for(let g=0,lg=this.spin.under.top[1].length;g<lg;g++){
                            if(lcos(this.spin.under.top[1][g]+this.anim.direction)>0){
                                this.layer.arc(5.5*lsin(this.spin.under.top[1][g]+this.anim.direction)*this.anim.under.top.x,this.parts.under.top+3*this.anim.under.top.y,lcos(this.spin.under.top[1][g]+this.anim.direction)*0.8*this.anim.under.top.x,2*this.anim.under.top.y,0,180)
                            }
                        }
                        for(let g=0,lg=this.spin.under.bottom[1].length;g<lg;g++){
                            if(lcos(this.spin.under.bottom[1][g]+this.anim.direction)>0){
                                this.layer.arc(5.5*lsin(this.spin.under.bottom[1][g]+this.anim.direction)*this.anim.under.bottom.x,this.parts.under.top+3*this.anim.under.bottom.y,lcos(this.spin.under.bottom[1][g]+this.anim.direction)*1.1*this.anim.under.bottom.x,3*this.anim.under.bottom.y,0,180)
                            }
                        }
                        for(let g=0,lg=2;g<lg;g++){
                            if(lcos(this.spin.under.under.top[g]+this.anim.direction)>0){
                                this.layer.push()
                                this.layer.translate(5*lsin(this.spin.under.under.top[g]+this.anim.direction),-51)
                                this.layer.rotate(-15*lsin(this.spin.under.under.top[g]+this.anim.direction))
                                this.layer.image(graphics.minor[18],-1.5*lcos(this.spin.under.under.top[g]+this.anim.direction)*this.fade*this.fades.under.bottom,-1.5*this.fade*this.fades.under.bottom,3*lcos(this.spin.under.under.top[g]+this.anim.direction)*this.fade*this.fades.under.bottom,3*this.fade*this.fades.under.bottom)
                                this.layer.pop()
                            }
                            for(let h=0;h<2;h++){
                                if(lcos(this.spin.under.under.top[g]-12+h*24+this.anim.direction)>0){
                                    this.layer.push()
                                    this.layer.translate(5*lsin(this.spin.under.under.top[g]-12+h*24+this.anim.direction),-49)
                                    this.layer.rotate(-15*lsin(this.spin.under.under.top[g]-12+h*24+this.anim.direction))
                                    this.layer.image(graphics.minor[18],-1.5*lcos(this.spin.under.under.top[g]-12+h*24+this.anim.direction)*this.fade*this.fades.under.bottom,
                                    -1.5*this.fade*this.fades.under.bottom,3*lcos(this.spin.under.under.top[g]-12+h*24+this.anim.direction)*this.fade*this.fades.under.bottom,3*this.fade*this.fades.under.bottom)
                                    this.layer.pop()
                                }
                            }
                        }
                    }
                    if(this.trigger.display.under.bow.top){
                        this.layer.noFill()
                        this.layer.stroke(this.color.under.bow[0],this.color.under.bow[1],this.color.under.bow[2],this.fade*this.fades.under.bow.top)
                        this.layer.strokeWeight(0.2)
                        if(lcos(this.spin.underBow.top.center/2+this.spin.underBow.top.loop[0]/2+this.anim.direction)>0){
                            this.layer.ellipse(lsin(this.spin.underBow.top.center+this.anim.direction)*2.875*this.anim.under.bow.top.position.x+lsin(this.spin.underBow.top.loop[0]*this.anim.under.bow.top.size.x/this.anim.under.bow.top.position.x+this.anim.direction)*2.875*this.anim.under.bow.top.position.x,this.parts.under.top+this.parts.under.bow.top*this.anim.under.bow.top.position.y,(lsin(this.spin.underBow.top.center+this.anim.direction)*5.5*this.anim.under.bow.top.position.x-lsin(this.spin.underBow.top.loop[0]*this.anim.under.bow.top.size.x/this.anim.under.bow.top.position.x+this.anim.direction)*5.5*this.anim.under.bow.top.position.x),0.8*this.anim.under.bow.top.size.y)
                        }
                        if(lcos(this.spin.underBow.top.center/2+this.spin.underBow.top.loop[1]/2+this.anim.direction)>0){
                            this.layer.ellipse(lsin(this.spin.underBow.top.center+this.anim.direction)*2.875*this.anim.under.bow.top.position.x+lsin(this.spin.underBow.top.loop[1]*this.anim.under.bow.top.size.x/this.anim.under.bow.top.position.x+this.anim.direction)*2.875*this.anim.under.bow.top.position.x,this.parts.under.top+this.parts.under.bow.top*this.anim.under.bow.top.position.y,(lsin(this.spin.underBow.top.center+this.anim.direction)*5.5*this.anim.under.bow.top.position.x-lsin(this.spin.underBow.top.loop[1]*this.anim.under.bow.top.size.x/this.anim.under.bow.top.position.x+this.anim.direction)*5.5*this.anim.under.bow.top.position.x),0.8*this.anim.under.bow.top.size.y)
                        }
                        if(lcos(this.spin.underBow.top.center/2+this.spin.underBow.top.end[0]/2+this.anim.direction)>0){
                            this.layer.line(lsin(this.spin.underBow.top.center+this.anim.direction)*5.75*this.anim.under.bow.top.position.x,this.parts.under.top+this.parts.under.bow.top*this.anim.under.bow.top.position.y,lsin(this.spin.underBow.top.end[0]*this.anim.under.bow.top.size.x/this.anim.under.bow.top.position.x+this.anim.direction)*(5.75*this.anim.under.bow.top.position.x+0.25*this.anim.under.bow.top.size.x),this.parts.under.top+(this.parts.under.bow.top+1.2)*this.anim.under.bow.top.size.y)
                        }
                        if(lcos(this.spin.underBow.top.center/2+this.spin.underBow.top.end[1]/2+this.anim.direction)>0){
                            this.layer.line(lsin(this.spin.underBow.top.center+this.anim.direction)*5.75*this.anim.under.bow.top.position.x,this.parts.under.top+this.parts.under.bow.top*this.anim.under.bow.top.position.y,lsin(this.spin.underBow.top.end[1]*this.anim.under.bow.top.size.x/this.anim.under.bow.top.position.x+this.anim.direction)*(5.75*this.anim.under.bow.top.position.x+0.25*this.anim.under.bow.top.size.x),this.parts.under.top+(this.parts.under.bow.top+1.2)*this.anim.under.bow.top.size.y)
                        }
                    }
                    if(this.trigger.display.under.bow.bottom){
                        this.layer.noFill()
                        this.layer.stroke(this.color.under.bow[0],this.color.under.bow[1],this.color.under.bow[2],this.fade*this.fades.under.bow.bottom)
                        this.layer.strokeWeight(0.2)
                        if(lcos(this.spin.underBow.bottom.center/2+this.spin.underBow.bottom.loop[0]/2+this.anim.direction)>0){
                            this.layer.ellipse(lsin(this.spin.underBow.bottom.center+this.anim.direction)*2.875*this.anim.under.bow.bottom.position.x+lsin(this.spin.underBow.bottom.loop[0]*this.anim.under.bow.bottom.size.x/this.anim.under.bow.bottom.position.x+this.anim.direction)*2.875*this.anim.under.bow.bottom.position.x,this.parts.under.bottom+this.parts.under.bow.bottom*this.anim.under.bow.bottom.position.y,(lsin(this.spin.underBow.bottom.center+this.anim.direction)*5.5*this.anim.under.bow.bottom.position.x-lsin(this.spin.underBow.bottom.loop[0]*this.anim.under.bow.bottom.size.x/this.anim.under.bow.bottom.position.x+this.anim.direction)*5.5*this.anim.under.bow.bottom.position.x),0.8*this.anim.under.bow.bottom.size.y)
                        }
                        if(lcos(this.spin.underBow.bottom.center/2+this.spin.underBow.bottom.loop[1]/2+this.anim.direction)>0){
                            this.layer.ellipse(lsin(this.spin.underBow.bottom.center+this.anim.direction)*2.875*this.anim.under.bow.bottom.position.x+lsin(this.spin.underBow.bottom.loop[1]*this.anim.under.bow.bottom.size.x/this.anim.under.bow.bottom.position.x+this.anim.direction)*2.875*this.anim.under.bow.bottom.position.x,this.parts.under.bottom+this.parts.under.bow.bottom*this.anim.under.bow.bottom.position.y,(lsin(this.spin.underBow.bottom.center+this.anim.direction)*5.5*this.anim.under.bow.bottom.position.x-lsin(this.spin.underBow.bottom.loop[1]*this.anim.under.bow.bottom.size.x/this.anim.under.bow.bottom.position.x+this.anim.direction)*5.5*this.anim.under.bow.bottom.position.x),0.8*this.anim.under.bow.bottom.size.y)
                        }
                        if(lcos(this.spin.underBow.bottom.center/2+this.spin.underBow.bottom.end[0]/2+this.anim.direction)>0){
                            this.layer.line(lsin(this.spin.underBow.bottom.center+this.anim.direction)*5.75*this.anim.under.bow.bottom.position.x,this.parts.under.bottom+this.parts.under.bow.bottom*this.anim.under.bow.bottom.position.y,lsin(this.spin.underBow.bottom.end[0]*this.anim.under.bow.bottom.size.x/this.anim.under.bow.bottom.position.x+this.anim.direction)*(5.75*this.anim.under.bow.bottom.position.x+0.25*this.anim.under.bow.bottom.size.x),this.parts.under.bottom+(this.parts.under.bow.bottom+1.2)*this.anim.under.bow.bottom.size.y)
                        }
                        if(lcos(this.spin.underBow.bottom.center/2+this.spin.underBow.bottom.end[1]/2+this.anim.direction)>0){
                            this.layer.line(lsin(this.spin.underBow.bottom.center+this.anim.direction)*5.75*this.anim.under.bow.bottom.position.x,this.parts.under.bottom+this.parts.under.bow.bottom*this.anim.under.bow.bottom.position.y,lsin(this.spin.underBow.bottom.end[1]*this.anim.under.bow.bottom.size.x/this.anim.under.bow.bottom.position.x+this.anim.direction)*(5.75*this.anim.under.bow.bottom.position.x+0.25*this.anim.under.bow.bottom.size.x),this.parts.under.bottom+(this.parts.under.bow.bottom+1.2)*this.anim.under.bow.bottom.size.y)
                        }
                    }
                    if(this.trigger.display.under.towel){
                        this.layer.noStroke()
                        this.layer.fill(this.color.under.towel[0],this.color.under.towel[1],this.color.under.towel[2],this.fade*this.fades.under.towel)
                        this.layer.quad(-5,this.parts.under.top-3,5,this.parts.under.top-3,8,this.parts.under.bottom+6,-8,this.parts.under.bottom+6)
                        this.layer.ellipse(lsin(this.spin.under.under.top[0]+this.anim.direction)*4.2,-50,lcos(this.spin.under.under.top[0]+this.anim.direction)*2.5+3.5,6)
                        this.layer.ellipse(lsin(this.spin.under.under.top[1]+this.anim.direction)*4.2,-50,lcos(this.spin.under.under.top[1]+this.anim.direction)*2.5+3.5,6)
                        this.layer.ellipse(lsin(this.spin.under.under.button[0]+this.anim.direction)*5.75,-49.5,lcos(this.spin.under.under.button[0]+this.anim.direction)*0.25+1,1.25)
                        this.layer.ellipse(lsin(this.spin.under.under.button[1]+this.anim.direction)*5.75,-49.5,lcos(this.spin.under.under.button[1]+this.anim.direction)*0.25+1,1.25)
                    }
                    if(this.trigger.display.necklace.front){
                        this.layer.noFill()
                        this.layer.stroke(this.color.necklace[0],this.color.necklace[1],this.color.necklace[2],this.fade*this.fades.necklace.front)
                        this.layer.strokeWeight(0.4)
                        if(lcos(this.spin.necklace[0]+this.anim.direction)>0){
                            this.layer.arc(0,-59,6,3,atan2(lsin(90-this.spin.necklace[0]-this.anim.direction),lcos(90-this.spin.necklace[0]-this.anim.direction)*2),180)
                        }
                        if(lcos(this.spin.necklace[1]+this.anim.direction)>0){
                            this.layer.arc(0,-59,6,3,0,atan2(lsin(90-this.spin.necklace[1]-this.anim.direction),lcos(90-this.spin.necklace[1]-this.anim.direction)*2))
                        }
                        if(lcos(this.spin.necklace[0]+this.anim.direction)<=0&&lcos(this.spin.necklace[1]+this.anim.direction)<=0){
                            this.layer.arc(0,-59,6,3,0,180)
                        }
                        if(lcos(this.spin.necklaceBow.center+this.anim.direction)>0){
                            this.layer.line(lsin(this.spin.necklaceBow.center+this.anim.direction)*3,this.parts.necklaceBow+1.5*sqrt(1-lsin(this.spin.necklaceBow.center+this.anim.direction)*lsin(this.spin.necklaceBow.center+this.anim.direction)),
                            lsin(this.spin.necklaceBow.end[0]+this.anim.direction)*3.5,this.parts.necklaceBow+2+1.5*sqrt(1-lsin(this.spin.necklaceBow.end[0]+this.anim.direction)*lsin(this.spin.necklaceBow.end[0]+this.anim.direction)))
                            this.layer.line(lsin(this.spin.necklaceBow.center+this.anim.direction)*3,this.parts.necklaceBow+1.5*sqrt(1-lsin(this.spin.necklaceBow.center+this.anim.direction)*lsin(this.spin.necklaceBow.center+this.anim.direction)),
                            lsin(this.spin.necklaceBow.end[1]+this.anim.direction)*3.5,this.parts.necklaceBow+2+1.5*sqrt(1-lsin(this.spin.necklaceBow.end[1]+this.anim.direction)*lsin(this.spin.necklaceBow.end[1]+this.anim.direction)))
                            this.layer.ellipse(lsin(this.spin.necklaceBow.loop[0]+this.anim.direction)*3.2,this.parts.necklaceBow+0.5+1.5*sqrt(1-lsin(this.spin.necklaceBow.loop[0]+this.anim.direction)*lsin(this.spin.necklaceBow.loop[0]+this.anim.direction)),
                            lcos(this.spin.necklaceBow.loop[0]+this.anim.direction)*1.2,1.2)
                            this.layer.ellipse(lsin(this.spin.necklaceBow.loop[1]+this.anim.direction)*3.2,this.parts.necklaceBow+0.5+1.5*sqrt(1-lsin(this.spin.necklaceBow.loop[1]+this.anim.direction)*lsin(this.spin.necklaceBow.loop[1]+this.anim.direction)),
                            lcos(this.spin.necklaceBow.loop[1]+this.anim.direction)*1.2,1.2)
                        }
                        if(this.spin.necklace[0]+this.anim.direction>-130&&this.spin.necklace[0]+this.anim.direction<65){
                            if(lsin(this.spin.necklace[2]+this.anim.direction)*5.25<lsin(this.spin.necklace[0]+this.anim.direction)*3){
                                this.layer.arc(lsin(this.spin.necklace[0]+this.anim.direction)*3,-54,lsin(this.spin.necklace[2]+this.anim.direction)*10.5-lsin(this.spin.necklace[0]+this.anim.direction)*6,10-lcos(this.spin.necklace[0]+this.anim.direction)*3,-180,-90)
                            }else{
                                this.layer.arc(lsin(this.spin.necklace[0]+this.anim.direction)*3,-54,lsin(this.spin.necklace[2]+this.anim.direction)*10.5-lsin(this.spin.necklace[0]+this.anim.direction)*6,10-lcos(this.spin.necklace[0]+this.anim.direction)*3,-90,0)
                            }
                        }
                        if(this.spin.necklace[1]+this.anim.direction<130&&this.spin.necklace[1]+this.anim.direction>-65){
                            if(lsin(this.spin.necklace[2]+this.anim.direction)*5.25>lsin(this.spin.necklace[1]+this.anim.direction)*3){
                                this.layer.arc(lsin(this.spin.necklace[1]+this.anim.direction)*3,-54,lsin(this.spin.necklace[2]+this.anim.direction)*10.5-lsin(this.spin.necklace[1]+this.anim.direction)*6,10-lcos(this.spin.necklace[1]+this.anim.direction)*3,-90,0)
                            }else{
                                this.layer.arc(lsin(this.spin.necklace[1]+this.anim.direction)*3,-54,lsin(this.spin.necklace[2]+this.anim.direction)*10.5-lsin(this.spin.necklace[1]+this.anim.direction)*6,10-lcos(this.spin.necklace[1]+this.anim.direction)*3,-180,-90)
                            }
                        }
                    }
                    if(this.trigger.display.under.dress.front){
                        this.layer.image(graphics.combatant[1].sprites.under.dress.front[this.sprites.spinDetail],-15*this.fade*this.fades.under.dress.front.x,this.parts.under.dress-15*this.fades.under.dress.front.y,30*this.fade*this.fades.under.dress.front.x,50*this.fade*this.fades.under.dress.front.y)
                    }
                    if(this.trigger.display.under.dress.decoration.large){
                        this.layer.noStroke()
                        for(let g=0,lg=this.under.dressDecoration.large.length;g<lg;g++){
                            if(lcos(this.under.dressDecoration.large[g].spin+this.anim.direction)>0){
                                this.layer.push()
                                this.layer.translate((2.5+this.under.dressDecoration.large[g].y*3/20)*lsin(this.under.dressDecoration.large[g].spin+this.anim.direction)*this.fades.under.dress.decoration.position.large.x,this.parts.under.dress-13*this.fades.under.dress.decoration.position.large.y+this.under.dressDecoration.large[g].y*this.fades.under.dress.decoration.position.large.y)
                                this.layer.rotate(-12*lsin(this.under.dressDecoration.large[g].spin+this.anim.direction))
                                this.layer.scale(this.fades.under.dress.decoration.size.large.x*lcos(this.under.dressDecoration.large[g].spin+this.anim.direction),this.fades.under.dress.decoration.size.large.y)
                                this.layer.rotate(this.under.dressDecoration.large[g].rotate)
                                this.layer.fill(this.color.under.dressDecoration[this.under.dressDecoration.large[g].type][0],this.color.under.dressDecoration[this.under.dressDecoration.large[g].type][1],this.color.under.dressDecoration[this.under.dressDecoration.large[g].type][2],this.fade*this.fades.under.dress.decoration.fade.large)
                                for(let h=0;h<5;h++){
                                    this.layer.rotate(72)
                                    this.layer.beginShape()
                                    this.layer.vertex(0,0)
                                    this.layer.bezierVertex(this.under.dressDecoration.large[g].width*-2,this.under.dressDecoration.large[g].height*0.5,this.under.dressDecoration.large[g].width*-3,this.under.dressDecoration.large[g].height*1,this.under.dressDecoration.large[g].width*-1,this.under.dressDecoration.large[g].height*1.5)
                                    this.layer.vertex(0,this.under.dressDecoration.large[g].height*1.2)
                                    this.layer.vertex(this.under.dressDecoration.large[g].width*1,this.under.dressDecoration.large[g].height*1.5)
                                    this.layer.bezierVertex(this.under.dressDecoration.large[g].width*3,this.under.dressDecoration.large[g].height*1,this.under.dressDecoration.large[g].width*2,this.under.dressDecoration.large[g].height*0.5,0,0)
                                    this.layer.endShape()
                                }
                                this.layer.pop()
                            }
                        }
                    }
                    if(this.trigger.display.kimono.main.front){
                        if(this.trigger.display.extra.damage){
                            this.layer.image(graphics.combatant[1].sprites.kimono.mainDamage.front[this.sprites.spinDetail],-20*this.fade*this.fades.kimono.main.front.x,this.parts.kimono.main-15*this.fades.kimono.main.front.y,40*this.fade*this.fades.kimono.main.front.x,66*this.fade*this.fades.kimono.main.front.y)
                        }else{
                            this.layer.image(graphics.combatant[1].sprites.kimono.main.front[this.sprites.spinDetail],-20*this.fade*this.fades.kimono.main.front.x,this.parts.kimono.main-15*this.fades.kimono.main.front.y,40*this.fade*this.fades.kimono.main.front.x,66*this.fade*this.fades.kimono.main.front.y)
                        }
                    }
                    if(this.trigger.display.kimono.decoration.small&&!this.trigger.display.extra.damage){
                        this.layer.noStroke()
                        this.layer.fill(this.color.kimono.decoration.front[0],this.color.kimono.decoration.front[1],this.color.kimono.decoration.front[2],this.fade*this.fades.kimono.decoration.fade.small)
                        for(let g=0,lg=this.kimono.decoration.small.length;g<lg;g++){
                            if(lcos(this.kimono.decoration.small[g].spin+this.anim.direction)>0){
                                if(this.kimono.decoration.small[g].y<36||this.trigger.display.mode.kimono.main==0){
                                    this.layer.translate((2.375+this.kimono.decoration.small[g].y*0.16)*lsin(this.kimono.decoration.small[g].spin+this.anim.direction)*this.fades.kimono.decoration.position.small.x,this.parts.kimono.main-13*this.fades.kimono.decoration.position.small.y+this.kimono.decoration.small[g].y*this.fades.kimono.decoration.position.small.y)
                                    this.layer.rotate(this.kimono.decoration.small[g].rotate)
                                    this.layer.ellipse(0,0,this.kimono.decoration.small[g].width*lcos(this.kimono.decoration.small[g].spin+this.anim.direction)*this.fades.kimono.decoration.size.small.x,this.kimono.decoration.small[g].height*this.fades.kimono.decoration.size.small.y)
                                    this.layer.rotate(-this.kimono.decoration.small[g].rotate)
                                    this.layer.translate(-(2.375+this.kimono.decoration.small[g].y*0.16)*lsin(this.kimono.decoration.small[g].spin+this.anim.direction)*this.fades.kimono.decoration.position.small.x,-this.parts.kimono.main+13*this.fades.kimono.decoration.position.small.y-this.kimono.decoration.small[g].y*this.fades.kimono.decoration.position.small.y)
                                }else{
                                    this.layer.translate((0+this.kimono.decoration.small[g].y*0.26)*lsin(this.kimono.decoration.small[g].spin+this.anim.direction)*this.fades.kimono.decoration.position.small.x,this.parts.kimono.main-13*this.fades.kimono.decoration.position.small.y+(25.5+this.kimono.decoration.small[g].y*0.4)*this.fades.kimono.decoration.position.small.y)
                                    this.layer.rotate(this.kimono.decoration.small[g].rotate)
                                    this.layer.ellipse(0,0,this.kimono.decoration.small[g].width*lcos(this.kimono.decoration.small[g].spin+this.anim.direction)*this.fades.kimono.decoration.size.small.x,this.kimono.decoration.small[g].height*this.fades.kimono.decoration.size.small.y)
                                    this.layer.rotate(-this.kimono.decoration.small[g].rotate)
                                    this.layer.translate(-(0+this.kimono.decoration.small[g].y*0.26)*lsin(this.kimono.decoration.small[g].spin+this.anim.direction)*this.fades.kimono.decoration.position.small.x,-this.parts.kimono.main+13*this.fades.kimono.decoration.position.small.y-(25.5+this.kimono.decoration.small[g].y*0.4)*this.fades.kimono.decoration.position.small.y)
                                }
                            }
                        }
                    }
                    if(this.trigger.display.kimono.decoration.large&&!this.trigger.display.extra.damage){
                        this.layer.noStroke()
                        this.layer.fill(this.color.kimono.decoration.front[0],this.color.kimono.decoration.front[1],this.color.kimono.decoration.front[2],this.fade*this.fades.kimono.decoration.fade.large)
                        for(let g=0,lg=this.kimono.decoration.large.length;g<lg;g++){
                            if(lcos(this.kimono.decoration.large[g].spin+this.anim.direction)>0){
                                if(this.kimono.decoration.large[g].y<36||this.trigger.display.mode.kimono.main==0){
                                    this.layer.translate((2.375+this.kimono.decoration.large[g].y*0.16)*lsin(this.kimono.decoration.large[g].spin+this.anim.direction)*this.fades.kimono.decoration.position.large.x,this.parts.kimono.main-13*this.fades.kimono.decoration.position.large.y+this.kimono.decoration.large[g].y*this.fades.kimono.decoration.position.large.y)
                                    this.layer.rotate(this.kimono.decoration.large[g].rotate)
                                    diamond(this.layer,0,0,this.kimono.decoration.large[g].width*lcos(this.kimono.decoration.large[g].spin+this.anim.direction)*this.fades.kimono.decoration.size.large.x,this.kimono.decoration.large[g].height*this.fades.kimono.decoration.size.large.y,0)
                                    diamond(this.layer,-this.kimono.decoration.large[g].width*8/3*lcos(this.kimono.decoration.large[g].spin+this.anim.direction)*this.fades.kimono.decoration.size.large.x,0,this.kimono.decoration.large[g].width*lcos(this.kimono.decoration.large[g].spin+this.anim.direction)*3/4*this.fades.kimono.decoration.size.large.x,this.kimono.decoration.large[g].height*3/4*this.fades.kimono.decoration.size.large.y,15)
                                    diamond(this.layer,this.kimono.decoration.large[g].width*8/3*lcos(this.kimono.decoration.large[g].spin+this.anim.direction)*this.fades.kimono.decoration.size.large.x,0,this.kimono.decoration.large[g].width*lcos(this.kimono.decoration.large[g].spin+this.anim.direction)*3/4*this.fades.kimono.decoration.size.large.x,this.kimono.decoration.large[g].height*3/4*this.fades.kimono.decoration.size.large.y,-15)
                                    this.layer.rotate(-this.kimono.decoration.large[g].rotate)
                                    this.layer.translate(-(2.375+this.kimono.decoration.large[g].y*0.16)*lsin(this.kimono.decoration.large[g].spin+this.anim.direction)*this.fades.kimono.decoration.position.large.x,-this.parts.kimono.main+13*this.fades.kimono.decoration.position.large.y-this.kimono.decoration.large[g].y*this.fades.kimono.decoration.position.large.y)
                                }else{
                                    this.layer.translate((0+this.kimono.decoration.large[g].y*0.26)*lsin(this.kimono.decoration.large[g].spin+this.anim.direction)*this.fades.kimono.decoration.position.large.x,this.parts.kimono.main-13*this.fades.kimono.decoration.position.large.y+(25.5+this.kimono.decoration.large[g].y*0.4)*this.fades.kimono.decoration.position.large.y)
                                    this.layer.rotate(this.kimono.decoration.large[g].rotate)
                                    diamond(this.layer,0,0,this.kimono.decoration.large[g].width*lcos(this.kimono.decoration.large[g].spin+this.anim.direction)*this.fades.kimono.decoration.size.large.x,this.kimono.decoration.large[g].height*this.fades.kimono.decoration.size.large.y,0)
                                    diamond(this.layer,-this.kimono.decoration.large[g].width*8/3*lcos(this.kimono.decoration.large[g].spin+this.anim.direction)*this.fades.kimono.decoration.size.large.x,0,this.kimono.decoration.large[g].width*lcos(this.kimono.decoration.large[g].spin+this.anim.direction)*3/4*this.fades.kimono.decoration.size.large.x,this.kimono.decoration.large[g].height*3/4*this.fades.kimono.decoration.size.large.y,15)
                                    diamond(this.layer,this.kimono.decoration.large[g].width*8/3*lcos(this.kimono.decoration.large[g].spin+this.anim.direction)*this.fades.kimono.decoration.size.large.x,0,this.kimono.decoration.large[g].width*lcos(this.kimono.decoration.large[g].spin+this.anim.direction)*3/4*this.fades.kimono.decoration.size.large.x,this.kimono.decoration.large[g].height*3/4*this.fades.kimono.decoration.size.large.y,-15)
                                    this.layer.rotate(-this.kimono.decoration.large[g].rotate)
                                    this.layer.translate(-(0+this.kimono.decoration.large[g].y*0.26)*lsin(this.kimono.decoration.large[g].spin+this.anim.direction)*this.fades.kimono.decoration.position.large.x,-this.parts.kimono.main+13*this.fades.kimono.decoration.position.large.y-(25.5+this.kimono.decoration.large[g].y*0.4)*this.fades.kimono.decoration.position.large.y)
                                }
                            }
                        }
                    }
                    if(this.trigger.display.kimono.shadow){
                        if(this.trigger.display.extra.damage){
                            this.layer.image(graphics.combatant[1].sprites.kimono.shadowDamage[this.sprites.spin%24],-15*this.fade*this.fades.kimono.shadow.x,this.parts.kimono.shadow,30*this.fade*this.fades.kimono.shadow.x,10*this.fade*this.fades.kimono.shadow.y)
                        }else{
                            this.layer.image(graphics.combatant[1].sprites.kimono.shadow[this.sprites.spin%24],-15*this.fade*this.fades.kimono.shadow.x,this.parts.kimono.shadow,30*this.fade*this.fades.kimono.shadow.x,10*this.fade*this.fades.kimono.shadow.y)
                        }
                    }
                    if(this.trigger.display.kimono.outside.front){
                        if(this.trigger.display.extra.damage){
                            this.layer.image(graphics.combatant[1].sprites.kimono.outsideDamage.front[this.sprites.spin%24],-15*this.fade*this.fades.kimono.outside.front.x,this.parts.kimono.outside,30*this.fade*this.fades.kimono.outside.front.x,40*this.fade*this.fades.kimono.outside.front.y)
                        }else{
                            this.layer.image(graphics.combatant[1].sprites.kimono.outside.front[this.sprites.spin%24],-15*this.fade*this.fades.kimono.outside.front.x,this.parts.kimono.outside,30*this.fade*this.fades.kimono.outside.front.x,40*this.fade*this.fades.kimono.outside.front.y)
                        }
                    }
                    if(this.trigger.display.kimono.string&&!this.trigger.display.extra.damage){
                        this.layer.noStroke()
                        this.layer.fill(this.color.kimono.string[0],this.color.kimono.string[1],this.color.kimono.string[2],this.fade*this.fades.kimono.string)
                        for(let g=0,lg=this.kimono.string.length;g<lg;g++){
                            if(lcos(this.kimono.string[g]+this.anim.direction)>0){
                                this.layer.rect(lsin(this.kimono.string[g]+this.anim.direction)*5.4*this.fades.kimono.outside.front.x,this.parts.kimono.outside+this.parts.kimono.string*this.fades.kimono.outside.front.y,lcos(this.kimono.string[g]+this.anim.direction)*this.fades.kimono.outside.front.x,0.25)
                            }
                        }
                    }
                    if(this.trigger.display.wrap.round){
                        this.layer.strokeJoin(ROUND)
                        this.layer.strokeWeight(0.4)
                        this.layer.fill(this.color.wrap.in[0],this.color.wrap.in[1],this.color.wrap.in[2],this.fade*this.fades.wrap.round)
                        this.layer.stroke(this.color.wrap.out[0],this.color.wrap.out[1],this.color.wrap.out[2],this.fade*this.fades.wrap.round)
                        this.layer.quad(-7*this.fades.kimono.outside.front.x,this.parts.kimono.outside+16*this.fades.kimono.outside.front.y,7*this.fades.kimono.outside.front.x,this.parts.kimono.outside+16*this.fades.kimono.outside.front.y,7.3*this.fades.kimono.outside.front.x,this.parts.kimono.outside+18*this.fades.kimono.outside.front.y,-7.3*this.fades.kimono.outside.front.x,this.parts.kimono.outside+18*this.fades.kimono.outside.front.y)
                        this.layer.quad(-7.3*this.fades.kimono.outside.front.x,this.parts.kimono.outside+18*this.fades.kimono.outside.front.y,7.3*this.fades.kimono.outside.front.x,this.parts.kimono.outside+18*this.fades.kimono.outside.front.y,7.6*this.fades.kimono.outside.front.x,this.parts.kimono.outside+20*this.fades.kimono.outside.front.y,-7.6*this.fades.kimono.outside.front.x,this.parts.kimono.outside+20*this.fades.kimono.outside.front.y)
                        this.layer.strokeWeight(0.6)
                        this.layer.stroke(this.color.wrap.center[0],this.color.wrap.center[1],this.color.wrap.center[2],this.fade*this.fades.wrap.round)
                        this.layer.line(7.3*this.fades.kimono.outside.front.x,this.parts.kimono.outside+18*this.fades.kimono.outside.front.y,-7.3*this.fades.kimono.outside.front.x,this.parts.kimono.outside+18*this.fades.kimono.outside.front.y)
                        this.layer.strokeJoin(MITER)
                    }
                    if(this.trigger.display.wrap.bar&&lcos(this.spin.wrap.bar+this.anim.direction)>0){
                        this.layer.strokeJoin(ROUND)
                        this.layer.strokeWeight(0.4)
                        this.layer.fill(this.color.wrap.in[0],this.color.wrap.in[1],this.color.wrap.in[2],this.fade*this.fades.wrap.bar)
                        this.layer.stroke(this.color.wrap.out[0],this.color.wrap.out[1],this.color.wrap.out[2],this.fade*this.fades.wrap.bar)
                        if(this.trigger.display.extra.damage){
                            this.layer.triangle(
                                lsin(this.spin.wrap.bar-this.parts.wrap.bar+this.anim.direction)*7.8*this.fades.kimono.outside.front.x,this.parts.kimono.outside+20*this.fades.kimono.outside.front.y,
                                lsin(this.spin.wrap.bar+this.parts.wrap.bar+this.anim.direction)*7.8*this.fades.kimono.outside.front.x,this.parts.kimono.outside+20*this.fades.kimono.outside.front.y,
                                lsin(this.spin.wrap.bar+this.anim.direction)*9.2*this.fades.kimono.outside.front.x,this.parts.kimono.outside+29*this.fades.kimono.outside.front.y,
                            )
                        }else{
                            this.layer.quad(
                                lsin(this.spin.wrap.bar-this.parts.wrap.bar+this.anim.direction)*7.8*this.fades.kimono.outside.front.x,this.parts.kimono.outside+20*this.fades.kimono.outside.front.y,
                                lsin(this.spin.wrap.bar+this.parts.wrap.bar+this.anim.direction)*7.8*this.fades.kimono.outside.front.x,this.parts.kimono.outside+20*this.fades.kimono.outside.front.y,
                                lsin(this.spin.wrap.bar+this.parts.wrap.bar+this.anim.direction)*9.2*this.fades.kimono.outside.front.x,this.parts.kimono.outside+29*this.fades.kimono.outside.front.y,
                                lsin(this.spin.wrap.bar-this.parts.wrap.bar+this.anim.direction)*9.2*this.fades.kimono.outside.front.x,this.parts.kimono.outside+29*this.fades.kimono.outside.front.y
                            )
                        }
                        this.layer.strokeJoin(MITER)
                    }
                    if(this.trigger.display.kimono.fringe.front){
                        if(this.trigger.display.extra.damage){
                            this.layer.image(graphics.combatant[1].sprites.kimono.fringeDamage.front[this.sprites.spin%12],-15*this.fade*this.fades.kimono.fringe.front.x,this.parts.kimono.fringe-10*this.fade*this.fades.kimono.fringe.front.y,30*this.fade*this.fades.kimono.fringe.front.x,20*this.fade*this.fades.kimono.fringe.front.y)
                        }else{
                            this.layer.image(graphics.combatant[1].sprites.kimono.fringe.front[this.sprites.spin%12],-15*this.fade*this.fades.kimono.fringe.front.x,this.parts.kimono.fringe-10*this.fade*this.fades.kimono.fringe.front.y,30*this.fade*this.fades.kimono.fringe.front.x,20*this.fade*this.fades.kimono.fringe.front.y)
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.extra.sword&&lcos(this.spin.arms[g].top+this.anim.direction)>0.4&&lcos(this.spin.arms[g].top+this.anim.direction)<0.6&&g==0){
                            this.minorDisplay(0,g)
                        }
                        if(this.trigger.display.extra.sword2&&lcos(this.spin.arms[g].top+this.anim.direction)>0.4&&lcos(this.spin.arms[g].top+this.anim.direction)<0.6&&g==1){
                            this.minorDisplay(1,g)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.3&&lcos(this.spin.arms[g].top+this.anim.direction)<0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                    }
                    if(this.trigger.display.wrap.bow&&lcos(this.spin.wrap.bow+this.anim.direction)>0&&lcos(this.spin.wrap.bow+this.anim.direction)<0.5){
                        this.layer.strokeJoin(ROUND)
                        this.layer.strokeWeight(0.4)
                        this.layer.fill(this.color.wrap.in[0],this.color.wrap.in[1],this.color.wrap.in[2],this.fade*this.fades.wrap.bow)
                        this.layer.stroke(this.color.wrap.out[0],this.color.wrap.out[1],this.color.wrap.out[2],this.fade*this.fades.wrap.bow)
                        this.calc.int=[this.parts.kimono.main+(this.parts.wrap.bow-this.parts.kimono.main)*this.fades.kimono.main.front.y]
                        if(this.trigger.display.extra.damage){
                            this.layer.beginShape()
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*7.3*this.fades.kimono.outside.front.x,this.calc.int[0])
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*9.1*this.fades.kimono.outside.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*6,this.calc.int[0]+3.6)
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*8.8*this.fades.kimono.outside.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*8,this.calc.int[0]+1.8)
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*8.2*this.fades.kimono.outside.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*8,this.calc.int[0]-1.8)
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*7.9*this.fades.kimono.outside.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*6,this.calc.int[0]-3.6)
                            this.layer.endShape(CLOSE)
                            this.layer.beginShape()
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*7.3*this.fades.kimono.outside.front.x,this.calc.int[0])
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*9.1*this.fades.kimono.outside.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*6,this.calc.int[0]+3.6)
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*8.8*this.fades.kimono.outside.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*8,this.calc.int[0]+1.8)
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*8.2*this.fades.kimono.outside.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*8,this.calc.int[0]-1.8)
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*7.9*this.fades.kimono.outside.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*6,this.calc.int[0]-3.6)
                            this.layer.endShape(CLOSE)
                        }else{
                            this.layer.triangle(lsin(this.spin.wrap.bow+this.anim.direction)*7.3*this.fades.kimono.outside.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*9.3*this.fades.kimono.outside.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*8,this.calc.int[0]+4.8,lsin(this.spin.wrap.bow+this.anim.direction)*7.7*this.fades.kimono.outside.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*8,this.calc.int[0]-4.8)
                            this.layer.triangle(lsin(this.spin.wrap.bow+this.anim.direction)*7.3*this.fades.kimono.outside.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*9.3*this.fades.kimono.outside.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*8,this.calc.int[0]+4.8,lsin(this.spin.wrap.bow+this.anim.direction)*7.7*this.fades.kimono.outside.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*8,this.calc.int[0]-4.8)
                        }
                        this.layer.line(lsin(this.spin.wrap.bow+this.anim.direction)*7.3*this.fades.kimono.outside.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*7.8*this.fades.kimono.outside.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*6,this.calc.int[0]+1.2)
                        this.layer.line(lsin(this.spin.wrap.bow+this.anim.direction)*7.3*this.fades.kimono.outside.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*7.8*this.fades.kimono.outside.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*6,this.calc.int[0]+1.2)
                        this.layer.line(lsin(this.spin.wrap.bow+this.anim.direction)*7.3*this.fades.kimono.outside.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*7.6*this.fades.kimono.outside.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*6,this.calc.int[0]-1.2)
                        this.layer.line(lsin(this.spin.wrap.bow+this.anim.direction)*7.3*this.fades.kimono.outside.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*7.6*this.fades.kimono.outside.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*6,this.calc.int[0]-1.2)
                        this.layer.strokeJoin(MITER)
                    }
                    if(this.trigger.display.kimono.bow){
                        this.layer.noFill()
                        this.layer.stroke(this.color.kimono.bow[0],this.color.kimono.bow[1],this.color.kimono.bow[2],this.fade*this.fades.kimono.bow)
                        this.layer.strokeWeight(0.25)
                        if(this.trigger.display.extra.damage){
                            if(lcos(this.spin.bow.center/2+this.spin.bow.loop[0]/2+this.anim.direction)>0){
                                this.layer.arc(
                                    lsin(this.spin.bow.center+this.anim.direction)*2.875*this.anim.kimono.bow.position.x*this.fades.kimono.outside.front.x+lsin(this.spin.bow.loop[0]*this.anim.kimono.bow.size.x/this.anim.kimono.bow.position.x+this.anim.direction)*2.875*this.fades.kimono.outside.front.x*this.anim.kimono.bow.position.x,
                                    this.parts.kimono.outside+(this.parts.kimono.bow-this.parts.kimono.outside)*this.fades.kimono.outside.front.y,
                                    (lsin(this.spin.bow.center+this.anim.direction)*5.5*this.anim.kimono.bow.position.x*this.fades.kimono.outside.front.x-lsin(this.spin.bow.loop[0]*this.anim.kimono.bow.size.x/this.anim.kimono.bow.position.x+this.anim.direction)*5.5*this.fades.kimono.outside.front.x*this.anim.kimono.bow.position.x),
                                    1*this.anim.kimono.bow.size.y*this.fades.kimono.outside.front.y,0,180
                                )
                            }
                            if(lcos(this.spin.bow.center/2+this.spin.bow.loop[1]/2+this.anim.direction)>0){
                                this.layer.arc(
                                    lsin(this.spin.bow.center+this.anim.direction)*2.875*this.anim.kimono.bow.position.x*this.fades.kimono.outside.front.x+lsin(this.spin.bow.loop[1]*this.anim.kimono.bow.size.x/this.anim.kimono.bow.position.x+this.anim.direction)*2.875*this.fades.kimono.outside.front.x*this.anim.kimono.bow.position.x,
                                    this.parts.kimono.outside+(this.parts.kimono.bow-this.parts.kimono.outside)*this.fades.kimono.outside.front.y,
                                    (lsin(this.spin.bow.center+this.anim.direction)*5.5*this.anim.kimono.bow.position.x*this.fades.kimono.outside.front.x-lsin(this.spin.bow.loop[1]*this.anim.kimono.bow.size.x/this.anim.kimono.bow.position.x+this.anim.direction)*5.5*this.fades.kimono.outside.front.x*this.anim.kimono.bow.position.x),
                                    1*this.anim.kimono.bow.size.y*this.fades.kimono.outside.front.y,0,180
                                )
                            }
                        }else{
                            if(lcos(this.spin.bow.center/2+this.spin.bow.loop[0]/2+this.anim.direction)>0){
                                this.layer.ellipse(
                                    lsin(this.spin.bow.center+this.anim.direction)*2.875*this.anim.kimono.bow.position.x*this.fades.kimono.outside.front.x+lsin(this.spin.bow.loop[0]*this.anim.kimono.bow.size.x/this.anim.kimono.bow.position.x+this.anim.direction)*2.875*this.fades.kimono.outside.front.x*this.anim.kimono.bow.position.x,
                                    this.parts.kimono.outside+(this.parts.kimono.bow-this.parts.kimono.outside)*this.fades.kimono.outside.front.y,
                                    (lsin(this.spin.bow.center+this.anim.direction)*5.5*this.anim.kimono.bow.position.x*this.fades.kimono.outside.front.x-lsin(this.spin.bow.loop[0]*this.anim.kimono.bow.size.x/this.anim.kimono.bow.position.x+this.anim.direction)*5.5*this.fades.kimono.outside.front.x*this.anim.kimono.bow.position.x),
                                    1*this.anim.kimono.bow.size.y*this.fades.kimono.outside.front.y
                                )
                            }
                            if(lcos(this.spin.bow.center/2+this.spin.bow.loop[1]/2+this.anim.direction)>0){
                                this.layer.ellipse(
                                    lsin(this.spin.bow.center+this.anim.direction)*2.875*this.anim.kimono.bow.position.x*this.fades.kimono.outside.front.x+lsin(this.spin.bow.loop[1]*this.anim.kimono.bow.size.x/this.anim.kimono.bow.position.x+this.anim.direction)*2.875*this.fades.kimono.outside.front.x*this.anim.kimono.bow.position.x,
                                    this.parts.kimono.outside+(this.parts.kimono.bow-this.parts.kimono.outside)*this.fades.kimono.outside.front.y,
                                    (lsin(this.spin.bow.center+this.anim.direction)*5.5*this.anim.kimono.bow.position.x*this.fades.kimono.outside.front.x-lsin(this.spin.bow.loop[1]*this.anim.kimono.bow.size.x/this.anim.kimono.bow.position.x+this.anim.direction)*5.5*this.fades.kimono.outside.front.x*this.anim.kimono.bow.position.x),
                                    1*this.anim.kimono.bow.size.y*this.fades.kimono.outside.front.y
                                )
                            }
                        }
                        if(lcos(this.spin.bow.center/2+this.spin.bow.end[0]/2+this.anim.direction)>0){
                            this.layer.line(
                                lsin(this.spin.bow.center+this.anim.direction)*5.75*this.anim.kimono.bow.position.x*this.fades.kimono.outside.front.x,
                                this.parts.kimono.outside+(this.parts.kimono.bow-this.parts.kimono.outside)*this.fades.kimono.outside.front.y,
                                lsin(this.spin.bow.end[0]*this.anim.kimono.bow.size.x/this.anim.kimono.bow.position.x+this.anim.direction)*(5.75*this.anim.kimono.bow.position.x+0.25*this.anim.kimono.bow.size.x)*this.fades.kimono.outside.front.x,
                                this.parts.kimono.outside+(this.parts.kimono.bow-this.parts.kimono.outside)*this.fades.kimono.outside.front.y+1.5*this.anim.kimono.bow.size.y*this.fades.kimono.outside.front.y
                            )
                        }
                        if(lcos(this.spin.bow.center/2+this.spin.bow.end[1]/2+this.anim.direction)>0){
                            this.layer.line(
                                lsin(this.spin.bow.center+this.anim.direction)*5.75*this.anim.kimono.bow.position.x*this.fades.kimono.outside.front.x,
                                this.parts.kimono.outside+(this.parts.kimono.bow-this.parts.kimono.outside)*this.fades.kimono.outside.front.y,
                                lsin(this.spin.bow.end[1]*this.anim.kimono.bow.size.x/this.anim.kimono.bow.position.x+this.anim.direction)*(5.75*this.anim.kimono.bow.position.x+0.25*this.anim.kimono.bow.size.x)*this.fades.kimono.outside.front.x,
                                this.parts.kimono.outside+(this.parts.kimono.bow-this.parts.kimono.outside)*this.fades.kimono.outside.front.y+1.5*this.anim.kimono.bow.size.y*this.fades.kimono.outside.front.y
                            )
                        }
                    }
                    if(this.trigger.display.skin.head){
                        this.layer.fill(this.flashColor(this.color.skin.head)[0],this.flashColor(this.color.skin.head)[1],this.flashColor(this.color.skin.head)[2],this.fade*this.fades.skin.head)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-75,30,30)
                    }
                    if(this.trigger.display.mouth&&lcos(this.anim.direction)>0){
                        this.minorDisplayGeneral(1,0)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.extra.sword&&(lcos(this.spin.arms[g].top+this.anim.direction)>=0.6||lcos(this.spin.arms[g].bottom+this.anim.direction)>=0.3)&&g==0){
                            this.minorDisplay(0,g)
                        }
                        if(this.trigger.display.extra.sword2&&(lcos(this.spin.arms[g].top+this.anim.direction)>=0.6||lcos(this.spin.arms[g].bottom+this.anim.direction)>=0.3)&&g==1){
                            this.minorDisplay(1,g)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>=0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].bottom+this.anim.direction)>=0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        if(this.trigger.display.sleeve&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.3){
                            this.layer.noStroke()
                            for(let h=0,lh=10;h<lh;h++){
                                this.layer.fill(mergeColor(this.color.sleeve.back,this.color.sleeve.front,h/lh),this.fade*this.fades.sleeve)
                                if(this.trigger.display.extra.damage){
                                    this.layer.beginShape()
                                    this.layer.vertex(this.graphics.arms[g].top.x+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*0.18*(g*2-1)*sign(lcos(this.anim.direction))*min(1-h/lh,lcos(this.spin.arms[g].top+this.anim.direction)*3+0.3)-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.125+(0.175+g*0.05)*h/lh),
                                        this.graphics.arms[g].top.y-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*0.18*(g*2-1)*sign(lcos(this.anim.direction))*min(1-h/lh,lcos(this.spin.arms[g].top+this.anim.direction)*3+0.3)-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.125+(0.175+g*0.05)*h/lh))
                                    this.layer.vertex(this.graphics.arms[g].top.x-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(-0.05+g*0.075)*(g*2-1)*sign(lcos(this.anim.direction))-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.3+g*0.05),
                                        this.graphics.arms[g].top.y+(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(-0.05+g*0.075)*(g*2-1)*sign(lcos(this.anim.direction))-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.3+g*0.05))
                                    this.layer.vertex(this.graphics.arms[g].top.x-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.12-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.125+(0.175+g*0.05)*h/lh),
                                        this.graphics.arms[g].top.y+(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.12-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.125+(0.175+g*0.05)*h/lh))
                                    this.layer.vertex(this.graphics.arms[g].middle.x-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.15-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.y+(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.15-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)))
                                    this.layer.vertex(this.graphics.arms[g].middle.x+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(g*2-1)*sign(lcos(this.anim.direction))*(0.15+0.12*min(1-h/lh,lcos(this.spin.arms[g].top+this.anim.direction)*2+0.8)),
                                        this.graphics.arms[g].middle.y-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(g*2-1)*sign(lcos(this.anim.direction))*(0.15+0.12*min(1-h/lh,lcos(this.spin.arms[g].top+this.anim.direction)*2+0.8)))
                                    this.layer.endShape()
                                }else{
                                    this.layer.quad(
                                        this.graphics.arms[g].top.x+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*0.18*(g*2-1)*sign(lcos(this.anim.direction))*min(1-h/lh,lcos(this.spin.arms[g].top+this.anim.direction)*3+0.3)-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)/8,
                                        this.graphics.arms[g].top.y-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*0.18*(g*2-1)*sign(lcos(this.anim.direction))*min(1-h/lh,lcos(this.spin.arms[g].top+this.anim.direction)*3+0.3)-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)/8,
                                        this.graphics.arms[g].top.x-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.12-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)/8,
                                        this.graphics.arms[g].top.y+(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.12-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)/8,
                                        this.graphics.arms[g].middle.x-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.15-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.y+(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.15-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.x+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(g*2-1)*sign(lcos(this.anim.direction))*(0.15+0.12*min(1-h/lh,lcos(this.spin.arms[g].top+this.anim.direction)*2+0.8)),
                                        this.graphics.arms[g].middle.y-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(g*2-1)*sign(lcos(this.anim.direction))*(0.15+0.12*min(1-h/lh,lcos(this.spin.arms[g].top+this.anim.direction)*2+0.8))
                                    )
                                }
                                this.layer.push()
                                this.layer.translate(((this.graphics.arms[g].middle.x-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.15-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)))+
                                (this.graphics.arms[g].middle.x+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(g*2-1)*sign(lcos(this.anim.direction))*(0.15+0.12*min(1-h/lh,lcos(this.spin.arms[g].top+this.anim.direction)*2+0.8))))/2,
                                ((this.graphics.arms[g].middle.y+(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.15-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)))+
                                (this.graphics.arms[g].middle.y-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(g*2-1)*sign(lcos(this.anim.direction))*(0.15+0.12*min(1-h/lh,lcos(this.spin.arms[g].top+this.anim.direction)*2+0.8))))/2)
                                this.layer.rotate(atan2(this.graphics.arms[g].middle.x-this.graphics.arms[g].top.x,this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y))
                                let i=dist(0,0,
                                    ((this.graphics.arms[g].middle.x-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(0.15-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)))-
                                    (this.graphics.arms[g].middle.x+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*(g*2-1)*sign(lcos(this.anim.direction))*(0.15+0.12*min(1-h/lh,lcos(this.spin.arms[g].top+this.anim.direction)*2+0.8)))),
                                    ((this.graphics.arms[g].middle.y+(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(0.15-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)))-
                                    (this.graphics.arms[g].middle.y-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*(g*2-1)*sign(lcos(this.anim.direction))*(0.15+0.12*min(1-h/lh,lcos(this.spin.arms[g].top+this.anim.direction)*2+0.8)))))
                                this.layer.arc(0,0,i,i*(0.6-0.1*h/lh),-180,0)
                                this.layer.pop()
                                if(this.trigger.display.extra.damage){
                                    this.layer.beginShape()
                                    this.layer.vertex(this.graphics.arms[g].middle.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.165-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.165-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)))
                                    this.layer.vertex(this.graphics.arms[g].middle.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.165-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.165-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)))
                                    this.layer.vertex(this.graphics.arms[g].bottom.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.27-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.45+(0.2+g*0.05)*h/lh),
                                        this.graphics.arms[g].bottom.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.27-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.45+(0.2+g*0.05)*h/lh))
                                    this.layer.vertex(this.graphics.arms[g].bottom.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(-0.1+g*0.175)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.65+g*0.05),
                                        this.graphics.arms[g].bottom.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(-0.1+g*0.175)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.65+g*0.05))
                                    this.layer.vertex(this.graphics.arms[g].bottom.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.27-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.45+(0.2+g*0.05)*h/lh),
                                        this.graphics.arms[g].bottom.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.27-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.45+(0.2+g*0.05)*h/lh))
                                    this.layer.endShape()
                                }else{
                                    this.layer.quad(
                                        this.graphics.arms[g].middle.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.165-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.165-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.165-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.165-0.12*h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].bottom.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.27-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)/4,
                                        this.graphics.arms[g].bottom.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.27-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)/4,
                                        this.graphics.arms[g].bottom.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*(0.27-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)/4,
                                        this.graphics.arms[g].bottom.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*(0.27-0.18*h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)/4
                                    )
                                }
                            }
                        }
                        if(this.trigger.display.wrap.sleeve){
                            this.layer.strokeJoin(ROUND)
                            this.layer.strokeWeight(0.4)
                            this.layer.fill(this.color.wrap.in[0],this.color.wrap.in[1],this.color.wrap.in[2],this.fade*this.fades.wrap.bow)
                            this.layer.stroke(this.color.wrap.out[0],this.color.wrap.out[1],this.color.wrap.out[2],this.fade*this.fades.wrap.bow)
                            this.calc.int=[
                                this.graphics.arms[g].top.x-constrain(lsin(this.spin.arms[g].top+this.anim.direction)*1.2,-1,1)*(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*0.135-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)/8,
                                this.graphics.arms[g].top.y+constrain(lsin(this.spin.arms[g].top+this.anim.direction)*1.2,-1,1)*(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*0.135-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)/8,
                                this.graphics.arms[g].top.x-constrain(lsin(this.spin.arms[g].top+this.anim.direction)*1.2,-1,1)*(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*0.15-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)/4,
                                this.graphics.arms[g].top.y+constrain(lsin(this.spin.arms[g].top+this.anim.direction)*1.2,-1,1)*(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*0.15-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)/4
                            ]
                            if(this.anim.direction*(g*2-1)+this.spin.arms[g].lock>-150&&this.anim.direction*(g*2-1)+this.spin.arms[g].lock<150&&(lcos(this.spin.wrap.center+this.anim.direction)>=0||lcos(90*(g*2-1)+this.anim.direction)>=0)){
                                if(this.anim.direction*(g*2-1)+this.spin.arms[g].lock<-70){
                                    this.layer.triangle(this.calc.int[0],this.calc.int[1],this.calc.int[2],this.calc.int[3],-6.6*this.fades.kimono.outside.front.x*(g*2-1),this.parts.kimono.outside+16*this.fades.kimono.outside.front.y)
                                }else if(this.anim.direction*(g*2-1)+this.spin.arms[g].lock>30){
                                    this.layer.triangle(5.7*this.fades.kimono.outside.front.x*(g*2-1),-54,6.2*this.fades.kimono.outside.front.x*(g*2-1),-52,lsin(this.spin.wrap.center+this.anim.direction)*6.6*this.fades.kimono.outside.front.x,this.parts.kimono.outside+16*this.fades.kimono.outside.front.y)
                                }else{
                                    this.layer.triangle(this.calc.int[0],this.calc.int[1],this.calc.int[2],this.calc.int[3],lsin(this.spin.wrap.center+this.anim.direction)*6.6*this.fades.kimono.outside.front.x,this.parts.kimono.outside+16*this.fades.kimono.outside.front.y)
                                }
                            }
                            if((this.anim.direction*(g*2-1)+this.spin.arms[g].lock<-50||this.anim.direction*(g*2-1)+this.spin.arms[g].lock>50)&&(lcos(this.spin.wrap.center+this.anim.direction)<0||lcos(90*(g*2-1)+this.anim.direction)>=0)){
                                if(this.anim.direction*(g*2-1)+this.spin.arms[g].lock>-110&&this.anim.direction*(g*2-1)<0){
                                    this.layer.triangle(this.calc.int[0],this.calc.int[1],this.calc.int[2],this.calc.int[3],6.6*this.fades.kimono.outside.front.x*(g*2-1),this.parts.kimono.outside+16*this.fades.kimono.outside.front.y)
                                }else if(this.anim.direction*(g*2-1)+this.spin.arms[g].lock<150&&this.anim.direction*(g*2-1)>90){
                                    this.layer.triangle(-5.7*this.fades.kimono.outside.front.x*(g*2-1),-54,-6.2*this.fades.kimono.outside.front.x*(g*2-1),-52,lsin(this.spin.wrap.center+this.anim.direction)*-6.6*this.fades.kimono.outside.front.x,this.parts.kimono.outside+16*this.fades.kimono.outside.front.y)
                                }else{
                                    this.layer.triangle(this.calc.int[0],this.calc.int[1],this.calc.int[2],this.calc.int[3],lsin(this.spin.wrap.center+this.anim.direction)*-6.6*this.fades.kimono.outside.front.x,this.parts.kimono.outside+16*this.fades.kimono.outside.front.y)
                                }
                            }
                        }
                        if(this.trigger.display.eye[g]){
                            this.minorDisplayGeneral(0,g)
                        }
                    }
                    if(this.trigger.display.sleeveDecoration){
                        this.layer.noStroke()
                        for(let g=0,lg=this.spin.sleeve.decoration.length;g<lg;g++){
                            if(lcos(this.spin.sleeve.decoration[g].spin+this.anim.direction)>=0.2&&lcos(this.spin.arms[this.spin.sleeve.decoration[g].part].top+this.anim.direction)>-0.3&&!(this.spin.sleeve.decoration[g].length>1.5&&this.trigger.display.extra.damage)){
                                h=this.spin.sleeve.decoration[g].part
                                this.layer.push()
                                if(this.spin.sleeve.decoration[g].length>1){
                                    this.layer.translate(
                                        lerp(
                                            this.graphics.arms[h].middle.x-(this.graphics.arms[h].middle.y-this.graphics.arms[h].bottom.y)*0.165*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction),
                                            this.graphics.arms[h].bottom.x-(this.graphics.arms[h].middle.y-this.graphics.arms[h].bottom.y)*0.27*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)+(this.graphics.arms[h].middle.x-this.graphics.arms[h].bottom.x)/4,
                                            this.spin.sleeve.decoration[g].length-1
                                        )
                                        ,lerp(
                                            this.graphics.arms[h].middle.y+(this.graphics.arms[h].middle.x-this.graphics.arms[h].bottom.x)*0.165*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction),
                                            this.graphics.arms[h].bottom.y+(this.graphics.arms[h].middle.x-this.graphics.arms[h].bottom.x)*0.27*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)+(this.graphics.arms[h].middle.y-this.graphics.arms[h].bottom.y)/4,
                                            this.spin.sleeve.decoration[g].length-1
                                        ))
                                    this.layer.rotate(-atan2(
                                        ((this.graphics.arms[h].middle.x-(this.graphics.arms[h].middle.y-this.graphics.arms[h].bottom.y)*0.165*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction))-
                                        (this.graphics.arms[h].bottom.x-(this.graphics.arms[h].middle.y-this.graphics.arms[h].bottom.y)*0.27*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)+(this.graphics.arms[h].middle.x-this.graphics.arms[h].bottom.x)/4)),
                                        ((this.graphics.arms[h].middle.y+(this.graphics.arms[h].middle.x-this.graphics.arms[h].bottom.x)*0.165*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction))-
                                        (this.graphics.arms[h].bottom.y+(this.graphics.arms[h].middle.x-this.graphics.arms[h].bottom.x)*0.27*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)+(this.graphics.arms[h].middle.y-this.graphics.arms[h].bottom.y)/4))
                                    ))
                                }else{
                                    this.layer.translate(
                                        lerp(
                                            this.graphics.arms[h].top.x-(this.graphics.arms[h].top.y-this.graphics.arms[h].middle.y)*0.12*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)-(this.graphics.arms[h].top.x-this.graphics.arms[h].middle.x)/8,
                                            this.graphics.arms[h].middle.x-(this.graphics.arms[h].top.y-this.graphics.arms[h].middle.y)*0.15*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction),
                                            this.spin.sleeve.decoration[g].length
                                        )
                                        ,lerp(
                                            this.graphics.arms[h].top.y+(this.graphics.arms[h].top.x-this.graphics.arms[h].middle.x)*0.12*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)-(this.graphics.arms[h].top.y-this.graphics.arms[h].middle.y)/8,
                                            this.graphics.arms[h].middle.y+(this.graphics.arms[h].top.x-this.graphics.arms[h].middle.x)*0.15*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction),
                                            this.spin.sleeve.decoration[g].length
                                        ))
                                    this.layer.rotate(-atan2(
                                        ((this.graphics.arms[h].top.x-(this.graphics.arms[h].top.y-this.graphics.arms[h].middle.y)*0.12*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)-(this.graphics.arms[h].top.x-this.graphics.arms[h].middle.x)/8)-
                                        (this.graphics.arms[h].middle.x-(this.graphics.arms[h].top.y-this.graphics.arms[h].middle.y)*0.15*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction))),
                                        ((this.graphics.arms[h].top.y+(this.graphics.arms[h].top.x-this.graphics.arms[h].middle.x)*0.12*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)-(this.graphics.arms[h].top.y-this.graphics.arms[h].middle.y)/8)-
                                        (this.graphics.arms[h].middle.y+(this.graphics.arms[h].top.x-this.graphics.arms[h].middle.x)*0.15*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)))
                                    ))
                                }
                                this.layer.scale(lcos(this.spin.sleeve.decoration[g].spin+this.anim.direction)*1.1-0.1,1)
                                this.layer.rotate(this.spin.sleeve.decoration[g].rotate)
                                this.layer.fill(this.color.sleeve.decoration[this.spin.sleeve.decoration[g].type],this.fade)
                                this.layer.beginShape()
                                this.layer.vertex(0,2)
                                this.layer.vertex(-0.375,0.25)
                                this.layer.vertex(-2,0)
                                this.layer.vertex(-0.5,-0.25)
                                this.layer.vertex(-1,-1.5)
                                this.layer.vertex(0,-0.5)
                                this.layer.vertex(1,-1.5)
                                this.layer.vertex(0.5,-0.25)
                                this.layer.vertex(2,0)
                                this.layer.vertex(0.375,0.25)
                                this.layer.endShape()
                                this.layer.pop()
                            }
                        }
                    }
                    if(this.trigger.display.wrap.bow&&lcos(this.spin.wrap.bow+this.anim.direction)>=0.5){
                        this.layer.strokeJoin(ROUND)
                        this.layer.strokeWeight(0.4)
                        this.layer.fill(this.color.wrap.in[0],this.color.wrap.in[1],this.color.wrap.in[2],this.fade*this.fades.wrap.bow)
                        this.layer.stroke(this.color.wrap.out[0],this.color.wrap.out[1],this.color.wrap.out[2],this.fade*this.fades.wrap.bow)
                        this.calc.int=[this.parts.kimono.main+(this.parts.wrap.bow-this.parts.kimono.main)*this.fades.kimono.main.front.y]
                        if(this.trigger.display.extra.damage){
                            this.layer.beginShape()
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*7.3*this.fades.kimono.outside.front.x,this.calc.int[0])
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*9.1*this.fades.kimono.outside.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*6,this.calc.int[0]+3.6)
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*8.8*this.fades.kimono.outside.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*8,this.calc.int[0]+1.8)
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*8.2*this.fades.kimono.outside.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*8,this.calc.int[0]-1.8)
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*7.9*this.fades.kimono.outside.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*6,this.calc.int[0]-3.6)
                            this.layer.endShape(CLOSE)
                            this.layer.beginShape()
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*7.3*this.fades.kimono.outside.front.x,this.calc.int[0])
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*9.1*this.fades.kimono.outside.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*6,this.calc.int[0]+3.6)
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*8.8*this.fades.kimono.outside.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*8,this.calc.int[0]+1.8)
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*8.2*this.fades.kimono.outside.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*8,this.calc.int[0]-1.8)
                            this.layer.vertex(lsin(this.spin.wrap.bow+this.anim.direction)*7.9*this.fades.kimono.outside.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*6,this.calc.int[0]-3.6)
                            this.layer.endShape(CLOSE)
                        }else{
                            this.layer.triangle(lsin(this.spin.wrap.bow+this.anim.direction)*7.3*this.fades.kimono.outside.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*9.3*this.fades.kimono.outside.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*8,this.calc.int[0]+4.8,lsin(this.spin.wrap.bow+this.anim.direction)*7.7*this.fades.kimono.outside.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*8,this.calc.int[0]-4.8)
                            this.layer.triangle(lsin(this.spin.wrap.bow+this.anim.direction)*7.3*this.fades.kimono.outside.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*9.3*this.fades.kimono.outside.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*8,this.calc.int[0]+4.8,lsin(this.spin.wrap.bow+this.anim.direction)*7.7*this.fades.kimono.outside.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*8,this.calc.int[0]-4.8)
                        }
                        this.layer.line(lsin(this.spin.wrap.bow+this.anim.direction)*7.3*this.fades.kimono.outside.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*7.8*this.fades.kimono.outside.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*6,this.calc.int[0]+1.2)
                        this.layer.line(lsin(this.spin.wrap.bow+this.anim.direction)*7.3*this.fades.kimono.outside.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*7.8*this.fades.kimono.outside.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*6,this.calc.int[0]+1.2)
                        this.layer.line(lsin(this.spin.wrap.bow+this.anim.direction)*7.3*this.fades.kimono.outside.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*7.6*this.fades.kimono.outside.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*6,this.calc.int[0]-1.2)
                        this.layer.line(lsin(this.spin.wrap.bow+this.anim.direction)*7.3*this.fades.kimono.outside.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*7.6*this.fades.kimono.outside.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*6,this.calc.int[0]-1.2)
                        this.layer.strokeJoin(MITER)
                    }
                    if(this.trigger.display.kimono.flower&&this.fades.kimono.flower>0){
                        if(constrain((pow(lcos(this.spin.flower[1]+this.anim.direction),1.5)*2-0.2),0,1)>0){
                            this.layer.image(graphics.minor[10],lsin(this.spin.flower[1]+this.anim.direction)*8*this.fades.kimono.outside.front.x-15*this.fade*this.fades.kimono.flower*this.fades.kimono.outside.front.x*constrain((pow(lcos(this.spin.flower[1]+this.anim.direction),1.5)*2-0.2),0,1),this.parts.kimono.outside+(this.parts.kimono.flowerLevel-this.parts.kimono.outside)*this.fades.kimono.outside.front.y-15*this.fade*this.fades.kimono.flower*this.fades.kimono.outside.front.x,30*this.fade*this.fades.kimono.flower*this.fades.kimono.outside.front.x*constrain((pow(lcos(this.spin.flower[1]+this.anim.direction),1.5)*2-0.2),0,1),30*this.fade*this.fades.kimono.flower*this.fades.kimono.outside.front.y)
                        }
                    }
                    if(this.trigger.display.hair.tail&&lcos(this.spin.tail+this.anim.direction)>0){
                        this.layer.image(graphics.combatant[1].sprites.hair.tail[this.sprites.spinDetailHead],lsin(this.spin.tail+this.anim.direction)*14.5-10*this.fade,-50-25*this.fade,20*this.fade,50*this.fade)
                    }
                    if(this.trigger.display.hair.front){
                        this.layer.image(graphics.combatant[1].sprites.hair.front[this.sprites.spinDetailHead],-20*this.fade,-75-20*this.fade,40*this.fade,60*this.fade)
                    }
                    if(this.trigger.display.hair.glow){
                        this.layer.noFill()
                        this.layer.stroke(this.color.hair.glow[0],this.color.hair.glow[1],this.color.hair.glow[2],this.fade/4)
                        for(let g=0;g<6;g++){
                            this.layer.strokeWeight((3-g/2)*this.fade)
                            this.layer.arc(0,-75,30+g,30+g,-72+g*6,-12-g*6)
                        }
                    }
                    if(this.trigger.display.flower&&this.fades.flower>0){
                        if(constrain((pow(lcos(this.spin.flower[0]+this.anim.direction),1.5)*2-0.2),0,1)>0){
                            this.layer.image(graphics.minor[9],lsin(this.spin.flower[0]+this.anim.direction)*18-10*this.fade*this.fades.flower*constrain((pow(lcos(this.spin.flower[0]+this.anim.direction),1.5)*2-0.2),0,1),this.parts.flowerLevel-15*this.fade*this.fades.flower,20*this.fade*this.fades.flower*constrain((pow(lcos(this.spin.flower[0]+this.anim.direction),1.5)*2-0.2),0,1),30*this.fade*this.fades.flower)
                        }
                    }
                    if(this.trigger.display.flower2&&this.fades.flower2>0){
                        if(constrain((pow(lcos(this.spin.flower[0]+this.anim.direction),1.5)*2-0.2),0,1)>0){
                            this.layer.image(graphics.minor[11],lsin(this.spin.flower[0]+this.anim.direction)*18-10*this.fade*this.fades.flower2*constrain((pow(lcos(this.spin.flower[0]+this.anim.direction),1.5)*2-0.2),0,1),this.parts.flowerLevel-15*this.fade*this.fades.flower2,20*this.fade*this.fades.flower2*constrain((pow(lcos(this.spin.flower[0]+this.anim.direction),1.5)*2-0.2),0,1),30*this.fade*this.fades.flower2)
                        }
                    }
                break
                case 'Certes':
                    if(this.trigger.display.hair.back){
                        this.layer.image(graphics.combatant[2].sprites.hair.back[this.sprites.spinDetailHead],-20*this.fade,-75-20*this.fade,40*this.fade,60*this.fade)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                    }
                    if(this.trigger.display.under.dress.back){
                        this.layer.image(graphics.combatant[2].sprites.under.dress.back[this.sprites.spinDetail],-15*this.fade*this.fades.under.dress.back.x,this.parts.under.dress-15*this.fades.under.dress.back.y,30*this.fade*this.fades.under.dress.back.x,50*this.fade*this.fades.under.dress.back.y)
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.ellipse(0,-46,11,30)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        for(let h=0;h<2;h++){
                            if((g==0&&h==0||g==1&&h==1)&&lcos(this.spin.legs[0].bottom+this.anim.direction)<=lcos(this.spin.legs[1].bottom+this.anim.direction)||(g==0&&h==1||g==1&&h==0)&&lcos(this.spin.legs[0].bottom+this.anim.direction)>lcos(this.spin.legs[1].bottom+this.anim.direction)){
                                if(this.trigger.display.skin.legs){
                                    this.layer.stroke(upColor(this.color.skin.legs,lcos(this.anim.direction+this.spin.legs[h].top)*10,[1,1,1])[0],upColor(this.color.skin.legs,lcos(this.anim.direction+this.spin.legs[h].top)*10,[1,1,1])[1],upColor(this.color.skin.legs,lcos(this.anim.direction+this.spin.legs[h].top)*10,[1,1,1])[2],this.fade*this.fades.skin.legs)
                                    this.layer.strokeWeight(4)
                                    this.layer.line(this.graphics.legs[h].top.x,this.graphics.legs[h].top.y,this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y)
                                    this.layer.line(this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y,this.graphics.legs[h].bottom.x,this.graphics.legs[h].bottom.y)
                                }
                            }
                        }
                    }
                    if(this.trigger.display.under.dress.front){
                        this.layer.image(graphics.combatant[2].sprites.under.dress.front[this.sprites.spinDetail],-15*this.fade*this.fades.under.dress.front.x,this.parts.under.dress-15*this.fades.under.dress.front.y,30*this.fade*this.fades.under.dress.front.x,50*this.fade*this.fades.under.dress.front.y)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.3&&lcos(this.spin.arms[g].top+this.anim.direction)<0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                    }
                    if(this.trigger.display.skin.head){
                        this.layer.fill(this.flashColor(this.color.skin.head)[0],this.flashColor(this.color.skin.head)[1],this.flashColor(this.color.skin.head)[2],this.fade*this.fades.skin.head)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-75,30,30)
                    }
                    if(this.trigger.display.mouth&&lcos(this.anim.direction)>0){
                        this.minorDisplayGeneral(1,0)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>=0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].bottom+this.anim.direction)>=0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        if(this.trigger.display.eye[g]){
                            this.minorDisplayGeneral(0,g)
                        }
                    }
                    if(this.trigger.display.hair.front){
                        this.layer.image(graphics.combatant[2].sprites.hair.front[this.sprites.spinDetailHead],-20*this.fade,-75-20*this.fade,40*this.fade,60*this.fade)
                    }
                    if(this.trigger.display.hair.glow){
                        this.layer.noFill()
                        this.layer.stroke(this.color.hair.glow[0],this.color.hair.glow[1],this.color.hair.glow[2],this.fade/4)
                        for(let g=0;g<6;g++){
                            this.layer.strokeWeight((3-g/2)*this.fade)
                            this.layer.arc(0,-75,30+g,30+g,-72+g*6,-12-g*6)
                        }
                    }
                break
                case 'Ume':
                    if(this.trigger.display.hair.pin){
                        this.layer.noStroke()
                        for(let g=0;g<2;g++){
                            if(lcos(this.anim.direction+this.spin.hair.pin[g])<=0){
                                this.layer.push()
                                this.layer.translate(lsin(this.anim.direction+this.spin.hair.pin[g])*14,-83.75)
                                this.layer.rotate(lsin(this.anim.direction+this.spin.hair.pin[g])*-30)
                                this.layer.scale(lcos(this.anim.direction+this.spin.hair.pin[g])*0.95+0.05,1)
                                this.layer.fill(this.color.hair.pin[0][0],this.color.hair.pin[0][1],this.color.hair.pin[0][2],this.fade*this.fades.hair.pin)
                                this.layer.ellipse(0,0,4,3)
                                this.layer.ellipse(-1,-2.5,1,4)
                                this.layer.ellipse(1,-2.5,1,4)
                                this.layer.fill(this.color.hair.pin[1][0],this.color.hair.pin[1][1],this.color.hair.pin[1][2],this.fade*this.fades.hair.pin)
                                this.layer.ellipse(-1,-2.5,0.4,2.4)
                                this.layer.ellipse(1,-2.5,0.4,2.4)
                                this.layer.stroke(this.color.hair.pin[2][0],this.color.hair.pin[2][1],this.color.hair.pin[2][2],this.fade*this.fades.hair.pin)
                                this.layer.noFill()
                                this.layer.strokeWeight(0.4)
                                this.layer.point(-0.45,-0.4)
                                this.layer.point(0.45,-0.4)
                                this.layer.strokeWeight(0.2)
                                if(this.trigger.display.extra.damage){
                                    this.layer.arc(0,1,1.6,1,-150,-30)
                                }else{
                                    this.layer.arc(0,0,1.6,1,30,150)
                                }
                                this.layer.line(-1.1,-0.25,-1.5,-0.35)
                                this.layer.line(-1.1,0.25,-1.5,0.35)
                                this.layer.line(1.1,-0.25,1.5,-0.35)
                                this.layer.line(1.1,0.25,1.5,0.35)
                                this.layer.pop()
                            }
                        }
                    }
                    if(this.trigger.display.hair.back){
                        this.layer.image(graphics.combatant[10].sprites.hair.back[this.sprites.spinDetailHead],-20*this.fade,-75-20*this.fade,40*this.fade,60*this.fade)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.extra.sword&&lcos(this.spin.arms[g].top+this.anim.direction)<=0.6&&g==0){
                            this.minorDisplay(-1,g)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        if(this.trigger.display.wrap.sleeve&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.6){
                            this.layer.strokeJoin(ROUND)
                            this.layer.strokeWeight(0.4)
                            this.layer.fill(this.color.wrap.sleeveIn[0],this.color.wrap.sleeveIn[1],this.color.wrap.sleeveIn[2],this.fade*this.fades.wrap.sleeve)
                            this.layer.stroke(this.color.wrap.sleeveOut[0],this.color.wrap.sleeveOut[1],this.color.wrap.sleeveOut[2],this.fade*this.fades.wrap.sleeve)
                            this.calc.int=[
                                this.graphics.arms[g].top.x-constrain(lsin(this.spin.arms[g].top+this.anim.direction)*1.2,-1,1)*(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*0.135-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*3/8,
                                this.graphics.arms[g].top.y+constrain(lsin(this.spin.arms[g].top+this.anim.direction)*1.2,-1,1)*(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*0.135-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*3/8,
                                this.graphics.arms[g].top.x-constrain(lsin(this.spin.arms[g].top+this.anim.direction)*1.2,-1,1)*(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*0.15-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)/2,
                                this.graphics.arms[g].top.y+constrain(lsin(this.spin.arms[g].top+this.anim.direction)*1.2,-1,1)*(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*0.15-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)/2
                            ]
                            if(!(this.anim.direction*(g*2-1)+this.spin.arms[g].lock>-150&&this.anim.direction*(g*2-1)+this.spin.arms[g].lock<150&&(lcos(this.spin.wrap.center+this.anim.direction)>=0||lcos(90*(g*2-1)+this.anim.direction)>=0))){
                                this.layer.triangle(this.calc.int[0],this.calc.int[1],this.calc.int[2],this.calc.int[3],lsin(this.spin.wrap.center+this.anim.direction)*6.6*this.fades.kimono.main.front.x,this.parts.kimono.main+10*this.fades.kimono.main.front.y)
                            }
                            if(!((this.anim.direction*(g*2-1)+this.spin.arms[g].lock<-50||this.anim.direction*(g*2-1)+this.spin.arms[g].lock>50)&&(lcos(this.spin.wrap.center+this.anim.direction)<0||lcos(90*(g*2-1)+this.anim.direction)>=0))){
                                this.layer.triangle(this.calc.int[0],this.calc.int[1],this.calc.int[2],this.calc.int[3],lsin(this.spin.wrap.center+this.anim.direction)*-6.6*this.fades.kimono.main.front.x,this.parts.kimono.main+10*this.fades.kimono.main.front.y)
                            }
                        }
                        if(this.trigger.display.sleeve&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.6){
                            this.layer.noStroke()
                            for(let h=0,lh=10;h<lh;h++){
                                this.layer.fill(mergeColor(this.color.sleeve.back,this.color.sleeve.front,h/lh),this.fade*this.fades.sleeve)
                                this.layer.quad(
                                    this.graphics.arms[g].top.x+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*0.15*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*3/8,
                                    this.graphics.arms[g].top.y-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*0.15*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*3/8,
                                    this.graphics.arms[g].top.x-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*0.15*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*3/8,
                                    this.graphics.arms[g].top.y+(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*0.15*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*3/8,
                                    this.graphics.arms[g].middle.x-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                    this.graphics.arms[g].middle.y+(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                    this.graphics.arms[g].middle.x+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                    this.graphics.arms[g].middle.y-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))
                                )
                                this.layer.push()
                                this.layer.translate(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                                this.layer.rotate(atan2(this.graphics.arms[g].middle.x-this.graphics.arms[g].top.x,this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y))
                                let i=0.36*(1-h/lh)*(g*2-1)*sqrt((this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)**2+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)**2)
                                this.layer.arc(0,0,i,i,-180,0)
                                this.layer.pop()
                                if(this.trigger.display.extra.damage){
                                    this.layer.beginShape()
                                    this.layer.vertex(this.graphics.arms[g].middle.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)))
                                    this.layer.vertex(this.graphics.arms[g].middle.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)))
                                    this.layer.vertex(this.graphics.arms[g].bottom.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.225*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.34375,
                                        this.graphics.arms[g].bottom.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.225*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.34375)
                                    this.layer.vertex(this.graphics.arms[g].bottom.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.1125*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.5,
                                        this.graphics.arms[g].bottom.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.1125*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.5)
                                    this.layer.vertex(this.graphics.arms[g].bottom.x+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.34375,
                                        this.graphics.arms[g].bottom.y+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.34375)
                                    this.layer.vertex(this.graphics.arms[g].bottom.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.1125*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.5,
                                        this.graphics.arms[g].bottom.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.1125*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.5)
                                    this.layer.vertex(this.graphics.arms[g].bottom.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.225*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.34375,
                                        this.graphics.arms[g].bottom.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.225*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.34375)
                                    this.layer.endShape()
                                }else{
                                    this.layer.quad(
                                        this.graphics.arms[g].middle.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].bottom.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.24*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)/8,
                                        this.graphics.arms[g].bottom.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.24*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)/8,
                                        this.graphics.arms[g].bottom.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.24*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)/8,
                                        this.graphics.arms[g].bottom.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.24*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)/8
                                    )
                                }
                            }
                        }
                    }
                    if(this.trigger.display.wrap.bow&&lcos(this.spin.wrap.bow+this.anim.direction)<=0){
                        this.layer.strokeJoin(ROUND)
                        this.layer.strokeWeight(0.4)
                        this.layer.fill(this.color.wrap.bow.in[0],this.color.wrap.bow.in[1],this.color.wrap.bow.in[2],this.fade*this.fades.wrap.bow)
                        this.layer.stroke(this.color.wrap.bow.out[0],this.color.wrap.bow.out[1],this.color.wrap.bow.out[2],this.fade*this.fades.wrap.bow)
                        this.calc.int=[this.parts.kimono.main+(this.parts.wrap.bow-this.parts.kimono.main)*this.fades.kimono.main.front.y]
                        if(this.trigger.display.extra.damage){
                            this.layer.quad(lsin(this.spin.wrap.bow+this.anim.direction)*6.6*this.fades.kimono.main.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*6.9*this.fades.kimono.main.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*2.25,this.calc.int[0]+1.25,lsin(this.spin.wrap.bow+this.anim.direction)*6.1*this.fades.kimono.main.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*3.6,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*6.1*this.fades.kimono.main.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*2.25,this.calc.int[0]-1.25)
                            this.layer.quad(lsin(this.spin.wrap.bow+this.anim.direction)*6.6*this.fades.kimono.main.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*6.9*this.fades.kimono.main.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*2.25,this.calc.int[0]+1.25,lsin(this.spin.wrap.bow+this.anim.direction)*6.1*this.fades.kimono.main.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*3.6,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*6.1*this.fades.kimono.main.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*2.25,this.calc.int[0]-1.25)
                        }else{
                            this.layer.triangle(lsin(this.spin.wrap.bow+this.anim.direction)*6.6*this.fades.kimono.main.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*6.9*this.fades.kimono.main.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*3.6,this.calc.int[0]+2,lsin(this.spin.wrap.bow+this.anim.direction)*6.1*this.fades.kimono.main.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*3.6,this.calc.int[0]-2)
                            this.layer.triangle(lsin(this.spin.wrap.bow+this.anim.direction)*6.6*this.fades.kimono.main.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*6.9*this.fades.kimono.main.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*3.6,this.calc.int[0]+2,lsin(this.spin.wrap.bow+this.anim.direction)*6.1*this.fades.kimono.main.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*3.6,this.calc.int[0]-2)
                        }
                        this.layer.line(lsin(this.spin.wrap.bow+this.anim.direction)*6.6*this.fades.kimono.main.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*6.6*this.fades.kimono.main.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*2.4,this.calc.int[0]+0.5)
                        this.layer.line(lsin(this.spin.wrap.bow+this.anim.direction)*6.6*this.fades.kimono.main.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*6.6*this.fades.kimono.main.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*2.4,this.calc.int[0]+0.5)
                        this.layer.line(lsin(this.spin.wrap.bow+this.anim.direction)*6.6*this.fades.kimono.main.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*6.4*this.fades.kimono.main.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*2.4,this.calc.int[0]-0.5)
                        this.layer.line(lsin(this.spin.wrap.bow+this.anim.direction)*6.6*this.fades.kimono.main.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*6.4*this.fades.kimono.main.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*2.4,this.calc.int[0]-0.5)
                        this.layer.strokeJoin(MITER)
                    }
                    if(this.trigger.display.kimono.bow&&lcos(this.anim.direction+this.spin.bow.center)<=0){
                        this.layer.noFill()
                        this.layer.stroke(this.color.kimono.bow[0],this.color.kimono.bow[1],this.color.kimono.bow[2],this.fade*this.fades.kimono.bow)
                        this.layer.push()
                        this.layer.translate(lsin(this.anim.direction+this.spin.bow.center)*7,this.parts.kimono.bow)
                        this.layer.scale(lcos(this.anim.direction+this.spin.bow.center),1)
                        this.layer.strokeWeight(0.45)
                        this.layer.arc(0,2.5,1.6,5,-180,0)
                        this.layer.strokeWeight(0.3)
                        if(this.trigger.display.extra.damage){
                            this.layer.arc(-0.8,4.5,1,4,-120,-60)
                            this.layer.arc(0.8,4.5,1,4,-120,-60)
                            this.layer.line(-0.8,2.5,-0.8,4)
                            this.layer.line(0.8,2.5,0.8,4)
                        }else{
                            this.layer.arc(-0.8,4.5,1,4,-180,0)
                            this.layer.arc(0.8,4.5,1,4,-180,0)
                            this.layer.line(-0.8,2.5,-0.8,5)
                            this.layer.line(0.8,2.5,0.8,5)
                        }
                        this.layer.rotate(12)
                        if(!this.trigger.display.extra.damage){
                            this.layer.ellipse(-1.2,-1.2,2.4,2.4)
                            this.layer.ellipse(-1.2,1.2,2.4,2.4)
                            this.layer.ellipse(1.2,-1.2,2.4,2.4)
                            this.layer.ellipse(1.2,1.2,2.4,2.4)
                        }
                        this.layer.rotate(30)
                        this.layer.ellipse(-0.8,-0.8,1.6,1.6)
                        this.layer.ellipse(-0.8,0.8,1.6,1.6)
                        this.layer.ellipse(0.8,-0.8,1.6,1.6)
                        this.layer.ellipse(0.8,0.8,1.6,1.6)
                        this.layer.pop()
                    }
                    if(this.trigger.display.kimono.main.back){
                        if(this.trigger.display.extra.damage){
                            this.layer.image(graphics.combatant[10].sprites.kimono.mainDamage.back[this.sprites.spinDetail],-20*this.fade*this.fades.kimono.main.front.x,this.parts.kimono.main-15*this.fades.kimono.main.front.y,40*this.fade*this.fades.kimono.main.front.x,66*this.fade*this.fades.kimono.main.front.y)
                        }else{
                            this.layer.image(graphics.combatant[10].sprites.kimono.main.back[this.sprites.spinDetail],-20*this.fade*this.fades.kimono.main.back.x,this.parts.kimono.main-15*this.fades.kimono.main.back.y,40*this.fade*this.fades.kimono.main.back.x,66*this.fade*this.fades.kimono.main.back.y)
                        }
                    }
                    if(this.trigger.display.under.under.button&&lcos(this.spin.under.under.button[0]+this.anim.direction)<=0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,-lcos(this.spin.under.under.button[0]+this.anim.direction)/4+0.75))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,-lcos(this.spin.under.under.button[0]+this.anim.direction)/4+0.75))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,-lcos(this.spin.under.under.button[0]+this.anim.direction)/4+0.75))[2],this.fade*this.fades.under.under.button)
                        this.layer.ellipse(lsin(this.spin.under.under.button[0]+this.anim.direction)*5.75,-49.5,lcos(this.spin.under.under.button[0]+this.anim.direction)*0.25+1,1.25)
                    }
                    if(this.trigger.display.under.under.button&&lcos(this.spin.under.under.button[1]+this.anim.direction)<=0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,-lcos(this.spin.under.under.button[1]+this.anim.direction)/4+0.75))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,-lcos(this.spin.under.under.button[1]+this.anim.direction)/4+0.75))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,-lcos(this.spin.under.under.button[1]+this.anim.direction)/4+0.75))[2],this.fade*this.fades.under.under.button)
                        this.layer.ellipse(lsin(this.spin.under.under.button[1]+this.anim.direction)*5.75,-49.5,lcos(this.spin.under.under.button[1]+this.anim.direction)*0.25+1,1.25)
                    }
                    if(this.trigger.display.under.under.top&&lcos(this.spin.under.under.top[0]+this.anim.direction)<=0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,-lcos(this.spin.under.under.top[0]+this.anim.direction)))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,-lcos(this.spin.under.under.top[0]+this.anim.direction)))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,-lcos(this.spin.under.under.top[0]+this.anim.direction)))[2],this.fade*this.fades.under.under.top)
                        this.layer.ellipse(lsin(this.spin.under.under.top[0]+this.anim.direction)*4.2,-50,lcos(this.spin.under.under.top[0]+this.anim.direction)*3.5+2.5,6)
                    }
                    if(this.trigger.display.under.under.top&&lcos(this.spin.under.under.top[1]+this.anim.direction)<=0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,-lcos(this.spin.under.under.top[1]+this.anim.direction)))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,-lcos(this.spin.under.under.top[1]+this.anim.direction)))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,-lcos(this.spin.under.under.top[1]+this.anim.direction)))[2],this.fade*this.fades.under.under.top)
                        this.layer.ellipse(lsin(this.spin.under.under.top[1]+this.anim.direction)*4.2,-50,lcos(this.spin.under.under.top[1]+this.anim.direction)*3.5+2.5,6)
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.ellipse(0,-46,11,30)
                    }
                    if(this.trigger.display.skin.button){
                        if(lcos(this.spin.button+this.anim.direction)>0){
                            this.layer.noStroke()
                            this.layer.fill(this.flashColor(this.color.skin.button)[0],this.flashColor(this.color.skin.button)[1],this.flashColor(this.color.skin.button)[2],this.fade*this.fades.skin.button)
                            this.layer.ellipse(lsin(this.spin.button+this.anim.direction)*5.2,-42,1*lcos(this.spin.button+this.anim.direction),2)
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.extra.sword&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.6&&g==0){
                            this.minorDisplay(-1,g)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        if(this.trigger.display.wrap.sleeve&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.6){
                            this.layer.strokeJoin(ROUND)
                            this.layer.strokeWeight(0.4)
                            this.layer.fill(this.color.wrap.sleeveIn[0],this.color.wrap.sleeveIn[1],this.color.wrap.sleeveIn[2],this.fade*this.fades.wrap.sleeve)
                            this.layer.stroke(this.color.wrap.sleeveOut[0],this.color.wrap.sleeveOut[1],this.color.wrap.sleeveOut[2],this.fade*this.fades.wrap.sleeve)
                            this.calc.int=[
                                this.graphics.arms[g].top.x-constrain(lsin(this.spin.arms[g].top+this.anim.direction)*1.2,-1,1)*(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*0.135-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*3/8,
                                this.graphics.arms[g].top.y+constrain(lsin(this.spin.arms[g].top+this.anim.direction)*1.2,-1,1)*(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*0.135-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*3/8,
                                this.graphics.arms[g].top.x-constrain(lsin(this.spin.arms[g].top+this.anim.direction)*1.2,-1,1)*(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*0.15-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)/2,
                                this.graphics.arms[g].top.y+constrain(lsin(this.spin.arms[g].top+this.anim.direction)*1.2,-1,1)*(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*0.15-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)/2
                            ]
                            if(!(this.anim.direction*(g*2-1)+this.spin.arms[g].lock>-150&&this.anim.direction*(g*2-1)+this.spin.arms[g].lock<150&&(lcos(this.spin.wrap.center+this.anim.direction)>=0||lcos(90*(g*2-1)+this.anim.direction)>=0))){
                                this.layer.triangle(this.calc.int[0],this.calc.int[1],this.calc.int[2],this.calc.int[3],lsin(this.spin.wrap.center+this.anim.direction)*6.6*this.fades.kimono.main.front.x,this.parts.kimono.main+10*this.fades.kimono.main.front.y)
                            }
                            if(!((this.anim.direction*(g*2-1)+this.spin.arms[g].lock<-50||this.anim.direction*(g*2-1)+this.spin.arms[g].lock>50)&&(lcos(this.spin.wrap.center+this.anim.direction)<0||lcos(90*(g*2-1)+this.anim.direction)>=0))){
                                this.layer.triangle(this.calc.int[0],this.calc.int[1],this.calc.int[2],this.calc.int[3],lsin(this.spin.wrap.center+this.anim.direction)*-6.6*this.fades.kimono.main.front.x,this.parts.kimono.main+10*this.fades.kimono.main.front.y)
                            }
                        }
                        if(this.trigger.display.sleeve&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.3&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.6){
                            this.layer.noStroke()
                            for(let h=0,lh=10;h<lh;h++){
                                this.layer.fill(mergeColor(this.color.sleeve.back,this.color.sleeve.front,h/lh),this.fade*this.fades.sleeve)
                                this.layer.quad(
                                    this.graphics.arms[g].top.x+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*0.15*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*3/8,
                                    this.graphics.arms[g].top.y-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*0.15*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*3/8,
                                    this.graphics.arms[g].top.x-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*0.15*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*3/8,
                                    this.graphics.arms[g].top.y+(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*0.15*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*3/8,
                                    this.graphics.arms[g].middle.x-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                    this.graphics.arms[g].middle.y+(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                    this.graphics.arms[g].middle.x+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                    this.graphics.arms[g].middle.y-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))
                                )
                                this.layer.push()
                                this.layer.translate(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                                this.layer.rotate(atan2(this.graphics.arms[g].middle.x-this.graphics.arms[g].top.x,this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y))
                                let i=0.36*(1-h/lh)*(g*2-1)*sqrt((this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)**2+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)**2)
                                this.layer.arc(0,0,i,i,-180,0)
                                this.layer.pop()
                                if(this.trigger.display.extra.damage){
                                    this.layer.beginShape()
                                    this.layer.vertex(this.graphics.arms[g].middle.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)))
                                    this.layer.vertex(this.graphics.arms[g].middle.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)))
                                    this.layer.vertex(this.graphics.arms[g].bottom.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.225*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.34375,
                                        this.graphics.arms[g].bottom.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.225*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.34375)
                                    this.layer.vertex(this.graphics.arms[g].bottom.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.1125*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.5,
                                        this.graphics.arms[g].bottom.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.1125*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.5)
                                    this.layer.vertex(this.graphics.arms[g].bottom.x+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.34375,
                                        this.graphics.arms[g].bottom.y+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.34375)
                                    this.layer.vertex(this.graphics.arms[g].bottom.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.1125*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.5,
                                        this.graphics.arms[g].bottom.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.1125*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.5)
                                    this.layer.vertex(this.graphics.arms[g].bottom.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.225*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.34375,
                                        this.graphics.arms[g].bottom.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.225*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.34375)
                                    this.layer.endShape()
                                }else{
                                    this.layer.quad(
                                        this.graphics.arms[g].middle.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].bottom.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.24*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)/8,
                                        this.graphics.arms[g].bottom.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.24*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)/8,
                                        this.graphics.arms[g].bottom.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.24*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)/8,
                                        this.graphics.arms[g].bottom.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.24*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)/8
                                    )
                                }
                            }
                        }
                        for(let h=0;h<2;h++){
                            if((g==0&&h==0||g==1&&h==1)&&lcos(this.spin.legs[0].bottom+this.anim.direction)<=lcos(this.spin.legs[1].bottom+this.anim.direction)||(g==0&&h==1||g==1&&h==0)&&lcos(this.spin.legs[0].bottom+this.anim.direction)>lcos(this.spin.legs[1].bottom+this.anim.direction)){
                                if(this.fades.sandal.back[h]>0&&this.trigger.display.sandal.back[h]){
                                    this.layer.translate(this.graphics.legs[h].sandal.back.x,this.graphics.legs[h].sandal.back.y+1.5)
                                    this.layer.scale(1.2,0.6)
                                    this.layer.rotate(-this.anim.direction+this.spin.sandal[h])
                                    if(this.trigger.display.extra.damage){
                                        this.layer.image(graphics.minor[20+h],-4*this.fades.sandal.back[h]*this.fade,-4*this.fades.sandal.back[h]*this.fade,8*this.fades.sandal.back[h]*this.fade,8*this.fades.sandal.back[h]*this.fade)
                                    }else{
                                        this.layer.image(graphics.minor[19],-4*this.fades.sandal.back[h]*this.fade,-4*this.fades.sandal.back[h]*this.fade,8*this.fades.sandal.back[h]*this.fade,8*this.fades.sandal.back[h]*this.fade)
                                    }
                                    this.layer.rotate(this.anim.direction-this.spin.sandal[h])
                                    this.layer.scale(5/6,5/3)
                                    this.layer.translate(-this.graphics.legs[h].sandal.back.x,-this.graphics.legs[h].sandal.back.y-1.5)
                                }
                                if(this.fades.sandal.front[h]>0&&this.trigger.display.sandal.front[h]){
                                    this.layer.translate(this.graphics.legs[h].sandal.front.x,this.graphics.legs[h].sandal.front.y+1.5)
                                    this.layer.scale(1.2,0.6)
                                    this.layer.rotate(-this.anim.direction+this.spin.sandal[h])
                                    for(let i=0;i<2;i++){
                                        if((lcos(this.anim.direction+65*(i*2-1)-this.spin.sandal[h])<=0.2&&this.trigger.display.mode.sandal.edge==0||i%2!=h&&this.trigger.display.mode.sandal.edge==1)){
                                            this.layer.image(graphics.minor[22+i],-4*this.fades.sandal.front[h]*this.fade,-4*this.fades.sandal.front[h]*this.fade,8*this.fades.sandal.front[h]*this.fade,8*this.fades.sandal.front[h]*this.fade)
                                        }
                                    }
                                    this.layer.rotate(this.anim.direction-this.spin.sandal[h])
                                    this.layer.scale(5/6,5/3)
                                    this.layer.translate(-this.graphics.legs[h].sandal.front.x,-this.graphics.legs[h].sandal.front.y-1.5)
                                }
                                if(this.trigger.display.skin.legs){
                                    this.layer.stroke(upColor(this.color.skin.legs,lcos(this.anim.direction+this.spin.legs[h].top)*10,[1,1,1])[0],upColor(this.color.skin.legs,lcos(this.anim.direction+this.spin.legs[h].top)*10,[1,1,1])[1],upColor(this.color.skin.legs,lcos(this.anim.direction+this.spin.legs[h].top)*10,[1,1,1])[2],this.fade*this.fades.skin.legs)
                                    this.layer.strokeWeight(4)
                                    this.layer.line(this.graphics.legs[h].top.x,this.graphics.legs[h].top.y,this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y)
                                    this.layer.line(this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y,this.graphics.legs[h].bottom.x,this.graphics.legs[h].bottom.y)
                                }
                                if(this.fades.sandal.front[h]>0&&this.trigger.display.sandal.front[h]){
                                    this.layer.translate(this.graphics.legs[h].sandal.front.x,this.graphics.legs[h].sandal.front.y+1.5)
                                    this.layer.scale(1.2,0.6)
                                    this.layer.rotate(-this.anim.direction+this.spin.sandal[h])
                                    for(let i=0;i<2;i++){
                                        if((lcos(this.anim.direction+65*(i*2-1)-this.spin.sandal[h])>0.2&&this.trigger.display.mode.sandal.edge==0||i%2==h&&this.trigger.display.mode.sandal.edge==1)){
                                            this.layer.image(graphics.minor[22+i],-4*this.fades.sandal.front[h]*this.fade,-4*this.fades.sandal.front[h]*this.fade,8*this.fades.sandal.front[h]*this.fade,8*this.fades.sandal.front[h]*this.fade)
                                        }
                                    }
                                    this.layer.rotate(this.anim.direction-this.spin.sandal[h])
                                    this.layer.scale(5/6,5/3)
                                    this.layer.translate(-this.graphics.legs[h].sandal.front.x,-this.graphics.legs[h].sandal.front.y-1.5)
                                }
                            }
                        }
                    }
                    if(this.trigger.display.sleeveDecoration){
                        this.layer.noStroke()
                        for(let g=0,lg=this.spin.sleeve.decoration.length;g<lg;g++){
                            if(lcos(this.spin.sleeve.decoration[g].spin+this.anim.direction)>=0.2&&lcos(this.spin.arms[this.spin.sleeve.decoration[g].part].top+this.anim.direction)<=-0.3&&!(this.trigger.display.extra.damage&&this.spin.sleeve.decoration[g].length>1.5)){
                                h=this.spin.sleeve.decoration[g].part
                                this.layer.push()
                                if(this.spin.sleeve.decoration[g].length>1){
                                    this.layer.translate(
                                        lerp(
                                            this.graphics.arms[h].middle.x-(this.graphics.arms[h].middle.y-this.graphics.arms[h].bottom.y)*0.18*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction),
                                            this.graphics.arms[h].bottom.x-(this.graphics.arms[h].middle.y-this.graphics.arms[h].bottom.y)*0.24*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)+(this.graphics.arms[h].middle.x-this.graphics.arms[h].bottom.x)/8,
                                            this.spin.sleeve.decoration[g].length-1
                                        )
                                        ,lerp(
                                            this.graphics.arms[h].middle.y+(this.graphics.arms[h].middle.x-this.graphics.arms[h].bottom.x)*0.18*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction),
                                            this.graphics.arms[h].bottom.y+(this.graphics.arms[h].middle.x-this.graphics.arms[h].bottom.x)*0.24*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)+(this.graphics.arms[h].middle.y-this.graphics.arms[h].bottom.y)/8,
                                            this.spin.sleeve.decoration[g].length-1
                                        ))
                                    this.layer.rotate(-atan2(
                                        ((this.graphics.arms[h].middle.x-(this.graphics.arms[h].middle.y-this.graphics.arms[h].bottom.y)*0.18*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction))-
                                        (this.graphics.arms[h].bottom.x-(this.graphics.arms[h].middle.y-this.graphics.arms[h].bottom.y)*0.24*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)+(this.graphics.arms[h].middle.x-this.graphics.arms[h].bottom.x)/8)),
                                        ((this.graphics.arms[h].middle.y+(this.graphics.arms[h].middle.x-this.graphics.arms[h].bottom.x)*0.18*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction))-
                                        (this.graphics.arms[h].bottom.y+(this.graphics.arms[h].middle.x-this.graphics.arms[h].bottom.x)*0.24*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)+(this.graphics.arms[h].middle.y-this.graphics.arms[h].bottom.y)/8))
                                    ))
                                }else{
                                    this.layer.translate(
                                        lerp(
                                            this.graphics.arms[h].top.x-(this.graphics.arms[h].top.y-this.graphics.arms[h].middle.y)*lerp(0.3*constrain(lcos(this.spin.arms[h].top+this.anim.direction),0.2,0.5),0.15,this.spin.sleeve.decoration[g].length)*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)-(this.graphics.arms[h].top.x-this.graphics.arms[h].middle.x)*3/8,
                                            this.graphics.arms[h].middle.x-(this.graphics.arms[h].top.y-this.graphics.arms[h].middle.y)*0.18*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction),
                                            this.spin.sleeve.decoration[g].length
                                        )
                                        ,lerp(
                                            this.graphics.arms[h].top.y+(this.graphics.arms[h].top.x-this.graphics.arms[h].middle.x)*lerp(0.3*constrain(lcos(this.spin.arms[h].top+this.anim.direction),0.2,0.5),0.15,this.spin.sleeve.decoration[g].length)*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)-(this.graphics.arms[h].top.y-this.graphics.arms[h].middle.y)*3/8,
                                            this.graphics.arms[h].middle.y+(this.graphics.arms[h].top.x-this.graphics.arms[h].middle.x)*0.18*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction),
                                            this.spin.sleeve.decoration[g].length
                                        ))
                                    this.layer.rotate(-atan2(
                                        ((this.graphics.arms[h].top.x-(this.graphics.arms[h].top.y-this.graphics.arms[h].middle.y)*lerp(0.3*constrain(lcos(this.spin.arms[h].top+this.anim.direction),0.2,0.5),0.15,this.spin.sleeve.decoration[g].length)*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)-(this.graphics.arms[h].top.x-this.graphics.arms[h].middle.x)*3/8)-
                                        (this.graphics.arms[h].middle.x-(this.graphics.arms[h].top.y-this.graphics.arms[h].middle.y)*0.18*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction))),
                                        ((this.graphics.arms[h].top.y+(this.graphics.arms[h].top.x-this.graphics.arms[h].middle.x)*lerp(0.3*constrain(lcos(this.spin.arms[h].top+this.anim.direction),0.2,0.5),0.15,this.spin.sleeve.decoration[g].length)*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)-(this.graphics.arms[h].top.y-this.graphics.arms[h].middle.y)*3/8)-
                                        (this.graphics.arms[h].middle.y+(this.graphics.arms[h].top.x-this.graphics.arms[h].middle.x)*0.18*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)))
                                    ))
                                }
                                this.layer.scale(lcos(this.spin.sleeve.decoration[g].spin+this.anim.direction)*1.25-0.25,1)
                                this.layer.rotate(this.spin.sleeve.decoration[g].rotate)
                                this.minorDisplay(this.spin.sleeve.decoration[g].type,0,this.layer)
                                this.layer.pop()
                            }
                        }
                    }
                    if(this.trigger.display.under.under.top&&lcos(this.spin.under.under.top[0]+this.anim.direction)>0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,lcos(this.spin.under.under.top[0]+this.anim.direction)))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,lcos(this.spin.under.under.top[0]+this.anim.direction)))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,lcos(this.spin.under.under.top[0]+this.anim.direction)))[2],this.fade*this.fades.under.under.top)
                        this.layer.ellipse(lsin(this.spin.under.under.top[0]+this.anim.direction)*4.2,-50,lcos(this.spin.under.under.top[0]+this.anim.direction)*3.5+2.5,6)
                    }
                    if(this.trigger.display.under.under.top&&lcos(this.spin.under.under.top[1]+this.anim.direction)>0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,lcos(this.spin.under.under.top[1]+this.anim.direction)))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,lcos(this.spin.under.under.top[1]+this.anim.direction)))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,lcos(this.spin.under.under.top[1]+this.anim.direction)))[2],this.fade*this.fades.under.under.top)
                        this.layer.ellipse(lsin(this.spin.under.under.top[1]+this.anim.direction)*4.2,-50,lcos(this.spin.under.under.top[1]+this.anim.direction)*3.5+2.5,6)
                    }
                    if(this.trigger.display.under.under.button&&lcos(this.spin.under.under.button[0]+this.anim.direction)>0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,lcos(this.spin.under.under.button[0]+this.anim.direction)/4+0.75))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,lcos(this.spin.under.under.button[0]+this.anim.direction)/4+0.75))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,lcos(this.spin.under.under.button[0]+this.anim.direction)/4+0.75))[2],this.fade*this.fades.under.under.button)
                        this.layer.ellipse(lsin(this.spin.under.under.button[0]+this.anim.direction)*5.75,-49.5,lcos(this.spin.under.under.button[0]+this.anim.direction)*0.25+1,1.25)
                    }
                    if(this.trigger.display.under.under.button&&lcos(this.spin.under.under.button[1]+this.anim.direction)>0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,lcos(this.spin.under.under.button[1]+this.anim.direction)/4+0.75))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,lcos(this.spin.under.under.button[1]+this.anim.direction)/4+0.75))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.button,lcos(this.spin.under.under.button[1]+this.anim.direction)/4+0.75))[2],this.fade*this.fades.under.under.button)
                        this.layer.ellipse(lsin(this.spin.under.under.button[1]+this.anim.direction)*5.75,-49.5,lcos(this.spin.under.under.button[1]+this.anim.direction)*0.25+1,1.25)
                    }
                    if(this.trigger.display.under.shawl){
                        this.layer.fill(this.color.under.shawl[0],this.color.under.shawl[1],this.color.under.shawl[2],this.fade*this.fades.under.shawl)
                        this.layer.noStroke()
                        this.layer.quad(-5.25*this.anim.under.top.x,this.parts.under.top+3*this.anim.under.top.y,5.25*this.anim.under.top.x,this.parts.under.top+3*this.anim.under.top.y,6*this.anim.under.top.x,this.parts.under.top+5*this.anim.under.top.y,-6*this.anim.under.top.x,this.parts.under.top+5*this.anim.under.top.y,)
                        for(let g=0,lg=this.spin.under.shawl.length;g<lg;g++){
                            if(lcos(this.spin.under.shawl[g]+this.anim.direction)>0){
                                this.layer.arc(6*lsin(this.spin.under.shawl[g]+this.anim.direction)*this.anim.under.top.x,this.parts.under.top+5*this.anim.under.top.y,3*lcos(this.spin.under.shawl[g]+this.anim.direction)*this.anim.under.top.x,2*this.anim.under.top.y,0,180)
                            }
                        }
                    }
                    if(this.trigger.display.under.top){
                        this.sprites.temp=createGraphics(80,80)
                        setupLayer(this.sprites.temp)
                        this.sprites.temp.translate(40,0)
                        this.sprites.temp.noStroke()
                        this.sprites.temp.fill(this.color.under.outside[0],this.color.under.outside[1],this.color.under.outside[2],this.fade*this.fades.under.top)
                        for(let g=0;g<2;g++){
                            if(lcos(this.spin.under.under.top[g]+this.anim.direction)){
                                if(lsin(this.spin.under.under.top[g]+this.anim.direction+27)*9-lsin(this.spin.under.under.top[g]+this.anim.direction)*6>0){
                                    this.sprites.temp.arc(lsin(this.spin.under.under.top[g]+this.anim.direction)*18,70,lsin(this.spin.under.under.top[g]+this.anim.direction+27)*36-lsin(this.spin.under.under.top[g]+this.anim.direction)*24,60,-90,0)
                                    this.sprites.temp.ellipse(lsin(this.spin.under.under.top[g]+this.anim.direction)*18,70,4,60)
                                }
                                if(lsin(this.spin.under.under.top[g]+this.anim.direction)*6-lsin(this.spin.under.under.top[g]+this.anim.direction-27)*9>0){
                                    this.sprites.temp.arc(lsin(this.spin.under.under.top[g]+this.anim.direction)*18,70,lsin(this.spin.under.under.top[g]+this.anim.direction)*24-lsin(this.spin.under.under.top[g]+this.anim.direction-27)*36,60,-180,-90)
                                    this.sprites.temp.ellipse(lsin(this.spin.under.under.top[g]+this.anim.direction)*18,70,4,60)
                                }
                            }
                        }
                        this.sprites.temp.rect(0,59,42,2)
                        this.sprites.temp.erase()
                        this.sprites.temp.rect(0,70,80,20)
                        this.layer.image(this.sprites.temp,-10*this.anim.under.top.x,this.parts.under.top-12*this.anim.under.top.y,20*this.anim.under.top.x,20*this.anim.under.top.y)
                        this.layer.noStroke()
                        this.layer.fill(this.color.under.outside[0],this.color.under.outside[1],this.color.under.outside[2],this.fade*this.fades.under.top)
                        if(this.trigger.display.under.under.button&&lcos(this.spin.under.under.button[0]+this.anim.direction)>-0.4){
                            this.layer.ellipse(lsin(this.spin.under.under.button[0]+this.anim.direction)*5.5,-49.5,lcos(this.spin.under.under.button[0]+this.anim.direction)*0.25+1,1.5)
                        }
                        if(this.trigger.display.under.under.button&&lcos(this.spin.under.under.button[1]+this.anim.direction)>-0.4){
                            this.layer.ellipse(lsin(this.spin.under.under.button[1]+this.anim.direction)*5.5,-49.5,lcos(this.spin.under.under.button[1]+this.anim.direction)*0.25+1,1.5)
                        }
                        for(let g=0;g<2;g++){
                            for(let h=0,lh=this.color.under.fringe.length;h<lh;h++){
                                this.layer.fill(this.color.under.fringe[h][0],this.color.under.fringe[h][1],this.color.under.fringe[h][2],this.fade)
                                this.layer.noStroke()
                                for(let i=0,li=this.spin.under.top[h][g].length;i<li;i++){
                                    if(lcos(this.spin.under.top[h][g][i]+this.anim.direction)>0){
                                        this.layer.ellipse((5.6-h*0.2)*lsin(this.spin.under.top[h][g][i]+this.anim.direction)*this.anim.under.top.x,this.parts.under.top+(1-h*0.6)*this.anim.under.top.y,lcos(this.spin.under.top[h][g][i]+this.anim.direction)*1.5*this.anim.under.top.x,1.2*this.anim.under.top.y)
                                    }
                                }
                            }
                        }
                    }
                    if(this.trigger.display.under.under.bottom&&lcos(this.spin.under.under.bottom[0]+this.anim.direction)>0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.bottom[0],lcos(this.spin.under.under.bottom[0]+this.anim.direction)))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.bottom[0],lcos(this.spin.under.under.bottom[0]+this.anim.direction)))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.bottom[0],lcos(this.spin.under.under.bottom[0]+this.anim.direction)))[2],this.fade*this.fades.under.under.bottom)
                        this.layer.beginShape()
                        this.layer.vertex(lsin(this.spin.under.under.bottom[0]+this.anim.direction)*3.5,-35)
                        this.layer.bezierVertex(lsin(this.spin.under.under.bottom[0]+this.anim.direction)*2.75,-33.5,lsin(this.spin.under.under.bottom[1]*this.anim.under.under.bottom+this.anim.direction)*2.75,-34,lsin(this.spin.under.under.bottom[1]*this.anim.under.under.bottom+this.anim.direction)*2.5,-33)
                        this.layer.bezierVertex(lsin(this.spin.under.under.bottom[1]*this.anim.under.under.bottom+this.anim.direction)*2.25,-32,lsin(this.spin.under.under.bottom[0]+this.anim.direction)*2.25,-32.5,lsin(this.spin.under.under.bottom[0]+this.anim.direction)*1.5,-31)
                        this.layer.bezierVertex(lsin(this.spin.under.under.bottom[0]+this.anim.direction)*2.25,-32.5,lsin(this.spin.under.under.bottom[2]*this.anim.under.under.bottom+this.anim.direction)*2.25,-32,lsin(this.spin.under.under.bottom[2]*this.anim.under.under.bottom+this.anim.direction)*2.5,-33)
                        this.layer.bezierVertex(lsin(this.spin.under.under.bottom[2]*this.anim.under.under.bottom+this.anim.direction)*2.75,-34,lsin(this.spin.under.under.bottom[0]+this.anim.direction)*2.75,-33.5,lsin(this.spin.under.under.bottom[0]+this.anim.direction)*3.5,-35)
                        this.layer.endShape()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.bottom[1],lcos(this.spin.under.under.bottom[0]+this.anim.direction)))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.bottom[1],lcos(this.spin.under.under.bottom[0]+this.anim.direction)))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.bottom[1],lcos(this.spin.under.under.bottom[0]+this.anim.direction)))[2],this.fade*this.fades.under.under.bottom)
                        this.layer.beginShape()
                        this.layer.vertex(lsin(this.spin.under.under.bottom[0]+this.anim.direction)*3.5,-35)
                        this.layer.bezierVertex(lsin(this.spin.under.under.bottom[0]+this.anim.direction)*2.75,-33.5,lsin(this.spin.under.under.bottom[3]*this.anim.under.under.bottom+this.anim.direction)*2.75,-34,lsin(this.spin.under.under.bottom[3]*this.anim.under.under.bottom+this.anim.direction)*2.5,-33)
                        this.layer.bezierVertex(lsin(this.spin.under.under.bottom[3]*this.anim.under.under.bottom+this.anim.direction)*2.25,-32,lsin(this.spin.under.under.bottom[0]+this.anim.direction)*2.25,-32.5,lsin(this.spin.under.under.bottom[0]+this.anim.direction)*1.5,-31)
                        this.layer.bezierVertex(lsin(this.spin.under.under.bottom[0]+this.anim.direction)*2.25,-32.5,lsin(this.spin.under.under.bottom[4]*this.anim.under.under.bottom+this.anim.direction)*2.25,-32,lsin(this.spin.under.under.bottom[4]*this.anim.under.under.bottom+this.anim.direction)*2.5,-33)
                        this.layer.bezierVertex(lsin(this.spin.under.under.bottom[4]*this.anim.under.under.bottom+this.anim.direction)*2.75,-34,lsin(this.spin.under.under.bottom[0]+this.anim.direction)*2.75,-33.5,lsin(this.spin.under.under.bottom[0]+this.anim.direction)*3.5,-35)
                        this.layer.endShape()
                    }
                    if(this.trigger.display.under.tanga){
                        this.sprites.temp=createGraphics(40,40)
                        setupLayer(this.sprites.temp)
                        this.sprites.temp.noStroke()
                        this.sprites.temp.fill(this.color.under.tanga[0],this.color.under.tanga[1],this.color.under.tanga[2],this.fade*this.fades.under.tanga)
                        if(abs(this.anim.direction)<this.spin.under.tanga){
                            this.sprites.temp.arc(20,2,20*lsin(this.anim.direction+this.spin.under.tanga),42,0,90)
                            this.sprites.temp.arc(20,2,20*lsin(this.anim.direction-this.spin.under.tanga),42,90,180)
                        }else if(this.anim.direction>=this.spin.under.tanga&&this.anim.direction<(this.spin.under.tanga+90)){
                            this.sprites.temp.arc(20,2,20*lsin(this.anim.direction+this.spin.under.tanga),42,0,90)
                        }else if(this.anim.direction<=-this.spin.under.tanga&&this.anim.direction>-(this.spin.under.tanga+90)){
                            this.sprites.temp.arc(20,2,20*lsin(this.anim.direction-this.spin.under.tanga),42,90,180)
                        }
                        if(abs(this.anim.direction)>=(180-this.spin.under.tanga)){
                            this.sprites.temp.arc(20,2,20*lsin(this.anim.direction-(180-this.spin.under.tanga)),42,0,90)
                            this.sprites.temp.arc(20,2,20*lsin(this.anim.direction+(180-this.spin.under.tanga)),42,90,180)
                        }else if(this.anim.direction>=-(180-this.spin.under.tanga)&&this.anim.direction<-(90-this.spin.under.tanga)){
                            this.sprites.temp.arc(20,2,20*lsin(this.anim.direction-(180-this.spin.under.tanga)),42,0,90)
                        }else if(this.anim.direction<=(180-this.spin.under.tanga)&&this.anim.direction>(90-this.spin.under.tanga)){
                            this.sprites.temp.arc(20,2,20*lsin(this.anim.direction+(180-this.spin.under.tanga)),42,90,180)
                        }
                        this.sprites.temp.erase()
                        this.sprites.temp.rect(20,6,40,11)
                        if(this.anim.direction>=this.spin.under.tanga&&this.anim.direction<(this.spin.under.tanga+90)){
                            this.sprites.temp.arc(20,2,20*lsin(this.anim.direction-this.spin.under.tanga),42,0,90)
                        }else if(this.anim.direction<=-this.spin.under.tanga&&this.anim.direction>-(this.spin.under.tanga+90)){
                            this.sprites.temp.arc(20,2,20*lsin(this.anim.direction+this.spin.under.tanga),42,90,180)
                        }
                        if(this.anim.direction>=-(180-this.spin.under.tanga)&&this.anim.direction<-(90-this.spin.under.tanga)){
                            this.sprites.temp.arc(20,2,20*lsin(this.anim.direction+(180-this.spin.under.tanga)),42,0,90)
                        }else if(this.anim.direction<=(180-this.spin.under.tanga)&&this.anim.direction>(90-this.spin.under.tanga)){
                            this.sprites.temp.arc(20,2,20*lsin(this.anim.direction-(180-this.spin.under.tanga)),42,90,180)
                        }
                        this.sprites.temp.noErase()
                        this.sprites.temp.rect(20,11,18,1/this.anim.under.bottom.y)
                        if(this.anim.under.bottom.y<=0){
                            this.layer.push()
                            this.layer.translate(0,this.parts.under.bottom-6*this.anim.under.bottom.y)
                            this.layer.scale(1,-1)
                            this.layer.image(this.sprites.temp,-10*this.anim.under.bottom.x,-5,20*this.anim.under.bottom.x,20*abs(this.anim.under.bottom.y))
                            this.layer.pop()
                        }else{
                            this.layer.image(this.sprites.temp,-10*this.anim.under.bottom.x,this.parts.under.bottom-6*this.anim.under.bottom.y-5,20*this.anim.under.bottom.x,20*abs(this.anim.under.bottom.y))
                        }
                    }
                    if(this.trigger.display.under.bottom){
                        this.sprites.temp=createGraphics(80,90)
                        setupLayer(this.sprites.temp)
                        this.sprites.temp.scale(2)
                        this.sprites.temp.fill(this.color.under.outside[0],this.color.under.outside[1],this.color.under.outside[2],this.fade*this.fades.under.bottom)
                        this.sprites.temp.noStroke()
                        if(abs(this.anim.direction)<this.spin.under.piece){
                            this.sprites.temp.arc(20,2,18*lsin(this.anim.direction+this.spin.under.piece),44,0,90)
                            this.sprites.temp.arc(20,2,18*lsin(this.anim.direction-this.spin.under.piece),44,90,180)
                        }else if(this.anim.direction<180-this.spin.under.piece&&this.anim.direction>0){
                            this.sprites.temp.arc(20,2,18,44,0,90)
                        }else if(this.anim.direction>-180+this.spin.under.piece&&this.anim.direction<0){
                            this.sprites.temp.arc(20,2,18,44,90,180)
                        }
                        if(abs(this.anim.direction)>=(180-this.spin.under.piece)){
                            this.sprites.temp.arc(20,2,18*lsin(this.anim.direction-(180-this.spin.under.piece)),44,0,90)
                            this.sprites.temp.arc(20,2,18*lsin(this.anim.direction+(180-this.spin.under.piece)),44,90,180)
                        }else if(this.anim.direction<=-this.spin.under.piece&&this.anim.direction>=-180){
                            this.sprites.temp.arc(20,2,18,44,0,90)
                        }else if(this.anim.direction>=this.spin.under.piece&&this.anim.direction<=180){
                            this.sprites.temp.arc(20,2,18,44,90,190)
                        }
                        this.sprites.temp.erase()
                        this.sprites.temp.rect(20,6,40,15)
                        if(this.anim.direction<180-this.spin.under.piece&&this.anim.direction>this.spin.under.piece){
                            this.sprites.temp.arc(20,2,18*lsin(this.anim.direction-this.spin.under.piece),44,0,90)
                        }else if(this.anim.direction>-180+this.spin.under.piece&&this.anim.direction<-this.spin.under.piece){
                            this.sprites.temp.arc(20,2,18*lsin(this.anim.direction+this.spin.under.piece),44,90,180)
                        }
                        if(this.anim.direction>-180+this.spin.under.piece&&this.anim.direction<=-this.spin.under.piece){
                            this.sprites.temp.arc(20,2,18*lsin(this.anim.direction-this.spin.under.piece),44,0,90)
                        }else if(this.anim.direction<180-this.spin.under.piece&&this.anim.direction>=this.spin.under.piece){
                            this.sprites.temp.arc(20,2,18*lsin(this.anim.direction+this.spin.under.piece),44,90,180)
                        }
                        this.sprites.temp.noErase()
                        if(this.anim.under.bottom.y<=0){
                            this.layer.push()
                            this.layer.translate(0,this.parts.under.bottom-7*this.anim.under.bottom.y)
                            this.layer.scale(1,-1)
                            this.layer.image(this.sprites.temp,-10*this.anim.under.bottom.x,-5,20*this.anim.under.bottom.x,22.5*abs(this.anim.under.bottom.y))
                            this.layer.pop()
                        }else{
                            this.layer.image(this.sprites.temp,-10*this.anim.under.bottom.x,this.parts.under.bottom-7*this.anim.under.bottom.y-5,20*this.anim.under.bottom.x,22.5*abs(this.anim.under.bottom.y))
                        }
                        for(let h=0,lh=this.color.under.fringe.length;h<lh;h++){
                            this.layer.fill(this.color.under.fringe[h][0],this.color.under.fringe[h][1],this.color.under.fringe[h][2],this.fade)
                            this.layer.noStroke()
                            for(let g=0,lg=this.spin.under.bottom[h].length;g<lg;g++){
                                if(lcos(this.spin.under.bottom[h][g]+this.anim.direction)>0){
                                    if(h==lh-1){
                                        this.layer.arc((3.6+h*0.1)*lsin(this.spin.under.bottom[h][g]+this.anim.direction)*this.anim.under.bottom.x,this.parts.under.bottom-(3.6+h*0.4)*this.anim.under.bottom.y,lcos(this.spin.under.bottom[h][g]+this.anim.direction)*2*this.anim.under.bottom.x,1.6*this.anim.under.bottom.y,0,180)
                                    }else{
                                        this.layer.ellipse((3.6+h*0.1)*lsin(this.spin.under.bottom[h][g]+this.anim.direction)*this.anim.under.bottom.x,this.parts.under.bottom-(3.6+h*0.4)*this.anim.under.bottom.y,lcos(this.spin.under.bottom[h][g]+this.anim.direction)*2*this.anim.under.bottom.x,1.6*this.anim.under.bottom.y)
                                    }
                                }
                            }
                        }
                        this.layer.fill(this.color.under.outside[0],this.color.under.outside[1],this.color.under.outside[2],this.fade*this.fades.under.bottom)
                        this.layer.noStroke()
                        this.layer.rect(0,this.parts.under.bottom-5.5,8.5,0.5/this.anim.under.bottom.y)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.under.bow.top[g]){
                            this.layer.fill(this.color.under.bow.extra[0],this.color.under.bow.extra[1],this.color.under.bow.extra[2],this.fade*this.fades.under.bow.top[g])
                            this.layer.stroke(this.color.under.bow.extra[0],this.color.under.bow.extra[1],this.color.under.bow.extra[2],this.fade*this.fades.under.bow.top[g])
                            this.layer.strokeWeight(0.3)
                            this.layer.strokeJoin(ROUND)
                            if(lcos(this.spin.underBow.top[g].center/2+this.spin.underBow.top[g].loop[0]/2+this.anim.direction)>0){
                                this.layer.triangle(
                                    lsin(this.spin.underBow.top[g].center+this.anim.direction)*5*this.anim.under.bow.top[g].position.x,this.parts.under.top+this.parts.under.bow.top[g]*this.anim.under.bow.top[g].position.y,
                                    lsin(this.spin.underBow.top[g].loop[0]+this.anim.direction)*5*this.anim.under.bow.top[g].position.x,this.parts.under.top+(this.parts.under.bow.top[g]-0.3)*this.anim.under.bow.top[g].position.y,
                                    lsin(this.spin.underBow.top[g].loop[0]+this.anim.direction)*5*this.anim.under.bow.top[g].position.x,this.parts.under.top+(this.parts.under.bow.top[g]+0.3)*this.anim.under.bow.top[g].position.y
                                )
                            }
                            if(lcos(this.spin.underBow.top[g].center/2+this.spin.underBow.top[g].loop[1]/2+this.anim.direction)>0){
                                this.layer.triangle(
                                    lsin(this.spin.underBow.top[g].center+this.anim.direction)*5*this.anim.under.bow.top[g].position.x,this.parts.under.top+this.parts.under.bow.top[g]*this.anim.under.bow.top[g].position.y,
                                    lsin(this.spin.underBow.top[g].loop[1]+this.anim.direction)*5*this.anim.under.bow.top[g].position.x,this.parts.under.top+(this.parts.under.bow.top[g]-0.3)*this.anim.under.bow.top[g].position.y,
                                    lsin(this.spin.underBow.top[g].loop[1]+this.anim.direction)*5*this.anim.under.bow.top[g].position.x,this.parts.under.top+(this.parts.under.bow.top[g]+0.3)*this.anim.under.bow.top[g].position.y
                                )
                            }
                            this.layer.noFill()
                            if(lcos(this.spin.underBow.top[g].center/2+this.spin.underBow.top[g].end[0]/2+this.anim.direction)>0){
                                this.layer.line(lsin(this.spin.underBow.top[g].center+this.anim.direction)*5*this.anim.under.bow.top[g].position.x,this.parts.under.top+this.parts.under.bow.top[g]*this.anim.under.bow.top[g].position.y,lsin(this.spin.underBow.top[g].end[0]*this.anim.under.bow.top[g].size.x/this.anim.under.bow.top[g].position.x+this.anim.direction)*(5*this.anim.under.bow.top[g].position.x+0.25*this.anim.under.bow.top[g].size.x),this.parts.under.top+this.parts.under.bow.top[g]*this.anim.under.bow.top[g].position.y+0.9*this.anim.under.bow.top[g].size.y)
                            }
                            if(lcos(this.spin.underBow.top[g].center/2+this.spin.underBow.top[g].end[1]/2+this.anim.direction)>0){
                                this.layer.line(lsin(this.spin.underBow.top[g].center+this.anim.direction)*5*this.anim.under.bow.top[g].position.x,this.parts.under.top+this.parts.under.bow.top[g]*this.anim.under.bow.top[g].position.y,lsin(this.spin.underBow.top[g].end[1]*this.anim.under.bow.top[g].size.x/this.anim.under.bow.top[g].position.x+this.anim.direction)*(5*this.anim.under.bow.top[g].position.x+0.25*this.anim.under.bow.top[g].size.x),this.parts.under.top+this.parts.under.bow.top[g]*this.anim.under.bow.top[g].position.y+0.9*this.anim.under.bow.top[g].size.y)
                            }
                            this.layer.strokeJoin(MITER)
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.under.bow.bottom[g]){
                            this.layer.fill(this.color.under.bow.main[0],this.color.under.bow.main[1],this.color.under.bow.main[2],this.fade*this.fades.under.bow.bottom[g])
                            this.layer.stroke(this.color.under.bow.main[0],this.color.under.bow.main[1],this.color.under.bow.main[2],this.fade*this.fades.under.bow.bottom[g])
                            this.layer.strokeWeight(0.3)
                            if(lcos(this.spin.underBow.bottom[g].loop[0]+this.anim.direction)>0&&lcos(this.spin.underBow.bottom[g].center+this.anim.direction)>0){
                                this.layer.quad(
                                    lsin(this.spin.underBow.bottom[g].center+this.anim.direction)*4.5*this.anim.under.bow.bottom[g].position.x,this.parts.under.bottom+this.parts.under.bow.bottom[g]*this.anim.under.bow.bottom[g].position.y,
                                    lsin(this.spin.underBow.bottom[g].loop[0]/2+this.spin.underBow.bottom[g].center/2+this.anim.direction)*4.5*this.anim.under.bow.bottom[g].position.x,this.parts.under.bottom+(this.parts.under.bow.bottom[g]-0.7)*this.anim.under.bow.bottom[g].position.y,
                                    lsin(this.spin.underBow.bottom[g].loop[0]+this.anim.direction)*4.5*this.anim.under.bow.bottom[g].position.x,this.parts.under.bottom+(this.parts.under.bow.bottom[g]-0.8)*this.anim.under.bow.bottom[g].position.y,
                                    lsin(this.spin.underBow.bottom[g].loop[0]/2+this.spin.underBow.bottom[g].center/2+this.anim.direction)*4.5*this.anim.under.bow.bottom[g].position.x,this.parts.under.bottom+(this.parts.under.bow.bottom[g]-0.1)*this.anim.under.bow.bottom[g].position.y
                                )
                            }
                            if(lcos(this.spin.underBow.bottom[g].loop[1]+this.anim.direction)>0&&lcos(this.spin.underBow.bottom[g].center+this.anim.direction)>0){
                                this.layer.quad(
                                    lsin(this.spin.underBow.bottom[g].center+this.anim.direction)*4.5*this.anim.under.bow.bottom[g].position.x,this.parts.under.bottom+this.parts.under.bow.bottom[g]*this.anim.under.bow.bottom[g].position.y,
                                    lsin(this.spin.underBow.bottom[g].loop[1]/2+this.spin.underBow.bottom[g].center/2+this.anim.direction)*4.5*this.anim.under.bow.bottom[g].position.x,this.parts.under.bottom+(this.parts.under.bow.bottom[g]-0.7)*this.anim.under.bow.bottom[g].position.y,
                                    lsin(this.spin.underBow.bottom[g].loop[1]+this.anim.direction)*4.5*this.anim.under.bow.bottom[g].position.x,this.parts.under.bottom+(this.parts.under.bow.bottom[g]-0.8)*this.anim.under.bow.bottom[g].position.y,
                                    lsin(this.spin.underBow.bottom[g].loop[1]/2+this.spin.underBow.bottom[g].center/2+this.anim.direction)*4.5*this.anim.under.bow.bottom[g].position.x,this.parts.under.bottom+(this.parts.under.bow.bottom[g]-0.1)*this.anim.under.bow.bottom[g].position.y
                                )
                            }
                        }
                    }
                    if(this.trigger.display.under.bow.extra){
                        this.layer.fill(this.color.under.bow.main[0],this.color.under.bow.main[1],this.color.under.bow.main[2],this.fade*this.fades.under.bow.extra)
                        this.layer.stroke(this.color.under.bow.main[0],this.color.under.bow.main[1],this.color.under.bow.main[2],this.fade*this.fades.under.bow.extra)
                        this.layer.strokeWeight(0.3)
                        if(lcos(this.spin.underBow.extra.loop[0]+this.anim.direction)>0&&lcos(this.spin.underBow.extra.center+this.anim.direction)>0){
                            this.layer.quad(
                                lsin(this.spin.underBow.extra.center+this.anim.direction)*4.5*this.anim.under.bow.extra.position.x,this.parts.under.top+this.parts.under.bow.extra*this.anim.under.bow.extra.position.y,
                                lsin(this.spin.underBow.extra.loop[0]/2+this.spin.underBow.extra.center/2+this.anim.direction)*4.5*this.anim.under.bow.extra.position.x,this.parts.under.top+(this.parts.under.bow.extra-0.7)*this.anim.under.bow.extra.position.y,
                                lsin(this.spin.underBow.extra.loop[0]+this.anim.direction)*4.5*this.anim.under.bow.extra.position.x,this.parts.under.top+(this.parts.under.bow.extra-0.8)*this.anim.under.bow.extra.position.y,
                                lsin(this.spin.underBow.extra.loop[0]/2+this.spin.underBow.extra.center/2+this.anim.direction)*4.5*this.anim.under.bow.extra.position.x,this.parts.under.top+(this.parts.under.bow.extra-0.1)*this.anim.under.bow.extra.position.y
                            )
                        }
                        if(lcos(this.spin.underBow.extra.loop[1]+this.anim.direction)>0&&lcos(this.spin.underBow.extra.center+this.anim.direction)>0){
                            this.layer.quad(
                                lsin(this.spin.underBow.extra.center+this.anim.direction)*4.5*this.anim.under.bow.extra.position.x,this.parts.under.top+this.parts.under.bow.extra*this.anim.under.bow.extra.position.y,
                                lsin(this.spin.underBow.extra.loop[1]/2+this.spin.underBow.extra.center/2+this.anim.direction)*4.5*this.anim.under.bow.extra.position.x,this.parts.under.top+(this.parts.under.bow.extra-0.7)*this.anim.under.bow.extra.position.y,
                                lsin(this.spin.underBow.extra.loop[1]+this.anim.direction)*4.5*this.anim.under.bow.extra.position.x,this.parts.under.top+(this.parts.under.bow.extra-0.8)*this.anim.under.bow.extra.position.y,
                                lsin(this.spin.underBow.extra.loop[1]/2+this.spin.underBow.extra.center/2+this.anim.direction)*4.5*this.anim.under.bow.extra.position.x,this.parts.under.top+(this.parts.under.bow.extra-0.1)*this.anim.under.bow.extra.position.y
                            )
                        }
                    }
                    if(this.trigger.display.kimono.main.front){
                        if(this.trigger.display.extra.damage){
                            this.layer.image(graphics.combatant[10].sprites.kimono.mainDamage.front[this.sprites.spinDetail],-20*this.fade*this.fades.kimono.main.front.x,this.parts.kimono.main-15*this.fades.kimono.main.front.y,40*this.fade*this.fades.kimono.main.front.x,66*this.fade*this.fades.kimono.main.front.y)
                        }else{
                            this.layer.image(graphics.combatant[10].sprites.kimono.main.front[this.sprites.spinDetail],-20*this.fade*this.fades.kimono.main.front.x,this.parts.kimono.main-15*this.fades.kimono.main.front.y,40*this.fade*this.fades.kimono.main.front.x,66*this.fade*this.fades.kimono.main.front.y)
                        }
                    }
                    if(this.trigger.display.wrap.round){
                        this.layer.strokeJoin(ROUND)
                        this.layer.strokeWeight(0.4)
                        this.layer.fill(this.color.wrap.in[0],this.color.wrap.in[1],this.color.wrap.in[2],this.fade*this.fades.wrap.round)
                        this.layer.stroke(this.color.wrap.out[0],this.color.wrap.out[1],this.color.wrap.out[2],this.fade*this.fades.wrap.round)
                        this.layer.quad(-6.6*this.fades.kimono.main.front.x,this.parts.kimono.main+13*this.fades.kimono.main.front.y,6.6*this.fades.kimono.main.front.x,this.parts.kimono.main+13*this.fades.kimono.main.front.y,7.1*this.fades.kimono.main.front.x,this.parts.kimono.main+16*this.fades.kimono.main.front.y,-7.1*this.fades.kimono.main.front.x,this.parts.kimono.main+16*this.fades.kimono.main.front.y)
                        this.layer.quad(-7.1*this.fades.kimono.main.front.x,this.parts.kimono.main+16*this.fades.kimono.main.front.y,7.1*this.fades.kimono.main.front.x,this.parts.kimono.main+16*this.fades.kimono.main.front.y,7.6*this.fades.kimono.main.front.x,this.parts.kimono.main+19*this.fades.kimono.main.front.y,-7.6*this.fades.kimono.main.front.x,this.parts.kimono.main+19*this.fades.kimono.main.front.y)
                        this.layer.fill(this.color.wrap.decoration[0],this.color.wrap.decoration[1],this.color.wrap.decoration[2],this.fade*this.fades.wrap.round)
                        this.layer.noStroke()
                        for(let g=0,lg=14;g<lg;g++){
                            if(lcos(360*g/lg+this.anim.direction)>0){
                                this.layer.push()
                                this.layer.translate(lsin(360*g/lg+this.anim.direction)*7.2*this.fades.kimono.main.front.x,this.parts.kimono.main+(17.75-3.5*(g%2))*this.fades.kimono.main.front.y)
                                this.layer.rotate(-8*lsin(360*g/lg+this.anim.direction))
                                this.layer.scale(lcos(360*g/lg+this.anim.direction),(g%2)*2-1)
                                for(let h=0;h<5;h++){
                                    this.layer.rotate(30)
                                    this.layer.ellipse(-0.7+h/30,0,1-h/30,0.4-h/60)
                                    this.layer.rotate(-60)
                                    this.layer.ellipse(0.7-h/30,0,1-h/30,0.4-h/60)
                                    this.layer.rotate(30)
                                    this.layer.translate(0,0.8)
                                }
                                this.layer.pop()
                            }
                        }
                        this.layer.strokeWeight(0.6)
                        this.layer.stroke(this.color.wrap.center[0],this.color.wrap.center[1],this.color.wrap.center[2],this.fade*this.fades.wrap.round)
                        this.layer.line(7.1*this.fades.kimono.main.front.x,this.parts.kimono.main+16*this.fades.kimono.main.front.y,-7.1*this.fades.kimono.main.front.x,this.parts.kimono.main+16*this.fades.kimono.main.front.y)
                        this.layer.strokeJoin(MITER)
                    }
                    if(this.trigger.display.wrap.bow){
                        this.layer.strokeJoin(ROUND)
                        this.layer.strokeWeight(0.3)
                        this.layer.fill(this.color.wrap.bow.in[0],this.color.wrap.bow.in[1],this.color.wrap.bow.in[2],this.fade*this.fades.wrap.bow)
                        this.layer.stroke(this.color.wrap.bow.out[0],this.color.wrap.bow.out[1],this.color.wrap.bow.out[2],this.fade*this.fades.wrap.bow)
                        this.layer.quad(-6.5*this.fades.kimono.main.front.x,this.parts.kimono.main+11.5*this.fades.kimono.main.front.y,6.5*this.fades.kimono.main.front.x,this.parts.kimono.main+11.5*this.fades.kimono.main.front.y,6.8*this.fades.kimono.main.front.x,this.parts.kimono.main+13*this.fades.kimono.main.front.y,-6.8*this.fades.kimono.main.front.x,this.parts.kimono.main+13*this.fades.kimono.main.front.y)
                    }
                    if(this.trigger.display.wrap.bow&&lcos(this.spin.wrap.bow+this.anim.direction)>0){
                        this.layer.strokeJoin(ROUND)
                        this.layer.strokeWeight(0.4)
                        this.layer.fill(this.color.wrap.bow.in[0],this.color.wrap.bow.in[1],this.color.wrap.bow.in[2],this.fade*this.fades.wrap.bow)
                        this.layer.stroke(this.color.wrap.bow.out[0],this.color.wrap.bow.out[1],this.color.wrap.bow.out[2],this.fade*this.fades.wrap.bow)
                        this.calc.int=[this.parts.kimono.main+(this.parts.wrap.bow-this.parts.kimono.main)*this.fades.kimono.main.front.y]
                        if(this.trigger.display.extra.damage){
                            this.layer.quad(lsin(this.spin.wrap.bow+this.anim.direction)*6.6*this.fades.kimono.main.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*6.9*this.fades.kimono.main.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*2.25,this.calc.int[0]+1.25,lsin(this.spin.wrap.bow+this.anim.direction)*6.1*this.fades.kimono.main.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*3.6,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*6.1*this.fades.kimono.main.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*2.25,this.calc.int[0]-1.25)
                            this.layer.quad(lsin(this.spin.wrap.bow+this.anim.direction)*6.6*this.fades.kimono.main.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*6.9*this.fades.kimono.main.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*2.25,this.calc.int[0]+1.25,lsin(this.spin.wrap.bow+this.anim.direction)*6.1*this.fades.kimono.main.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*3.6,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*6.1*this.fades.kimono.main.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*2.25,this.calc.int[0]-1.25)
                        }else{
                            this.layer.triangle(lsin(this.spin.wrap.bow+this.anim.direction)*6.6*this.fades.kimono.main.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*6.9*this.fades.kimono.main.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*3.6,this.calc.int[0]+2,lsin(this.spin.wrap.bow+this.anim.direction)*6.1*this.fades.kimono.main.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*3.6,this.calc.int[0]-2)
                            this.layer.triangle(lsin(this.spin.wrap.bow+this.anim.direction)*6.6*this.fades.kimono.main.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*6.9*this.fades.kimono.main.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*3.6,this.calc.int[0]+2,lsin(this.spin.wrap.bow+this.anim.direction)*6.1*this.fades.kimono.main.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*3.6,this.calc.int[0]-2)
                        }
                        this.layer.line(lsin(this.spin.wrap.bow+this.anim.direction)*6.6*this.fades.kimono.main.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*6.6*this.fades.kimono.main.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*2.4,this.calc.int[0]+0.5)
                        this.layer.line(lsin(this.spin.wrap.bow+this.anim.direction)*6.6*this.fades.kimono.main.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*6.6*this.fades.kimono.main.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*2.4,this.calc.int[0]+0.5)
                        this.layer.line(lsin(this.spin.wrap.bow+this.anim.direction)*6.6*this.fades.kimono.main.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*6.4*this.fades.kimono.main.front.x-lcos(this.spin.wrap.bow+this.anim.direction)*2.4,this.calc.int[0]-0.5)
                        this.layer.line(lsin(this.spin.wrap.bow+this.anim.direction)*6.6*this.fades.kimono.main.front.x,this.calc.int[0],lsin(this.spin.wrap.bow+this.anim.direction)*6.4*this.fades.kimono.main.front.x+lcos(this.spin.wrap.bow+this.anim.direction)*2.4,this.calc.int[0]-0.5)
                        this.layer.strokeJoin(MITER)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.extra.sword&&lcos(this.spin.arms[g].top+this.anim.direction)>0.4&&lcos(this.spin.arms[g].top+this.anim.direction)<0.6&&g==0){
                            this.minorDisplay(-1,g)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.3&&lcos(this.spin.arms[g].top+this.anim.direction)<0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                    }
                    if(this.trigger.display.kimono.bow&&lcos(this.anim.direction+this.spin.bow.center)>0){
                        this.layer.noFill()
                        this.layer.stroke(this.color.kimono.bow[0],this.color.kimono.bow[1],this.color.kimono.bow[2],this.fade*this.fades.kimono.bow)
                        this.layer.push()
                        this.layer.translate(lsin(this.anim.direction+this.spin.bow.center)*7,this.parts.kimono.bow)
                        this.layer.scale(lcos(this.anim.direction+this.spin.bow.center),1)
                        this.layer.strokeWeight(0.45)
                        this.layer.arc(0,2.5,1.6,5,-180,0)
                        this.layer.strokeWeight(0.3)
                        if(this.trigger.display.extra.damage){
                            this.layer.arc(-0.8,4.5,1,4,-120,-60)
                            this.layer.arc(0.8,4.5,1,4,-120,-60)
                            this.layer.line(-0.8,2.5,-0.8,4)
                            this.layer.line(0.8,2.5,0.8,4)
                        }else{
                            this.layer.arc(-0.8,4.5,1,4,-180,0)
                            this.layer.arc(0.8,4.5,1,4,-180,0)
                            this.layer.line(-0.8,2.5,-0.8,5)
                            this.layer.line(0.8,2.5,0.8,5)
                        }
                        this.layer.rotate(12)
                        if(!this.trigger.display.extra.damage){
                            this.layer.ellipse(-1.2,-1.2,2.4,2.4)
                            this.layer.ellipse(-1.2,1.2,2.4,2.4)
                            this.layer.ellipse(1.2,-1.2,2.4,2.4)
                            this.layer.ellipse(1.2,1.2,2.4,2.4)
                        }
                        this.layer.rotate(30)
                        this.layer.ellipse(-0.8,-0.8,1.6,1.6)
                        this.layer.ellipse(-0.8,0.8,1.6,1.6)
                        this.layer.ellipse(0.8,-0.8,1.6,1.6)
                        this.layer.ellipse(0.8,0.8,1.6,1.6)
                        this.layer.pop()
                    }
                    if(this.trigger.display.skin.head){
                        this.layer.fill(this.flashColor(this.color.skin.head)[0],this.flashColor(this.color.skin.head)[1],this.flashColor(this.color.skin.head)[2],this.fade*this.fades.skin.head)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-75,30,30)
                    }
                    if(this.trigger.display.skin.blush){
                        this.layer.fill(this.flashColor(this.color.skin.blush)[0],this.flashColor(this.color.skin.blush)[1],this.flashColor(this.color.skin.blush)[2],this.fade*this.fades.skin.blush*0.2)
                        for(let g=0;g<2;g++){
                            if(lcos(this.spin.blush[g]+this.anim.direction)>0){
                                this.layer.push()
                                this.layer.translate(13.5*lsin(this.spin.blush[g]+this.anim.direction),this.parts.blush)
                                this.layer.rotate(30*lsin(this.spin.blush[g]+this.anim.direction))
                                this.layer.ellipse(0,0,5*lcos(this.spin.blush[g]+this.anim.direction),4)
                                this.layer.ellipse(0,0,3.75*lcos(this.spin.blush[g]+this.anim.direction),3)
                                this.layer.ellipse(0,0,2.5*lcos(this.spin.blush[g]+this.anim.direction),2)
                                this.layer.ellipse(0,0,1.25*lcos(this.spin.blush[g]+this.anim.direction),1)
                                this.layer.pop()
                            }
                        }
                    }
                    if(this.trigger.display.mouth&&lcos(this.anim.direction)>0){
                        this.minorDisplayGeneral(1,0)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.extra.sword&&(lcos(this.spin.arms[g].top+this.anim.direction)>=0.6||lcos(this.spin.arms[g].bottom+this.anim.direction)>=0.3)&&g==0){
                            this.minorDisplay(-1,g)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>=0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].bottom+this.anim.direction)>=0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        if(this.trigger.display.sleeve&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.3){
                            this.layer.noStroke()
                            for(let h=0,lh=10;h<lh;h++){
                                this.layer.fill(mergeColor(this.color.sleeve.back,this.color.sleeve.front,h/lh),this.fade*this.fades.sleeve)
                                this.layer.quad(
                                    this.graphics.arms[g].top.x+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*0.3*constrain(lcos(this.spin.arms[g].top+this.anim.direction),0.2,0.5)*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*3/8,
                                    this.graphics.arms[g].top.y-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*0.3*constrain(lcos(this.spin.arms[g].top+this.anim.direction),0.2,0.5)*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*3/8,
                                    this.graphics.arms[g].top.x-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*0.15*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*3/8,
                                    this.graphics.arms[g].top.y+(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*0.15*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*3/8,
                                    this.graphics.arms[g].middle.x-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                    this.graphics.arms[g].middle.y+(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                    this.graphics.arms[g].middle.x+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                    this.graphics.arms[g].middle.y-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))
                                )
                                this.layer.push()
                                this.layer.translate(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                                this.layer.rotate(atan2(this.graphics.arms[g].middle.x-this.graphics.arms[g].top.x,this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y))
                                let i=0.36*(1-h/lh)*(g*2-1)*sqrt((this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)**2+(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)**2)
                                this.layer.arc(0,0,i,i,-180,0)
                                this.layer.pop()
                                if(this.trigger.display.extra.damage){
                                    this.layer.beginShape()
                                    this.layer.vertex(this.graphics.arms[g].middle.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)))
                                    this.layer.vertex(this.graphics.arms[g].middle.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)))
                                    this.layer.vertex(this.graphics.arms[g].bottom.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.225*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.34375,
                                        this.graphics.arms[g].bottom.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.225*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.34375)
                                    this.layer.vertex(this.graphics.arms[g].bottom.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.1125*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.5,
                                        this.graphics.arms[g].bottom.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.1125*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.5)
                                    this.layer.vertex(this.graphics.arms[g].bottom.x+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.34375,
                                        this.graphics.arms[g].bottom.y+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.34375)
                                    this.layer.vertex(this.graphics.arms[g].bottom.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.1125*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.5,
                                        this.graphics.arms[g].bottom.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.1125*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.5)
                                    this.layer.vertex(this.graphics.arms[g].bottom.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.225*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.34375,
                                        this.graphics.arms[g].bottom.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.225*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.34375)
                                    this.layer.endShape()
                                }else{
                                    this.layer.quad(
                                        this.graphics.arms[g].middle.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].middle.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.18*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction)),
                                        this.graphics.arms[g].bottom.x-(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.24*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)/8,
                                        this.graphics.arms[g].bottom.y+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.24*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)/8,
                                        this.graphics.arms[g].bottom.x+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)*0.24*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)/8,
                                        this.graphics.arms[g].bottom.y-(this.graphics.arms[g].middle.x-this.graphics.arms[g].bottom.x)*0.24*(1-h/lh)*(g*2-1)*sign(lcos(this.anim.direction))+(this.graphics.arms[g].middle.y-this.graphics.arms[g].bottom.y)/8
                                    )
                                }
                            }
                        }
                        if(this.trigger.display.wrap.sleeve){
                            this.layer.strokeJoin(ROUND)
                            this.layer.strokeWeight(0.4)
                            this.layer.fill(this.color.wrap.sleeveIn[0],this.color.wrap.sleeveIn[1],this.color.wrap.sleeveIn[2],this.fade*this.fades.wrap.sleeve)
                            this.layer.stroke(this.color.wrap.sleeveOut[0],this.color.wrap.sleeveOut[1],this.color.wrap.sleeveOut[2],this.fade*this.fades.wrap.sleeve)
                            this.calc.int=[
                                this.graphics.arms[g].top.x-constrain(lsin(this.spin.arms[g].top+this.anim.direction)*1.2,-1,1)*(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*0.135-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*3/8,
                                this.graphics.arms[g].top.y+constrain(lsin(this.spin.arms[g].top+this.anim.direction)*1.2,-1,1)*(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*0.135-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*3/8,
                                this.graphics.arms[g].top.x-constrain(lsin(this.spin.arms[g].top+this.anim.direction)*1.2,-1,1)*(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)*0.15-(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)/2,
                                this.graphics.arms[g].top.y+constrain(lsin(this.spin.arms[g].top+this.anim.direction)*1.2,-1,1)*(this.graphics.arms[g].top.x-this.graphics.arms[g].middle.x)*0.15-(this.graphics.arms[g].top.y-this.graphics.arms[g].middle.y)/2
                            ]
                            if(this.anim.direction*(g*2-1)+this.spin.arms[g].lock>-150&&this.anim.direction*(g*2-1)+this.spin.arms[g].lock<150&&(lcos(this.spin.wrap.center+this.anim.direction)>=0||lcos(90*(g*2-1)+this.anim.direction)>=0)){
                                if(this.anim.direction*(g*2-1)+this.spin.arms[g].lock<-70){
                                    this.layer.triangle(this.calc.int[0],this.calc.int[1],this.calc.int[2],this.calc.int[3],-6.6*this.fades.kimono.main.front.x*(g*2-1),this.parts.kimono.main+10*this.fades.kimono.main.front.y)
                                }else if(this.anim.direction*(g*2-1)+this.spin.arms[g].lock>30){
                                    this.layer.triangle(5.7*this.fades.kimono.main.front.x*(g*2-1),-50,6.2*this.fades.kimono.main.front.x*(g*2-1),-48,lsin(this.spin.wrap.center+this.anim.direction)*6.6*this.fades.kimono.main.front.x,this.parts.kimono.main+10*this.fades.kimono.main.front.y)
                                }else{
                                    this.layer.triangle(this.calc.int[0],this.calc.int[1],this.calc.int[2],this.calc.int[3],lsin(this.spin.wrap.center+this.anim.direction)*6.6*this.fades.kimono.main.front.x,this.parts.kimono.main+10*this.fades.kimono.main.front.y)
                                }
                            }
                            if((this.anim.direction*(g*2-1)+this.spin.arms[g].lock<-50||this.anim.direction*(g*2-1)+this.spin.arms[g].lock>50)&&(lcos(this.spin.wrap.center+this.anim.direction)<0||lcos(90*(g*2-1)+this.anim.direction)>=0)){
                                if(this.anim.direction*(g*2-1)+this.spin.arms[g].lock>-110&&this.anim.direction*(g*2-1)<0){
                                    this.layer.triangle(this.calc.int[0],this.calc.int[1],this.calc.int[2],this.calc.int[3],6.6*this.fades.kimono.main.front.x*(g*2-1),this.parts.kimono.main+10*this.fades.kimono.main.front.y)
                                }else if(this.anim.direction*(g*2-1)+this.spin.arms[g].lock<150&&this.anim.direction*(g*2-1)>90){
                                    this.layer.triangle(-5.7*this.fades.kimono.main.front.x*(g*2-1),-50,-6.2*this.fades.kimono.main.front.x*(g*2-1),-48,lsin(this.spin.wrap.center+this.anim.direction)*-6.6*this.fades.kimono.main.front.x,this.parts.kimono.main+10*this.fades.kimono.main.front.y)
                                }else{
                                    this.layer.triangle(this.calc.int[0],this.calc.int[1],this.calc.int[2],this.calc.int[3],lsin(this.spin.wrap.center+this.anim.direction)*-6.6*this.fades.kimono.main.front.x,this.parts.kimono.main+10*this.fades.kimono.main.front.y)
                                }
                            }
                        }
                        if(this.trigger.display.eye[g]){
                            this.minorDisplayGeneral(0,g)
                        }
                    }
                    if(this.trigger.display.sleeveDecoration){
                        this.layer.noStroke()
                        for(let g=0,lg=this.spin.sleeve.decoration.length;g<lg;g++){
                            if(lcos(this.spin.sleeve.decoration[g].spin+this.anim.direction)>=0.2&&lcos(this.spin.arms[this.spin.sleeve.decoration[g].part].top+this.anim.direction)>-0.3&&!(this.trigger.display.extra.damage&&this.spin.sleeve.decoration[g].length>1.5)){
                                h=this.spin.sleeve.decoration[g].part
                                this.layer.push()
                                if(this.spin.sleeve.decoration[g].length>1){
                                    this.layer.translate(
                                        lerp(
                                            this.graphics.arms[h].middle.x-(this.graphics.arms[h].middle.y-this.graphics.arms[h].bottom.y)*0.18*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction),
                                            this.graphics.arms[h].bottom.x-(this.graphics.arms[h].middle.y-this.graphics.arms[h].bottom.y)*0.24*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)+(this.graphics.arms[h].middle.x-this.graphics.arms[h].bottom.x)/8,
                                            this.spin.sleeve.decoration[g].length-1
                                        )
                                        ,lerp(
                                            this.graphics.arms[h].middle.y+(this.graphics.arms[h].middle.x-this.graphics.arms[h].bottom.x)*0.18*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction),
                                            this.graphics.arms[h].bottom.y+(this.graphics.arms[h].middle.x-this.graphics.arms[h].bottom.x)*0.24*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)+(this.graphics.arms[h].middle.y-this.graphics.arms[h].bottom.y)/8,
                                            this.spin.sleeve.decoration[g].length-1
                                        ))
                                    this.layer.rotate(-atan2(
                                        ((this.graphics.arms[h].middle.x-(this.graphics.arms[h].middle.y-this.graphics.arms[h].bottom.y)*0.18*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction))-
                                        (this.graphics.arms[h].bottom.x-(this.graphics.arms[h].middle.y-this.graphics.arms[h].bottom.y)*0.24*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)+(this.graphics.arms[h].middle.x-this.graphics.arms[h].bottom.x)/8)),
                                        ((this.graphics.arms[h].middle.y+(this.graphics.arms[h].middle.x-this.graphics.arms[h].bottom.x)*0.18*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction))-
                                        (this.graphics.arms[h].bottom.y+(this.graphics.arms[h].middle.x-this.graphics.arms[h].bottom.x)*0.24*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)+(this.graphics.arms[h].middle.y-this.graphics.arms[h].bottom.y)/8))
                                    ))
                                }else{
                                    this.layer.translate(
                                        lerp(
                                            this.graphics.arms[h].top.x-(this.graphics.arms[h].top.y-this.graphics.arms[h].middle.y)*lerp(0.3*constrain(lcos(this.spin.arms[h].top+this.anim.direction),0.2,0.5),0.15,this.spin.sleeve.decoration[g].length)*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)-(this.graphics.arms[h].top.x-this.graphics.arms[h].middle.x)*3/8,
                                            this.graphics.arms[h].middle.x-(this.graphics.arms[h].top.y-this.graphics.arms[h].middle.y)*0.18*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction),
                                            this.spin.sleeve.decoration[g].length
                                        )
                                        ,lerp(
                                            this.graphics.arms[h].top.y+(this.graphics.arms[h].top.x-this.graphics.arms[h].middle.x)*lerp(0.3*constrain(lcos(this.spin.arms[h].top+this.anim.direction),0.2,0.5),0.15,this.spin.sleeve.decoration[g].length)*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)-(this.graphics.arms[h].top.y-this.graphics.arms[h].middle.y)*3/8,
                                            this.graphics.arms[h].middle.y+(this.graphics.arms[h].top.x-this.graphics.arms[h].middle.x)*0.18*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction),
                                            this.spin.sleeve.decoration[g].length
                                        ))
                                    this.layer.rotate(-atan2(
                                        ((this.graphics.arms[h].top.x-(this.graphics.arms[h].top.y-this.graphics.arms[h].middle.y)*lerp(0.3*constrain(lcos(this.spin.arms[h].top+this.anim.direction),0.2,0.5),0.15,this.spin.sleeve.decoration[g].length)*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)-(this.graphics.arms[h].top.x-this.graphics.arms[h].middle.x)*3/8)-
                                        (this.graphics.arms[h].middle.x-(this.graphics.arms[h].top.y-this.graphics.arms[h].middle.y)*0.18*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction))),
                                        ((this.graphics.arms[h].top.y+(this.graphics.arms[h].top.x-this.graphics.arms[h].middle.x)*lerp(0.3*constrain(lcos(this.spin.arms[h].top+this.anim.direction),0.2,0.5),0.15,this.spin.sleeve.decoration[g].length)*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)-(this.graphics.arms[h].top.y-this.graphics.arms[h].middle.y)*3/8)-
                                        (this.graphics.arms[h].middle.y+(this.graphics.arms[h].top.x-this.graphics.arms[h].middle.x)*0.18*lsin(this.spin.sleeve.decoration[g].spin+this.anim.direction)))
                                    ))
                                }
                                this.layer.scale(lcos(this.spin.sleeve.decoration[g].spin+this.anim.direction)*1.25-0.25,1)
                                this.layer.rotate(this.spin.sleeve.decoration[g].rotate)
                                this.minorDisplay(this.spin.sleeve.decoration[g].type,0,this.layer)
                                this.layer.pop()
                            }
                        }
                    }
                    if(this.trigger.display.hair.front){
                        this.layer.image(graphics.combatant[10].sprites.hair.front[this.sprites.spinDetailHead],-20*this.fade,-75-20*this.fade,40*this.fade,60*this.fade)
                    }
                    if(this.trigger.display.hair.glow){
                        this.layer.noFill()
                        this.layer.stroke(this.color.hair.glow[0],this.color.hair.glow[1],this.color.hair.glow[2],this.fade/4)
                        for(let g=0;g<6;g++){
                            this.layer.strokeWeight((3-g/2)*this.fade)
                            this.layer.arc(0,-75,28+g,28+g,-72+g*6,-12-g*6)
                        }
                    }
                    if(this.trigger.display.hair.pin){
                        this.layer.noStroke()
                        for(let g=0;g<2;g++){
                            if(lcos(this.anim.direction+this.spin.hair.pin[g])>0){
                                this.layer.push()
                                this.layer.translate(lsin(this.anim.direction+this.spin.hair.pin[g])*14,-83.75)
                                this.layer.rotate(lsin(this.anim.direction+this.spin.hair.pin[g])*-30)
                                this.layer.scale(lcos(this.anim.direction+this.spin.hair.pin[g])*0.95+0.05,1)
                                this.layer.fill(this.color.hair.pin[0][0],this.color.hair.pin[0][1],this.color.hair.pin[0][2],this.fade*this.fades.hair.pin)
                                this.layer.ellipse(0,0,4,3)
                                this.layer.ellipse(-1,-2.5,1,4)
                                this.layer.ellipse(1,-2.5,1,4)
                                this.layer.fill(this.color.hair.pin[1][0],this.color.hair.pin[1][1],this.color.hair.pin[1][2],this.fade*this.fades.hair.pin)
                                this.layer.ellipse(-1,-2.5,0.4,2.4)
                                this.layer.ellipse(1,-2.5,0.4,2.4)
                                this.layer.stroke(this.color.hair.pin[2][0],this.color.hair.pin[2][1],this.color.hair.pin[2][2],this.fade*this.fades.hair.pin)
                                this.layer.noFill()
                                this.layer.strokeWeight(0.4)
                                this.layer.point(-0.45,-0.4)
                                this.layer.point(0.45,-0.4)
                                this.layer.strokeWeight(0.2)
                                if(this.trigger.display.extra.damage){
                                    this.layer.arc(0,1,1.6,1,-150,-30)
                                }else{
                                    this.layer.arc(0,0,1.6,1,30,150)
                                }
                                this.layer.line(-1.1,-0.25,-1.5,-0.35)
                                this.layer.line(-1.1,0.25,-1.5,0.35)
                                this.layer.line(1.1,-0.25,1.5,-0.35)
                                this.layer.line(1.1,0.25,1.5,0.35)
                                this.layer.pop()
                            }
                        }
                    }
                break
                case 'Drunk Boss': case 'Enforcer': case 'Bomber Boy': case 'Chief Engineering Officer': case 'Gangmaster':
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.ellipse(0,-52.5,20,48)
                        if(this.name=='Chief Engineering Officer'){
                            this.layer.fill(this.flashColor(this.color.skin.upperBody)[0],this.flashColor(this.color.skin.upperBody)[1],this.flashColor(this.color.skin.upperBody)[2],this.fade*this.fades.skin.body)
                            this.layer.arc(0,-52,20,49,-180,0)
                        }
                    }
                    if(this.name=='Drunk Boss'&&this.trigger.display.belt){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.belt)[0],this.flashColor(this.color.belt)[1],this.flashColor(this.color.belt)[2],this.fade*this.fades.belt)
                        this.layer.rect(0,-48,21,3)
                    }
                    if(this.name=='Drunk Boss'&&this.trigger.display.bottle){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.bottle)[0],this.flashColor(this.color.bottle)[1],this.flashColor(this.color.bottle)[2],this.fade*this.fades.bottle)
                        for(let g=0;g<3;g++){
                            if(lcos(this.anim.direction+15+g*30)>0){
                                this.layer.rect(lsin(this.anim.direction+15+g*30)*10.5,-48,3*lcos(this.anim.direction+15+g*30),6)
                                this.layer.rect(lsin(this.anim.direction+15+g*30)*10.5,-52,2*lcos(this.anim.direction+15+g*30),2)
                            }
                        }
                    }
                    if(this.name=='Enforcer'&&this.trigger.display.button){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.button)[0],this.flashColor(this.color.button)[1],this.flashColor(this.color.button)[2],this.fade*this.fades.button)
                        for(let a=0,la=2;a<la;a++){
                            if(lcos(this.anim.direction-24+a*48)>0){
                                this.layer.ellipse(lsin(this.anim.direction-24+a*48)*8,-60,4*lcos(this.anim.direction-24+a*48),4)
                                this.layer.ellipse(lsin(this.anim.direction-24+a*48)*10,-51,4*lcos(this.anim.direction-24+a*48),4)
                                this.layer.ellipse(lsin(this.anim.direction-24+a*48)*8,-42,4*lcos(this.anim.direction-24+a*48),4)
                            }
                        }
                    }
                    if(this.name=='Bomber Boy'&&this.trigger.display.logo&&lcos(this.anim.direction)>0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.logo)[0],this.flashColor(this.color.logo)[1],this.flashColor(this.color.logo)[2],this.fade*this.fades.logo)
                        this.layer.quad(lsin(this.anim.direction)*10-lcos(this.anim.direction)*4,-51,lsin(this.anim.direction)*10,-59,lsin(this.anim.direction)*10+lcos(this.anim.direction)*4,-51,lsin(this.anim.direction)*10,-43)
                    }
                    if(this.name=='Chief Engineering Officer'&&this.trigger.display.belt){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.belt)[0],this.flashColor(this.color.belt)[1],this.flashColor(this.color.belt)[2],this.fade*this.fades.belt)
                        this.layer.rect(0,-50,21,3)
                        for(let a=0,la=15;a<la;a++){
                            if(lcos(a*24+this.anim.direction)>0){
					            this.layer.rect(lsin(a*24+this.anim.direction)*10,-50,lcos(a*24+this.anim.direction)*2,6)
                            }
                        }
                    }
                    if(this.name=='Gangmaster'&&this.trigger.display.pocket&&lcos(this.anim.direction+45)>0){
                        this.layer.fill(this.flashColor(this.color.pocket)[0],this.flashColor(this.color.pocket)[1],this.flashColor(this.color.pocket)[2],this.fade*this.fades.pocket)
                        this.layer.noStroke()
                        this.layer.arc(lsin(this.anim.direction+45)*9,-58,6*lcos(this.anim.direction+45),6,-180,0)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        for(let h=0;h<2;h++){
                            if((g==0&&h==0||g==1&&h==1)&&lcos(this.spin.legs[0].bottom+this.anim.direction)<=lcos(this.spin.legs[1].bottom+this.anim.direction)||(g==0&&h==1||g==1&&h==0)&&lcos(this.spin.legs[0].bottom+this.anim.direction)>lcos(this.spin.legs[1].bottom+this.anim.direction)){
                                if(this.trigger.display.skin.legs){
                                    this.layer.stroke(this.flashColor(this.color.skin.legs)[0],this.flashColor(this.color.skin.legs)[1],this.flashColor(this.color.skin.legs)[2],this.fade*this.fades.skin.legs)
                                    this.layer.strokeWeight(4)
                                    this.layer.line(this.graphics.legs[h].top.x,this.graphics.legs[h].top.y,this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y)
                                    this.layer.line(this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y,this.graphics.legs[h].bottom.x,this.graphics.legs[h].bottom.y)
                                }
                            }
                        }
                    }
                    if((this.name=='Chief Engineering Officer'||this.name=='Gangmaster')&&this.trigger.display.tie&&lcos(this.anim.direction)>0.1){
                        this.layer.fill(this.flashColor(this.color.tie[0])[0],this.flashColor(this.color.tie[0])[1],this.flashColor(this.color.tie[0])[2],this.fade*this.fades.tie)
                        this.layer.noStroke()
		    			this.layer.triangle(lsin(this.anim.direction)*3.5-lcos(this.anim.direction)*3.5,-76,lsin(this.anim.direction)*3.5+lcos(this.anim.direction)*3.5,-76,lsin(this.anim.direction)*10.5,-56)
	    				this.layer.fill(this.flashColor(this.color.tie[1])[0],this.flashColor(this.color.tie[1])[1],this.flashColor(this.color.tie[1])[2],this.fade*this.fades.tie)
                        this.layer.quad(lsin(this.anim.direction)*7-lcos(this.anim.direction)*1.75,-66,lsin(this.anim.direction)*3.5,-76,lsin(this.anim.direction)*7+lcos(this.anim.direction)*1.75,-66,lsin(this.anim.direction)*10.5,-55)
                    }
                    if(this.name=='Chief Engineering Officer'&&this.trigger.display.coat){
                        this.layer.fill(this.flashColor(this.color.coat)[0],this.flashColor(this.color.coat)[1],this.flashColor(this.color.coat)[2],this.fade*this.fades.coat)
                        this.layer.noStroke()
                        if(lcos(this.anim.direction)<0.5){
                            this.layer.ellipse(0,-52.5,28,50)
                        }else{
                            this.layer.arc(-3+lsin(this.anim.direction)*7,-52.5,28+min(0,lsin(this.anim.direction)*32),48+min(10,lsin(this.anim.direction)*8),90,270)
                            this.layer.arc(3+lsin(this.anim.direction)*7,-52.5,28+min(0,-lsin(this.anim.direction)*32),48+min(10,-lsin(this.anim.direction)*8),-90,90)
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.4&&lcos(this.spin.arms[g].top+this.anim.direction)<0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                    }
                    if(this.trigger.display.skin.head){
                        this.layer.fill(this.flashColor(this.color.skin.head)[0],this.flashColor(this.color.skin.head)[1],this.flashColor(this.color.skin.head)[2],this.fade*this.fades.skin.head)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-90,30,30)
                    }
                    if(this.trigger.display.mouth&&lcos(this.anim.direction)>0.1){
                        this.minorDisplayGeneral(1,0)
                    }
                    if(this.name=='Gangmaster'&&this.trigger.display.beard&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.flashColor(this.color.beard)[0],this.flashColor(this.color.beard)[1],this.flashColor(this.color.beard)[2],this.fade*this.fades.beard)
                        this.layer.noStroke()
                        this.layer.triangle(lsin(this.anim.direction)*11-lcos(this.anim.direction)*6,-80,lsin(this.anim.direction)*11+lcos(this.anim.direction)*6,-80,lsin(this.anim.direction)*10,-64)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>=0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].bottom+this.anim.direction)>=0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        if(this.trigger.display.eye[g]){
                            this.minorDisplayGeneral(0,g)
                        }
                    }
                    if(this.name=='Enforcer'&&this.trigger.display.glasses&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.color.glasses[1][0],this.color.glasses[1][1],this.color.glasses[1][2],this.fade*this.fades.glasses/5)
                        this.layer.stroke(this.color.glasses[0][0],this.color.glasses[0][1],this.color.glasses[0][2],this.fade*this.fades.glasses)
                        this.layer.strokeWeight(1)
	    				this.layer.ellipse(lsin(this.anim.direction)*15+lcos(this.anim.direction)*-5,-86,6*lcos(this.anim.direction),3)
		    			this.layer.ellipse(lsin(this.anim.direction)*15+lcos(this.anim.direction)*5,-86,6*lcos(this.anim.direction),3)
			    		this.layer.line(lsin(this.anim.direction)*15+lcos(this.anim.direction)*2,-86,lsin(this.anim.direction)*15-lcos(this.anim.direction)*2,-86)
                    }
                    if(this.name=='Bomber Boy'&this.trigger.display.helmet){
                        this.layer.fill(this.color.helmet[0],this.color.helmet[1],this.color.helmet[2],this.fade*this.fades.helmet)
                        this.layer.noStroke()
                        this.layer.arc(0,-90,35,35,-180,0)
                    }
                    if(this.name=='Bomber Boy'&this.trigger.display.emblem&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.color.emblem[0],this.color.emblem[1],this.color.emblem[2],this.fade*this.fades.emblem)
                        this.layer.noStroke()
                        this.layer.ellipse(lsin(this.anim.direction)*17,-96,6*lcos(this.anim.direction),6)
                    }
                    if(this.name=='Chief Engineering Officer'&&this.trigger.display.hat){
                        this.layer.fill(this.flashColor(this.color.hat)[0],this.flashColor(this.color.hat)[1],this.flashColor(this.color.hat)[2],this.fade*this.fades.hat)
                        this.layer.noStroke()
	    				this.layer.arc(0,-90,32,32,-180,0)
    					this.layer.rect(lsin(this.anim.direction)*16,-92,20+abs(lcos(this.anim.direction))*8,4)
                        this.layer.stroke(this.flashColor(this.color.hat)[0]-50,this.flashColor(this.color.hat)[1]-50,this.flashColor(this.color.hat)[2]-50,this.fade*this.fades.hat)
                        this.layer.strokeWeight(1)
                        this.layer.noFill()
                        for(let a=0,la=8;a<la;a++){
                            if(lcos(this.anim.direction+a*45)>0){
                                if(lsin(this.anim.direction+a*45)>0){
                                    this.layer.arc(0,-90.5,32*lsin(this.anim.direction+a*45),31,-90,0)
                                }else if(lsin(this.anim.direction+a*45)<0){
                                    this.layer.arc(0,-90.5,-32*lsin(this.anim.direction+a*45),31,-180,-90)
                                }
                            }
                        }
                    }
                break
                case 'Pointy': case 'Little Guy':
                    for(let g=0;g<2;g++){
                        if((this.name=='Pointy')&&this.trigger.display.extra.sword&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4){
                            this.minorDisplay(0,g)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.ellipse(0,-45,13,33)
                        if(this.name=='Pointy'||this.name=='Little Guy'){
                            this.layer.fill(this.flashColor(this.color.skin.upperBody)[0],this.flashColor(this.color.skin.upperBody)[1],this.flashColor(this.color.skin.upperBody)[2],this.fade*this.fades.skin.body)
                            this.layer.arc(0,-42,14,40,-180,0)
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        for(let h=0;h<2;h++){
                            if((g==0&&h==0||g==1&&h==1)&&lcos(this.spin.legs[0].bottom+this.anim.direction)<=lcos(this.spin.legs[1].bottom+this.anim.direction)||(g==0&&h==1||g==1&&h==0)&&lcos(this.spin.legs[0].bottom+this.anim.direction)>lcos(this.spin.legs[1].bottom+this.anim.direction)){
                                if(this.trigger.display.skin.legs){
                                    this.layer.stroke(this.flashColor(this.color.skin.legs)[0],this.flashColor(this.color.skin.legs)[1],this.flashColor(this.color.skin.legs)[2],this.fade*this.fades.skin.legs)
                                    this.layer.strokeWeight(4)
                                    this.layer.line(this.graphics.legs[h].top.x,this.graphics.legs[h].top.y,this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y)
                                    this.layer.line(this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y,this.graphics.legs[h].bottom.x,this.graphics.legs[h].bottom.y)
                                }
                            }
                        }
                    }
                    for(let g=0;g<2;g++){
                        if((this.name=='Pointy')&&this.trigger.display.extra.sword&&(lcos(this.spin.arms[g].top+this.anim.direction)>=0.4&&lcos(this.spin.arms[g].top+this.anim.direction)<0.6)){
                            this.minorDisplay(0,g)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.4&&lcos(this.spin.arms[g].top+this.anim.direction)<0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                    }
                    if(this.trigger.display.skin.head){
                        this.layer.fill(this.flashColor(this.color.skin.head)[0],this.flashColor(this.color.skin.head)[1],this.flashColor(this.color.skin.head)[2],this.fade*this.fades.skin.head)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-72,30,30)
                    }
                    if(this.trigger.display.mouth&&lcos(this.anim.direction)>0.1){
                        this.minorDisplayGeneral(1,0)
                    }
                    for(let g=0;g<2;g++){
                        if((this.name=='Pointy')&&this.trigger.display.extra.sword&&(lcos(this.spin.arms[g].top+this.anim.direction)>=0.6||lcos(this.spin.arms[g].bottom+this.anim.direction)>=0.6)){
                            this.minorDisplay(0,g)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>=0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].bottom+this.anim.direction)>=0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        if(this.trigger.display.eye[g]){
                            this.minorDisplayGeneral(0,g)
                        }
                    }
                break
                case 'Monkey': case 'Monkey Gangster':
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.ellipse(0,-28,18,27)
                    }
                    if(this.name=='Monkey Gangster'&&this.trigger.display.tie&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.flashColor(this.color.tie[0])[0],this.flashColor(this.color.tie[0])[1],this.flashColor(this.color.tie[0])[2],this.fade*this.fades.tie)
                        this.layer.noStroke()
		    			this.layer.triangle(lsin(this.anim.direction)*3-lcos(this.anim.direction)*3,-36,lsin(this.anim.direction)*3+lcos(this.anim.direction)*3,-36,lsin(this.anim.direction)*9,-24)
	    				this.layer.fill(this.flashColor(this.color.tie[1])[0],this.flashColor(this.color.tie[1])[1],this.flashColor(this.color.tie[1])[2],this.fade*this.fades.tie)
                        this.layer.quad(lsin(this.anim.direction)*6-lcos(this.anim.direction)*1.5,-30,lsin(this.anim.direction)*3,-36,lsin(this.anim.direction)*6+lcos(this.anim.direction)*1.5,-30,lsin(this.anim.direction)*9,-24)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        for(let h=0;h<2;h++){
                            if((g==0&&h==0||g==1&&h==1)&&lcos(this.spin.legs[0].bottom+this.anim.direction)<=lcos(this.spin.legs[1].bottom+this.anim.direction)||(g==0&&h==1||g==1&&h==0)&&lcos(this.spin.legs[0].bottom+this.anim.direction)>lcos(this.spin.legs[1].bottom+this.anim.direction)){
                                if(this.trigger.display.skin.legs){
                                    this.layer.stroke(this.flashColor(this.color.skin.legs)[0],this.flashColor(this.color.skin.legs)[1],this.flashColor(this.color.skin.legs)[2],this.fade*this.fades.skin.legs)
                                    this.layer.strokeWeight(4)
                                    this.layer.line(this.graphics.legs[h].top.x,this.graphics.legs[h].top.y,this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y)
                                    this.layer.line(this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y,this.graphics.legs[h].bottom.x,this.graphics.legs[h].bottom.y)
                                }
                            }
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.4&&lcos(this.spin.arms[g].top+this.anim.direction)<0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                    }
                    if(this.trigger.display.skin.head){
                        this.layer.fill(this.flashColor(this.color.skin.head)[0],this.flashColor(this.color.skin.head)[1],this.flashColor(this.color.skin.head)[2],this.fade*this.fades.skin.head)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-54,40,40)
                    }
                    if(this.trigger.display.mouth&&lcos(this.anim.direction)>0.1){
                        this.minorDisplayGeneral(1,0)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>=0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].bottom+this.anim.direction)>=0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        if(this.trigger.display.eye[g]){
                            this.minorDisplayGeneral(0,g)
                        }
                    }
                    if(this.name=='Monkey Gangster'&&this.trigger.display.hat){
                        this.layer.fill(this.flashColor(this.color.hat)[0],this.flashColor(this.color.hat)[1],this.flashColor(this.color.hat)[2],this.fade*this.fades.hat)
                        this.layer.stroke(this.flashColor(this.color.hat)[0],this.flashColor(this.color.hat)[1],this.flashColor(this.color.hat)[2],this.fade*this.fades.hat)
			    		this.layer.strokeWeight(4)
		    			this.layer.line(-16,-69,16,-69)
    					this.layer.quad(-12,-69,12,-69,8,-75,-8,-75)
                    }
                break
                case 'Duck': case 'Fungal Duck': case 'Duckforce': case 'Blue Duck':
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)<=0){
                            this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[2],this.fade*this.fades.skin.arms)
                            this.layer.noStroke()
                            this.layer.ellipse(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,12,12)
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.legs&&lcos(this.anim.direction+this.spin.legs[g].top)<=0){
                            this.layer.fill(this.flashColor(upColor(this.color.skin.legs,lcos(this.spin.legs[g].top+this.anim.direction)*20,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.legs,lcos(this.spin.legs[g].top+this.anim.direction)*20,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.legs,lcos(this.spin.legs[g].top+this.anim.direction)*20,[1,1,1]))[2],this.fade*this.fades.skin.legs)
                            this.layer.noStroke()
                            this.layer.ellipse(this.graphics.legs[g].middle.x,this.graphics.legs[g].middle.y,12,12)
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-19,14,24)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.legs&&lcos(this.anim.direction+this.spin.legs[g].top)>0){
                            this.layer.fill(this.flashColor(upColor(this.color.skin.legs,lcos(this.spin.legs[g].top+this.anim.direction)*20,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.legs,lcos(this.spin.legs[g].top+this.anim.direction)*20,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.legs,lcos(this.spin.legs[g].top+this.anim.direction)*20,[1,1,1]))[2],this.fade*this.fades.skin.legs)
                            this.layer.noStroke()
                            this.layer.ellipse(this.graphics.legs[g].middle.x,this.graphics.legs[g].middle.y,12,12)
                        }
                    }
                    if(this.trigger.display.beak.main){
                        this.layer.fill(this.flashColor(this.color.beak.main)[0],this.flashColor(this.color.beak.main)[1],this.flashColor(this.color.beak.main)[2],this.fade*this.fades.beak.main)
                        this.layer.noStroke()
                        this.layer.ellipse(lsin(this.anim.direction)*13,this.parts.beakLevel,12+2*lcos(this.anim.direction),8)
                    }
                    if(this.trigger.display.beak.mouth){
                        this.layer.noFill()
                        this.layer.stroke(this.flashColor(this.color.beak.mouth)[0],this.flashColor(this.color.beak.mouth)[1],this.flashColor(this.color.beak.mouth)[2],this.fade*this.fades.beak.mouth)
                        this.layer.strokeWeight(0.5)
                        this.layer.arc(lsin(this.anim.direction)*13,this.parts.beakLevel,12+2*lcos(this.anim.direction),1,0,180)
                    }
                    if(this.trigger.display.beak.nostril){
                        this.layer.noFill()
                        this.layer.stroke(this.flashColor(this.color.beak.nostril)[0],this.flashColor(this.color.beak.nostril)[1],this.flashColor(this.color.beak.nostril)[2],this.fade*this.fades.beak.nostril)
                        this.layer.strokeWeight(0.5)
                        for(let g=0;g<2;g++){
                            this.layer.line(lsin(this.anim.direction-6+g*12)*16,this.parts.beakLevel-1.5,lsin(this.anim.direction-6+g*12)*16,this.parts.beakLevel-1)
                        }
                    }
                    if(this.name=='Fungal Duck'&&this.trigger.display.fungus){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.fungus[0])[0],this.flashColor(this.color.fungus[0])[1],this.flashColor(this.color.fungus[0])[2],this.fade*this.fades.fungus)
		    			this.layer.arc(0,-55,20,20,-180,0)
	    				this.layer.fill(this.flashColor(this.color.fungus[1])[0],this.flashColor(this.color.fungus[1])[1],this.flashColor(this.color.fungus[1])[2],this.fade*this.fades.fungus)
    					this.layer.rect(0,-51,6,8)
                    }
                    if(this.trigger.display.skin.head){
                        this.layer.fill(this.flashColor(this.color.skin.head)[0],this.flashColor(this.color.skin.head)[1],this.flashColor(this.color.skin.head)[2],this.fade*this.fades.skin.head)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-38,27,27)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)>0){
                            this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[2],this.fade*this.fades.skin.arms)
                            this.layer.noStroke()
                            this.layer.ellipse(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,12,12)
                        }
                        if(this.trigger.display.eye[g]){
                            this.layer.stroke(this.color.eye.back[0],this.color.eye.back[1],this.color.eye.back[2],this.fade*this.fades.eye[g])
                            this.layer.strokeWeight((2.5-this.anim.eye[g]*1.5)*constrain(lcos(this.spin.eye[g]+this.anim.direction)*5,0,1))
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*13-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*13+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel-this.anim.eye[g]*2)
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*13-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*13+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel+this.anim.eye[g]*2)
                        }
                    }
                    if(this.trigger.display.beak.main&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.flashColor(this.color.beak.main)[0],this.flashColor(this.color.beak.main)[1],this.flashColor(this.color.beak.main)[2],this.fade*this.fades.beak.main)
                        this.layer.noStroke()
                        this.layer.arc(lsin(this.anim.direction)*13,this.parts.beakLevel,12+2*lcos(this.anim.direction)-max(0,lsin(this.anim.direction)-0.5)*24,8,-270,-90)
                        this.layer.arc(lsin(this.anim.direction)*13,this.parts.beakLevel,12+2*lcos(this.anim.direction)+min(0,lsin(this.anim.direction)+0.5)*24,8,-90,90)
                    }
                    if(this.trigger.display.beak.mouth&&lcos(this.anim.direction)>0){
                        this.layer.noFill()
                        this.layer.stroke(this.flashColor(this.color.beak.mouth)[0],this.flashColor(this.color.beak.mouth)[1],this.flashColor(this.color.beak.mouth)[2],this.fade*this.fades.beak.mouth)
                        this.layer.strokeWeight(0.5)
                        this.layer.arc(lsin(this.anim.direction)*13+max(0,lsin(this.anim.direction)-0.5)*6+min(0,lsin(this.anim.direction)+0.5)*6,this.parts.beakLevel,12+2*lcos(this.anim.direction)-max(0,lsin(this.anim.direction)-0.5)*12+min(0,lsin(this.anim.direction)+0.5)*12,1,0,180)
                    }
                    if(this.trigger.display.beak.nostril&&lcos(this.anim.direction)>0){
                        this.layer.noFill()
                        this.layer.stroke(this.flashColor(this.color.beak.nostril)[0],this.flashColor(this.color.beak.nostril)[1],this.flashColor(this.color.beak.nostril)[2],this.fade*this.fades.beak.nostril)
                        this.layer.strokeWeight(0.5)
                        for(let g=0;g<2;g++){
                            this.layer.line(lsin(this.anim.direction-6+g*12)*16,this.parts.beakLevel-1.5,lsin(this.anim.direction-6+g*12)*16,this.parts.beakLevel-1)
                        }
                    }
                    if(this.name=='Duckforce'&this.trigger.display.helmet){
                        this.layer.fill(this.color.helmet[0],this.color.helmet[1],this.color.helmet[2],this.fade*this.fades.helmet)
                        this.layer.noStroke()
                        this.layer.arc(0,-39,30,30,-180-lsin(this.anim.direction)*30,-lsin(this.anim.direction)*30)
                    }
                break
                case 'Big Duck': case 'Agent Duck': case 'General Duckion':
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)<=0){
                            this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[2],this.fade*this.fades.skin.arms)
                            this.layer.noStroke()
                            this.layer.ellipse(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,16,16)
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.legs&&lcos(this.anim.direction+this.spin.legs[g].top)<=0){
                            this.layer.fill(this.flashColor(upColor(this.color.skin.legs,lcos(this.spin.legs[g].top+this.anim.direction)*20,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.legs,lcos(this.spin.legs[g].top+this.anim.direction)*20,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.legs,lcos(this.spin.legs[g].top+this.anim.direction)*20,[1,1,1]))[2],this.fade*this.fades.skin.legs)
                            this.layer.noStroke()
                            this.layer.ellipse(this.graphics.legs[g].middle.x,this.graphics.legs[g].middle.y,16,16)
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-28,21,33)
                    }
                    if(this.name=='General Duckion'&&this.trigger.display.badge&&lcos(this.anim.direction+24)>0){
                        this.layer.fill(this.flashColor(this.color.badge[0])[0],this.flashColor(this.color.badge[0])[1],this.flashColor(this.color.badge[0])[2],this.fade*this.fades.badge)
                        this.layer.noStroke()
                        this.layer.push()
                        this.layer.translate(lsin(this.anim.direction+24)*8,-35)
                        this.layer.scale(lcos(this.anim.direction+24),1)
                        this.layer.ellipse(0,0,8,8)
                        this.layer.fill(this.flashColor(this.color.badge[1])[0],this.flashColor(this.color.badge[1])[1],this.flashColor(this.color.badge[1])[2],this.fade*this.fades.badge)
                        this.layer.quad(-5,0,0,1.5,5,0,0,-1.5)
                        this.layer.quad(-1.5,0,0,5,1.5,0,0,-5)
                        this.layer.pop()
                    }
                    if(this.name=='Agent Duck'&&this.trigger.display.tie&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.flashColor(this.color.tie[0])[0],this.flashColor(this.color.tie[0])[1],this.flashColor(this.color.tie[0])[2],this.fade*this.fades.tie)
                        this.layer.noStroke()
		    			this.layer.triangle(lsin(this.anim.direction)*3-lcos(this.anim.direction)*3,-44,lsin(this.anim.direction)*3+lcos(this.anim.direction)*3,-44,lsin(this.anim.direction)*9,-32)
	    				this.layer.fill(this.flashColor(this.color.tie[1])[0],this.flashColor(this.color.tie[1])[1],this.flashColor(this.color.tie[1])[2],this.fade*this.fades.tie)
                        this.layer.quad(lsin(this.anim.direction)*6-lcos(this.anim.direction)*1.5,-38,lsin(this.anim.direction)*3,-44,lsin(this.anim.direction)*6+lcos(this.anim.direction)*1.5,-38,lsin(this.anim.direction)*9,-32)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.legs&&lcos(this.anim.direction+this.spin.legs[g].top)>0){
                            this.layer.fill(this.flashColor(upColor(this.color.skin.legs,lcos(this.spin.legs[g].top+this.anim.direction)*20,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.legs,lcos(this.spin.legs[g].top+this.anim.direction)*20,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.legs,lcos(this.spin.legs[g].top+this.anim.direction)*20,[1,1,1]))[2],this.fade*this.fades.skin.legs)
                            this.layer.noStroke()
                            this.layer.ellipse(this.graphics.legs[g].middle.x,this.graphics.legs[g].middle.y,16,16)
                        }
                    }
                    if(this.trigger.display.beak.main){
                        this.layer.fill(this.flashColor(this.color.beak.main)[0],this.flashColor(this.color.beak.main)[1],this.flashColor(this.color.beak.main)[2],this.fade*this.fades.beak.main)
                        this.layer.noStroke()
                        this.layer.ellipse(lsin(this.anim.direction)*13,this.parts.beakLevel,12+2*lcos(this.anim.direction),8)
                    }
                    if(this.trigger.display.beak.mouth){
                        this.layer.noFill()
                        this.layer.stroke(this.flashColor(this.color.beak.mouth)[0],this.flashColor(this.color.beak.mouth)[1],this.flashColor(this.color.beak.mouth)[2],this.fade*this.fades.beak.mouth)
                        this.layer.strokeWeight(0.5)
                        this.layer.arc(lsin(this.anim.direction)*13,this.parts.beakLevel,12+2*lcos(this.anim.direction),1,0,180)
                    }
                    if(this.trigger.display.beak.nostril){
                        this.layer.noFill()
                        this.layer.stroke(this.flashColor(this.color.beak.nostril)[0],this.flashColor(this.color.beak.nostril)[1],this.flashColor(this.color.beak.nostril)[2],this.fade*this.fades.beak.nostril)
                        this.layer.strokeWeight(0.5)
                        for(let g=0;g<2;g++){
                            this.layer.line(lsin(this.anim.direction-6+g*12)*16,this.parts.beakLevel-1.5,lsin(this.anim.direction-6+g*12)*16,this.parts.beakLevel-1)
                        }
                    }
                    if(this.trigger.display.skin.head){
                        this.layer.fill(this.flashColor(this.color.skin.head)[0],this.flashColor(this.color.skin.head)[1],this.flashColor(this.color.skin.head)[2],this.fade*this.fades.skin.head)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-54,27,27)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)>0){
                            this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[2],this.fade*this.fades.skin.arms)
                            this.layer.noStroke()
                            this.layer.ellipse(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,16,16)
                        }
                        if(this.trigger.display.eye[g]){
                            this.layer.stroke(this.color.eye.back[0],this.color.eye.back[1],this.color.eye.back[2],this.fade*this.fades.eye[g])
                            this.layer.strokeWeight((2.5-this.anim.eye[g]*1.5)*constrain(lcos(this.spin.eye[g]+this.anim.direction)*5,0,1))
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*13-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*13+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel-this.anim.eye[g]*2)
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*13-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*13+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel+this.anim.eye[g]*2)
                        }
                    }
                    if(this.trigger.display.beak.main&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.flashColor(this.color.beak.main)[0],this.flashColor(this.color.beak.main)[1],this.flashColor(this.color.beak.main)[2],this.fade*this.fades.beak.main)
                        this.layer.noStroke()
                        this.layer.arc(lsin(this.anim.direction)*13,this.parts.beakLevel,12+2*lcos(this.anim.direction)-max(0,lsin(this.anim.direction)-0.5)*24,8,-270,-90)
                        this.layer.arc(lsin(this.anim.direction)*13,this.parts.beakLevel,12+2*lcos(this.anim.direction)+min(0,lsin(this.anim.direction)+0.5)*24,8,-90,90)
                    }
                    if(this.trigger.display.beak.mouth&&lcos(this.anim.direction)>0){
                        this.layer.noFill()
                        this.layer.stroke(this.flashColor(this.color.beak.mouth)[0],this.flashColor(this.color.beak.mouth)[1],this.flashColor(this.color.beak.mouth)[2],this.fade*this.fades.beak.mouth)
                        this.layer.strokeWeight(0.5)
                        this.layer.arc(lsin(this.anim.direction)*13+max(0,lsin(this.anim.direction)-0.5)*6+min(0,lsin(this.anim.direction)+0.5)*6,this.parts.beakLevel,12+2*lcos(this.anim.direction)-max(0,lsin(this.anim.direction)-0.5)*12+min(0,lsin(this.anim.direction)+0.5)*12,1,0,180)
                    }
                    if(this.trigger.display.beak.nostril&&lcos(this.anim.direction)>0){
                        this.layer.noFill()
                        this.layer.stroke(this.flashColor(this.color.beak.nostril)[0],this.flashColor(this.color.beak.nostril)[1],this.flashColor(this.color.beak.nostril)[2],this.fade*this.fades.beak.nostril)
                        this.layer.strokeWeight(0.5)
                        for(let g=0;g<2;g++){
                            this.layer.line(lsin(this.anim.direction-6+g*12)*16,this.parts.beakLevel-1.5,lsin(this.anim.direction-6+g*12)*16,this.parts.beakLevel-1)
                        }
                    }
                    if(this.name=='Agent Duck'&&this.trigger.display.sunglasses&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.color.sunglasses[0],this.color.sunglasses[1],this.color.sunglasses[2],this.fade*this.fades.sunglasses)
                        this.layer.noStroke()
	    				this.layer.ellipse(lsin(this.anim.direction)*13+lcos(this.anim.direction)*-4,-56,6*lcos(this.anim.direction),4)
		    			this.layer.ellipse(lsin(this.anim.direction)*13+lcos(this.anim.direction)*4,-56,6*lcos(this.anim.direction),4)
			    		this.layer.rect(lsin(this.anim.direction)*13,-56,12*lcos(this.anim.direction),1)
                    }
                    if(this.name=='Agent Duck'&&this.trigger.display.hat){
                        this.layer.stroke(this.color.hat[0],this.color.hat[1],this.color.hat[2],this.fade)
                        this.layer.fill(this.color.hat[0],this.color.hat[1],this.color.hat[2],this.fade)
                        this.layer.strokeWeight(4)
                        this.layer.line(-10,-66,10,-66)
    					this.layer.quad(-6,-66,6,-66,4,-70,-4,-70)
                    }
                    if(this.name=='Agent Duck'){
                        this.layer.noFill()
                        this.layer.stroke(240,240,40,this.fade)
                        this.layer.strokeWeight(3)
                        this.layer.strokeCap(SQUARE)
                        this.layer.arc(0.5,-86.5,15,15,-135,45)
                        this.layer.arc(-0.5,-85.5,15,15,45,225)
                        this.layer.strokeCap(ROUND)
                        this.layer.noStroke()
                        this.layer.fill(255,this.fade)
                        this.layer.textSize(12)
                        this.layer.text(this.combo,0,-85.5)
                    }
                    if(this.name=='General Duckion'&this.trigger.display.helmet){
                        this.layer.fill(this.color.helmet[0],this.color.helmet[1],this.color.helmet[2],this.fade*this.fades.helmet)
                        this.layer.noStroke()
                        this.layer.arc(0,-55,30,30,-180-lsin(this.anim.direction)*30,-lsin(this.anim.direction)*30)
                    }
                break
                case 'Management Autoduck':
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)<=0){
                            this.layer.stroke(this.flashColor(this.color.skin.out)[0],this.flashColor(this.color.skin.out)[1],this.flashColor(this.color.skin.out)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.fill(this.flashColor(this.color.skin.in)[0],this.flashColor(this.color.skin.in)[1],this.flashColor(this.color.skin.in)[2],this.fade*this.fades.skin.body)
                            this.layer.rect(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,10,10)
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.legs&&lcos(this.anim.direction+this.spin.legs[g].top)<=0){
                            this.layer.stroke(this.flashColor(this.color.skin.out)[0],this.flashColor(this.color.skin.out)[1],this.flashColor(this.color.skin.out)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.fill(this.flashColor(this.color.skin.in)[0],this.flashColor(this.color.skin.in)[1],this.flashColor(this.color.skin.in)[2],this.fade*this.fades.skin.body)
                            this.layer.rect(this.graphics.legs[g].middle.x,this.graphics.legs[g].middle.y,10,10)
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.stroke(this.flashColor(this.color.skin.out)[0],this.flashColor(this.color.skin.out)[1],this.flashColor(this.color.skin.out)[2],this.fade*this.fades.skin.arms)
                        this.layer.strokeWeight(4)
                        this.layer.fill(this.flashColor(this.color.skin.in)[0],this.flashColor(this.color.skin.in)[1],this.flashColor(this.color.skin.in)[2],this.fade*this.fades.skin.body)
                        this.layer.rect(0,-19,12,22)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.legs&&lcos(this.anim.direction+this.spin.legs[g].top)>0){
                            this.layer.stroke(this.flashColor(this.color.skin.out)[0],this.flashColor(this.color.skin.out)[1],this.flashColor(this.color.skin.out)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.fill(this.flashColor(this.color.skin.in)[0],this.flashColor(this.color.skin.in)[1],this.flashColor(this.color.skin.in)[2],this.fade*this.fades.skin.body)
                            this.layer.rect(this.graphics.legs[g].middle.x,this.graphics.legs[g].middle.y,10,10)
                        }
                    }
                    if(this.trigger.display.beak.main){
                        this.layer.stroke(this.flashColor(this.color.skin.out)[0],this.flashColor(this.color.skin.out)[1],this.flashColor(this.color.skin.out)[2],this.fade*this.fades.skin.arms)
                        this.layer.strokeWeight(4)
                        this.layer.fill(this.flashColor(this.color.skin.in)[0],this.flashColor(this.color.skin.in)[1],this.flashColor(this.color.skin.in)[2],this.fade*this.fades.skin.body)
                        this.layer.rect(lsin(this.anim.direction)*13,this.parts.beakLevel,12+2*lcos(this.anim.direction),8)
                    }
                    if(this.trigger.display.skin.head){
                        this.layer.stroke(this.flashColor(this.color.skin.out)[0],this.flashColor(this.color.skin.out)[1],this.flashColor(this.color.skin.out)[2],this.fade*this.fades.skin.arms)
                        this.layer.strokeWeight(4)
                        this.layer.fill(this.flashColor(this.color.skin.in)[0],this.flashColor(this.color.skin.in)[1],this.flashColor(this.color.skin.in)[2],this.fade*this.fades.skin.body)
                        this.layer.rect(0,-38,27,27)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)>0){
                            this.layer.stroke(this.flashColor(this.color.skin.out)[0],this.flashColor(this.color.skin.out)[1],this.flashColor(this.color.skin.out)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.fill(this.flashColor(this.color.skin.in)[0],this.flashColor(this.color.skin.in)[1],this.flashColor(this.color.skin.in)[2],this.fade*this.fades.skin.body)
                            this.layer.rect(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,10,10)
                        }
                        if(this.trigger.display.eye[g]){
                            this.layer.stroke(this.color.eye.back[0],this.color.eye.back[1],this.color.eye.back[2],this.fade*this.fades.eye[g])
                            this.layer.strokeWeight((2.5-this.anim.eye[g]*1.5)*constrain(lcos(this.spin.eye[g]+this.anim.direction)*5,0,1))
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*13-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*13+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel-this.anim.eye[g]*2)
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*13-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*13+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel+this.anim.eye[g]*2)
                        }
                    }
                    if(this.trigger.display.beak.main&&lcos(this.anim.direction)>0){
                        this.layer.stroke(this.flashColor(this.color.skin.out)[0],this.flashColor(this.color.skin.out)[1],this.flashColor(this.color.skin.out)[2],this.fade*this.fades.skin.arms)
                        this.layer.strokeWeight(4)
                        this.layer.fill(this.flashColor(this.color.skin.in)[0],this.flashColor(this.color.skin.in)[1],this.flashColor(this.color.skin.in)[2],this.fade*this.fades.skin.body)
                        this.layer.rect(lsin(this.anim.direction)*13,this.parts.beakLevel,12+2*lcos(this.anim.direction)-max(0,lsin(this.anim.direction)-0.5)*24,8)
                    }
                break
                case 'Orb Walker':
                    if(this.trigger.display.cover){
                        this.layer.noStroke()
                        for(let a=0,la=2;a<la;a++){
                            if(lcos(-90+a*180+this.anim.direction)<=0){
                                this.layer.fill(this.flashColor(this.color.cover)[0],this.flashColor(this.color.cover)[1],this.flashColor(this.color.cover)[2],this.fade*this.fades.cover)
                                this.layer.quad(lsin(-90+a*180+this.anim.direction)*18,-6,-24*lcos(-90+a*180+this.anim.direction)+lsin(-90+a*180+this.anim.direction)*18,-30,lsin(-90+a*180+this.anim.direction)*18,-54,24*lcos(-90+a*180+this.anim.direction)+lsin(-90+a*180+this.anim.direction)*18,-30)
                                this.layer.fill(this.flashColor(this.color.outer)[0],this.flashColor(this.color.outer)[1],this.flashColor(this.color.outer)[2],this.fade*this.fades.cover)
                                this.layer.quad(lsin(-90+a*180+this.anim.direction)*18,-6,-3*lcos(-90+a*180+this.anim.direction)+lsin(-90+a*180+this.anim.direction)*18,-30,lsin(-90+a*180+this.anim.direction)*18,-54,3*lcos(-90+a*180+this.anim.direction)+lsin(-90+a*180+this.anim.direction)*18,-30)
                                this.layer.quad(lsin(-90+a*180+this.anim.direction)*18,-27,-24*lcos(-90+a*180+this.anim.direction)+lsin(-90+a*180+this.anim.direction)*18,-30,lsin(-90+a*180+this.anim.direction)*18,-33,24*lcos(-90+a*180+this.anim.direction)+lsin(-90+a*180+this.anim.direction)*18,-30)
                            }
                        }
                    }
                    if(this.trigger.display.legs){
                        this.layer.noStroke()
                        for(let a=0,la=4;a<la;a++){
                            if(lcos(this.anim.direction+this.spin.legs[a].top)<=0){
                                this.layer.fill(this.flashColor(upColor(this.color.cover,40*lcos(this.anim.direction+this.spin.legs[a].top),[1,1,1]))[0],this.flashColor(upColor(this.color.cover,40*lcos(this.anim.direction+this.spin.legs[a].top),[1,1,1]))[1],this.flashColor(upColor(this.color.cover,40*lcos(this.anim.direction+this.spin.legs[a].top),[1,1,1]))[2],this.fade*this.fades.cover)
                                regTriangle(this.layer,this.graphics.legs[a].middle.x,this.graphics.legs[a].middle.y,8,8,atan2(this.graphics.legs[a].middle.x,30+this.graphics.legs[a].middle.y))
                            }
                        }
                    }
                    if(this.trigger.display.body){
                        this.layer.noStroke()
                        for(let a=0,la=10;a<la;a++){
                            this.layer.fill(this.flashColor(mergeColor(this.color.body[0],this.color.body[1],a/la))[0],this.flashColor(mergeColor(this.color.body[0],this.color.body[1],a/la))[1],this.flashColor(mergeColor(this.color.body[0],this.color.body[1],a/la))[2],this.fade*this.fades.body)
                            this.layer.ellipse(0,-30,40*(1-a/la),40*(1-a/la))
                        }
                    }
                    if(this.trigger.display.legs){
                        this.layer.noStroke()
                        for(let a=0,la=4;a<la;a++){
                            if(lcos(this.anim.direction+this.spin.legs[a].top)>0){
                                this.layer.fill(this.flashColor(upColor(this.color.cover,40*lcos(this.anim.direction+this.spin.legs[a].top),[1,1,1]))[0],this.flashColor(upColor(this.color.cover,40*lcos(this.anim.direction+this.spin.legs[a].top),[1,1,1]))[1],this.flashColor(upColor(this.color.cover,40*lcos(this.anim.direction+this.spin.legs[a].top),[1,1,1]))[2],this.fade*this.fades.cover)
                                regTriangle(this.layer,this.graphics.legs[a].middle.x,this.graphics.legs[a].middle.y,8,8,atan2(this.graphics.legs[a].middle.x,30+this.graphics.legs[a].middle.y))
                            }
                        }
                    }
                    if(this.trigger.display.cover){
                        this.layer.noStroke()
                        for(let a=0,la=2;a<la;a++){
                            if(lcos(-90+a*180+this.anim.direction)>0){
                                this.layer.fill(this.flashColor(this.color.cover)[0],this.flashColor(this.color.cover)[1],this.flashColor(this.color.cover)[2],this.fade*this.fades.cover)
                                this.layer.quad(lsin(-90+a*180+this.anim.direction)*18,-6,-24*lcos(-90+a*180+this.anim.direction)+lsin(-90+a*180+this.anim.direction)*18,-30,lsin(-90+a*180+this.anim.direction)*18,-54,24*lcos(-90+a*180+this.anim.direction)+lsin(-90+a*180+this.anim.direction)*18,-30)
                                this.layer.fill(this.flashColor(this.color.outer)[0],this.flashColor(this.color.outer)[1],this.flashColor(this.color.outer)[2],this.fade*this.fades.cover)
                                this.layer.quad(lsin(-90+a*180+this.anim.direction)*18,-6,-3*lcos(-90+a*180+this.anim.direction)+lsin(-90+a*180+this.anim.direction)*18,-30,lsin(-90+a*180+this.anim.direction)*18,-54,3*lcos(-90+a*180+this.anim.direction)+lsin(-90+a*180+this.anim.direction)*18,-30)
                                this.layer.quad(lsin(-90+a*180+this.anim.direction)*18,-27,-24*lcos(-90+a*180+this.anim.direction)+lsin(-90+a*180+this.anim.direction)*18,-30,lsin(-90+a*180+this.anim.direction)*18,-33,24*lcos(-90+a*180+this.anim.direction)+lsin(-90+a*180+this.anim.direction)*18,-30)
                            }
                        }
                    }
                break
                case 'Modicum':
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)<=0){
                            this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[2],this.fade*this.fades.skin.arms)
                            this.layer.noStroke()
                            this.layer.rect(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,11.2,11.2)
                            this.layer.ellipse(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,12.8,12.8)
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.noStroke()
      					this.layer.rect(0,-14,22.4,22.4)
                        this.layer.ellipse(0,-14,25.6,25.6)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)>0){
                            this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[2],this.fade*this.fades.skin.arms)
                            this.layer.noStroke()
                            this.layer.rect(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,11.2,11.2)
                            this.layer.ellipse(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,12.8,12.8)
                        }
                        if(this.trigger.display.eye[g]){
                            this.layer.stroke(this.color.eye.back[0],this.color.eye.back[1],this.color.eye.back[2],this.fade*this.fades.eye[g])
                            this.layer.strokeWeight((4-this.anim.eye[g]*3)*constrain(lcos(this.spin.eye[g]+this.anim.direction)*4,0,1))
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*11-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*11+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel-this.anim.eye[g]*2)
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*11-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*11+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel+this.anim.eye[g]*2)
                        }
                    }
                break
                case 'Slime': case 'Spike Slime': case 'Slimoid':
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)<=0){
                            if(this.name=='Spike Slime'){
                                this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[2],this.fade*this.fades.skin.arms)
                            }else{
                                this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[2],this.fade*this.fades.skin.arms)
                            }
                            this.layer.noStroke()
                            if(this.name=='Slimoid'){
                                this.layer.rect(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,14,14)
                            }
                            this.layer.ellipse(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,16,16)
                            if(this.name=='Spike Slime'){
                                for(let a=0,la=9;a<la;a++){
                                    this.layer.triangle(this.graphics.arms[g].middle.x+lsin(a*40-16)*12,this.graphics.arms[g].middle.y+lcos(a*40-16)*12,this.graphics.arms[g].middle.x+lsin(a*40-16)*7+lcos(a*40-16)*2,this.graphics.arms[g].middle.y+lcos(a*40-16)*7-lsin(a*40-16)*2,this.graphics.arms[g].middle.x+lsin(a*40-16)*7-lcos(a*40-16)*2,this.graphics.arms[g].middle.y+lcos(a*40-16)*7+lsin(a*40-16)*2)
                                }
                            }
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.noStroke()
      					this.layer.ellipse(0,-20,60,45)
                        switch(this.name){
                            case 'Spike Slime':
                                for(let a=0,la=18;a<la;a++){
                                    this.layer.triangle(lsin(a*20-8)*28,lcos(a*20-8)*21-20,lsin(a*20+8)*28,lcos(a*20+8)*21-20,lsin(a*20)*36,lcos(a*20)*27-20)
                                }
                            break
                            case 'Slimoid':
                                this.layer.rect(0,-20,12,46)
                                this.layer.rect(-12,-20,12,42)
                                this.layer.rect(-24,-20,12,20)
                                this.layer.rect(12,-20,12,42)
                                this.layer.rect(24,-20,12,20)
                            break
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)>0){
                            if(this.name=='Spike Slime'){
                                this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[2],this.fade*this.fades.skin.arms)
                            }else{
                                this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[2],this.fade*this.fades.skin.arms)
                            }
                            this.layer.noStroke()
                            if(this.name=='Slimoid'){
                                this.layer.rect(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,14,14)
                            }
                            this.layer.ellipse(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,16,16)
                            if(this.name=='Spike Slime'){
                                for(let a=0,la=9;a<la;a++){
                                    this.layer.triangle(this.graphics.arms[g].middle.x+lsin(a*40-16)*12,this.graphics.arms[g].middle.y+lcos(a*40-16)*12,this.graphics.arms[g].middle.x+lsin(a*40-16)*7+lcos(a*40-16)*2,this.graphics.arms[g].middle.y+lcos(a*40-16)*7-lsin(a*40-16)*2,this.graphics.arms[g].middle.x+lsin(a*40-16)*7-lcos(a*40-16)*2,this.graphics.arms[g].middle.y+lcos(a*40-16)*7+lsin(a*40-16)*2)
                                }
                            }
                        }
                        if(this.trigger.display.eye[g]){
                            this.layer.stroke(this.color.eye.back[0],this.color.eye.back[1],this.color.eye.back[2],this.fade*this.fades.eye[g])
                            this.layer.strokeWeight((5-this.anim.eye[g]*3)*constrain(lcos(this.spin.eye[g]+this.anim.direction)*5,0,1))
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*24-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*24+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel-this.anim.eye[g]*2)
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*24-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*24+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel+this.anim.eye[g]*2)
                        }
                    }
                break
                case 'Big Slime': case 'Big Spike Slime': case 'Big Slimoid':
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)<=0){
                            if(this.name=='Big Spike Slime'){
                                this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[2],this.fade*this.fades.skin.arms)
                            }else{
                                this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[2],this.fade*this.fades.skin.arms)
                            }
                            this.layer.noStroke()
                            if(this.name=='Big Slimoid'){
                                this.layer.rect(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,21,21)
                            }
                            this.layer.ellipse(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,24,24)
                            if(this.name=='Big Spike Slime'){
                                for(let a=0,la=9;a<la;a++){
                                    this.layer.triangle(this.graphics.arms[g].middle.x+lsin(a*40-16)*18,this.graphics.arms[g].middle.y+lcos(a*40-16)*18,this.graphics.arms[g].middle.x+lsin(a*40-16)*10.5+lcos(a*40-16)*3,this.graphics.arms[g].middle.y+lcos(a*40-16)*10.5-lsin(a*40-16)*3,this.graphics.arms[g].middle.x+lsin(a*40-16)*10.5-lcos(a*40-16)*3,this.graphics.arms[g].middle.y+lcos(a*40-16)*10.5+lsin(a*40-16)*3)
                                }
                            }
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-30,90,67.5)
                        switch(this.name){
                            case 'Big Spike Slime':
                                for(let a=0,la=18;a<la;a++){
                                    this.layer.triangle(lsin(a*20-8)*42,lcos(a*20-8)*31.5-30,lsin(a*20+8)*42,lcos(a*20+8)*31.5-30,lsin(a*20)*54,lcos(a*20)*40.5-30)
                                }
                            break
                            case 'Big Slimoid':
                                this.layer.rect(0,-30,18,69)
                                this.layer.rect(-18,-30,18,63)
                                this.layer.rect(-36,-30,18,30)
                                this.layer.rect(18,-30,18,63)
                                this.layer.rect(36,-30,18,30)
                            break
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)>0){
                            if(this.name=='Big Spike Slime'){
                                this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[2],this.fade*this.fades.skin.arms)
                            }else{
                                this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[2],this.fade*this.fades.skin.arms)
                            }
                            this.layer.noStroke()
                            if(this.name=='Big Slimoid'){
                                this.layer.rect(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,21,21)
                            }
                            this.layer.ellipse(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,24,24)
                            if(this.name=='Big Spike Slime'){
                                for(let a=0,la=9;a<la;a++){
                                    this.layer.triangle(this.graphics.arms[g].middle.x+lsin(a*40-16)*18,this.graphics.arms[g].middle.y+lcos(a*40-16)*18,this.graphics.arms[g].middle.x+lsin(a*40-16)*10.5+lcos(a*40-16)*3,this.graphics.arms[g].middle.y+lcos(a*40-16)*10.5-lsin(a*40-16)*3,this.graphics.arms[g].middle.x+lsin(a*40-16)*10.5-lcos(a*40-16)*3,this.graphics.arms[g].middle.y+lcos(a*40-16)*10.5+lsin(a*40-16)*3)
                                }
                            }
                        }
                        if(this.trigger.display.eye[g]){
                            this.layer.stroke(this.color.eye.back[0],this.color.eye.back[1],this.color.eye.back[2],this.fade*this.fades.eye[g])
                            this.layer.strokeWeight((5-this.anim.eye[g]*3)*constrain(lcos(this.spin.eye[g]+this.anim.direction)*5,0,1))
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*36-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*36+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel-this.anim.eye[g]*2)
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*36-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*36+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel+this.anim.eye[g]*2)
                        }
                    }
                break
                case 'Slime Boss':
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)<=0){
                            this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[2],this.fade*this.fades.skin.arms)
                            this.layer.noStroke()
                            this.layer.ellipse(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,36,36)
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-45,135,101.25)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)>0){
                            this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[2],this.fade*this.fades.skin.arms)
                            this.layer.noStroke()
                            this.layer.ellipse(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,36,36)
                        }
                        if(this.trigger.display.eye[g]){
                            this.layer.stroke(this.color.eye.back[0],this.color.eye.back[1],this.color.eye.back[2],this.fade*this.fades.eye[g])
                            this.layer.strokeWeight((5-this.anim.eye[g]*3)*constrain(lcos(this.spin.eye[g]+this.anim.direction)*5,0,1))
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*54-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*54+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel-this.anim.eye[g]*2)
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*54-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*54+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel+this.anim.eye[g]*2)
                        }
                    }
                break
                case 'Spheron':
                    if(this.trigger.display.balls){
                        this.layer.noStroke()
                        for(let a=0,la=3;a<la;a++){
                            if(lcos(this.time*4+360*a/la)<=0){
                                this.layer.fill(this.flashColor(upColor(this.color.balls,lcos(this.time*4+360*a/la)*40,[1,1,1]))[0],this.flashColor(upColor(this.color.balls,lcos(this.time*4+360*a/la)*20,[1,1,1]))[1],this.flashColor(upColor(this.color.balls,lcos(this.time*4+360*a/la)*20,[1,1,1]))[2],this.fade*this.fades.balls)
                                this.layer.ellipse(lsin(this.time*4+360*a/la)*24,lcos(this.time*4+360*a/la)*4-30,10,10)
                                this.layer.fill(this.flashColor(upColor(this.color.highlight,lcos(this.time*4+360*a/la)*40,[1,1,1]))[0],this.flashColor(upColor(this.color.highlight,lcos(this.time*4+360*a/la)*20,[1,1,1]))[1],this.flashColor(upColor(this.color.highlight,lcos(this.time*4+360*a/la)*20,[1,1,1]))[2],this.fade*this.fades.balls)
                                this.layer.ellipse(lsin(this.time*4+360*a/la)*24,lcos(this.time*4+360*a/la)*4-30,4,4)
                            }
                        }
                    }
                    if(this.trigger.display.body){
                        this.layer.fill(this.flashColor(this.color.body)[0],this.flashColor(this.color.body)[1],this.flashColor(this.color.body)[2],this.fade*this.fades.body)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-30,30,30)
                        this.layer.translate(0,-30)
                        this.layer.rotate(this.time)
                        this.layer.stroke(this.flashColor(this.color.highlight)[0],this.flashColor(this.color.highlight)[1],this.flashColor(this.color.highlight)[2],this.fade*this.fades.body)
                        this.layer.strokeWeight(3)
                        for(let a=0,la=3;a<3;a++){
                            this.layer.arc(8,0,16,12,-180,-30)
                            this.layer.rotate(360/la)
                        }
                        this.layer.rotate(-this.time)
                        this.layer.translate(0,30)
                    }
                    if(this.trigger.display.balls){
                        this.layer.noStroke()
                        for(let a=0,la=3;a<la;a++){
                            if(lcos(this.time*4+360*a/la)>0){
                                this.layer.fill(this.flashColor(upColor(this.color.balls,lcos(this.time*4+360*a/la)*40,[1,1,1]))[0],this.flashColor(upColor(this.color.balls,lcos(this.time*4+360*a/la)*20,[1,1,1]))[1],this.flashColor(upColor(this.color.balls,lcos(this.time*4+360*a/la)*20,[1,1,1]))[2],this.fade*this.fades.balls)
                                this.layer.ellipse(lsin(this.time*4+360*a/la)*24,lcos(this.time*4+360*a/la)*4-30,10,10)
                                this.layer.fill(this.flashColor(upColor(this.color.highlight,lcos(this.time*4+360*a/la)*40,[1,1,1]))[0],this.flashColor(upColor(this.color.highlight,lcos(this.time*4+360*a/la)*20,[1,1,1]))[1],this.flashColor(upColor(this.color.highlight,lcos(this.time*4+360*a/la)*20,[1,1,1]))[2],this.fade*this.fades.balls)
                                this.layer.ellipse(lsin(this.time*4+360*a/la)*24,lcos(this.time*4+360*a/la)*4-30,4,4)
                            }
                        }
                    }
                break
                case 'Rock Golem':
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)<=0){
                            this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.arms)
                            this.layer.noStroke()
                            regPoly(this.layer,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,8,10,10,0)
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.noStroke()
    					regPoly(this.layer,0,-48,8,16,16,0)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)>0){
                            this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.arms)
                            this.layer.noStroke()
                            regPoly(this.layer,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,8,10,10,0)
                        }
                        if(this.trigger.display.eye[g]){
                            this.layer.stroke(this.color.eye.back[0],this.color.eye.back[1],this.color.eye.back[2],this.fade*this.fades.eye[g])
                            this.layer.strokeWeight((5-this.anim.eye[g]*3)*constrain(lcos(this.spin.eye[g]+this.anim.direction)*5,0,1))
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*15-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*15+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel-this.anim.eye[g]*2)
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*15-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*15+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel+this.anim.eye[g]*2)
                        }
                    }
                break
                case 'Shield Particle':
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)<=0){
                            this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.arms)
                            this.layer.noStroke()
                            this.layer.ellipse(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,18)
                            this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body*0.2)
                            for(let a=0,la=3;a<la;a++){
                                this.layer.ellipse(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,22+a*4)
                            }
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-48,36)
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body*0.2)
                        for(let a=0,la=3;a<la;a++){
                            this.layer.ellipse(0,-48,40+a*4)
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)>0){
                            this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.arms)
                            this.layer.noStroke()
                            this.layer.ellipse(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,18)
                            this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body*0.2)
                            for(let a=0,la=3;a<la;a++){
                                this.layer.ellipse(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,22+a*4)
                            }
                        }
                        if(this.trigger.display.eye[g]){
                            this.layer.stroke(this.color.eye.back[0],this.color.eye.back[1],this.color.eye.back[2],this.fade*this.fades.eye[g])
                            this.layer.strokeWeight((5-this.anim.eye[g]*3)*constrain(lcos(this.spin.eye[g]+this.anim.direction)*5,0,1))
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*18-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*18+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel-this.anim.eye[g]*2)
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*18-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*18+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel+this.anim.eye[g]*2)
                        }
                    }
                break
                case 'Goblin': case 'Sneaky Gremlin': case 'Fat Gremlin': case 'Angry Gremlin': case 'Gremlin': case 'Elf Archer':
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(this.anim.thick)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        switch(this.name){
                            case 'Goblin':
                                this.layer.ellipse(0,-24,12,24)
                            break
                            case 'Sneaky Gremlin':
                                this.layer.ellipse(0,-30,8,30)
                            break
                            case 'Fat Gremlin':
                                this.layer.ellipse(0,-27,21,27)
                            break
                            case 'Angry Gremlin':
                                this.layer.ellipse(0,-42,12,33)
                            break
                            case 'Gremlin':
                                this.layer.ellipse(0,-33,9,36)
                            break
                            case 'Elf Archer':
                                this.layer.ellipse(0,-39,14,28)
                                this.layer.fill(this.flashColor(this.color.skin.upperBody)[0],this.flashColor(this.color.skin.upperBody)[1],this.flashColor(this.color.skin.upperBody)[2],this.fade*this.fades.skin.body)
                                this.layer.arc(0,-39,14,29,-180,0)
                            break
                        }
                    }
                    if(this.name=='Elf Archer'&&this.trigger.display.waistband){
                        this.layer.fill(this.flashColor(this.color.waistband)[0],this.flashColor(this.color.waistband)[1],this.flashColor(this.color.waistband)[2],this.fade*this.fades.waistband)
                        this.layer.noStroke()
                        for(let a=0,la=18;a<la;a++){
                            this.layer.ellipse(lsin(this.anim.direction+a*20)*7,-39,lcos(this.anim.direction+a*20)*2,5)
                        }
                    }
                    if(this.name=='Elf Archer'&&this.trigger.display.belt){
                        this.layer.fill(this.flashColor(this.color.belt)[0],this.flashColor(this.color.belt)[1],this.flashColor(this.color.belt)[2],this.fade*this.fades.belt)
                        this.layer.noStroke()
                        this.layer.rect(0,-39,14,1)
                    }
                    if(this.name=='Elf Archer'&&this.trigger.display.bows){
                        this.layer.fill(this.flashColor(this.color.bows)[0],this.flashColor(this.color.bows)[1],this.flashColor(this.color.bows)[2],this.fade*this.fades.bows)
                        this.layer.noStroke()
                        for(let a=0,la=2;a<la;a++){
                            if(lcos(this.anim.direction-90+a*180)>0){
                                this.layer.triangle(lsin(this.anim.direction-90+a*180)*7,-39,lsin(this.anim.direction-90+a*180)*7-lcos(this.anim.direction-90+a*180)*8,-42,lsin(this.anim.direction-90+a*180)*7-lcos(this.anim.direction-90+a*180)*8,-36)
                                this.layer.triangle(lsin(this.anim.direction-90+a*180)*7,-39,lsin(this.anim.direction-90+a*180)*7+lcos(this.anim.direction-90+a*180)*8,-42,lsin(this.anim.direction-90+a*180)*7+lcos(this.anim.direction-90+a*180)*8,-36)
                            }
                        }
                    }
                    if(this.name=='Elf Archer'&&this.trigger.display.scarf){
                        this.layer.fill(this.flashColor(this.color.scarf)[0],this.flashColor(this.color.scarf)[1],this.flashColor(this.color.scarf)[2],this.fade*this.fades.scarf)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-51,12,6)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(this.anim.thick)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        for(let h=0;h<2;h++){
                            if((g==0&&h==0||g==1&&h==1)&&lcos(this.spin.legs[0].bottom+this.anim.direction)<=lcos(this.spin.legs[1].bottom+this.anim.direction)||(g==0&&h==1||g==1&&h==0)&&lcos(this.spin.legs[0].bottom+this.anim.direction)>lcos(this.spin.legs[1].bottom+this.anim.direction)){
                                if(this.trigger.display.skin.legs){
                                    this.layer.stroke(this.flashColor(this.color.skin.legs)[0],this.flashColor(this.color.skin.legs)[1],this.flashColor(this.color.skin.legs)[2],this.fade*this.fades.skin.legs)
                                    this.layer.strokeWeight(this.anim.thick)
                                    this.layer.line(this.graphics.legs[h].top.x,this.graphics.legs[h].top.y,this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y)
                                    this.layer.line(this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y,this.graphics.legs[h].bottom.x,this.graphics.legs[h].bottom.y)
                                }
                            }
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.4&&lcos(this.spin.arms[g].top+this.anim.direction)<0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(this.anim.thick,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                    }
                    if(this.trigger.display.skin.head){
                        this.layer.fill(this.flashColor(this.color.skin.head)[0],this.flashColor(this.color.skin.head)[1],this.flashColor(this.color.skin.head)[2],this.fade*this.fades.skin.head)
                        this.layer.noStroke()
                        switch(this.name){
                            case 'Goblin':
                                this.layer.ellipse(0,-45,24,24)
                            break
                            case 'Sneaky Gremlin':
                                this.layer.ellipse(0,-54,24,27)
                            break
                            case 'Fat Gremlin':
                                this.layer.ellipse(0,-48,30,27)
                            break
                            case 'Angry Gremlin':
                                this.layer.ellipse(0,-66,24,24)
                            break
                            case 'Gremlin':
                                this.layer.ellipse(0,-60,27,27)
                            break
                            case 'Elf Archer':
                                this.layer.ellipse(0,-64.5,27,27)
                            break
                        }
                        if(this.trigger.display.ear&&abs(lcos(this.anim.direction)>0.1)){
                            switch(this.name){
                                case 'Goblin':
                                    this.layer.triangle(-9*lcos(this.anim.direction),-48,-3*lcos(this.anim.direction),-54,-12*lcos(this.anim.direction),-57)
                                    this.layer.triangle(9*lcos(this.anim.direction),-48,3*lcos(this.anim.direction),-54,12*lcos(this.anim.direction),-57)
                                break
                                case 'Sneaky Gremlin':
                                    this.layer.triangle(-9*lcos(this.anim.direction),-57,-3*lcos(this.anim.direction),-63,-18*lcos(this.anim.direction),-61)
                                    this.layer.triangle(9*lcos(this.anim.direction),-57,3*lcos(this.anim.direction),-63,18*lcos(this.anim.direction),-61)
                                break
                                case 'Fat Gremlin':
                                    this.layer.triangle(-9*lcos(this.anim.direction),-51,-3*lcos(this.anim.direction),-57,-18*lcos(this.anim.direction),-55)
                                    this.layer.triangle(9*lcos(this.anim.direction),-51,3*lcos(this.anim.direction),-57,18*lcos(this.anim.direction),-55)
                                break
                                case 'Angry Gremlin':
                                    this.layer.triangle(-8*lcos(this.anim.direction),-69,-2*lcos(this.anim.direction),-75,-16*lcos(this.anim.direction),-73)
                                    this.layer.triangle(8*lcos(this.anim.direction),-69,2*lcos(this.anim.direction),-75,16*lcos(this.anim.direction),-73)
                                break
                                case 'Gremlin':
                                    this.layer.triangle(-9*lcos(this.anim.direction),-63,-3*lcos(this.anim.direction),-69,-18*lcos(this.anim.direction),-67)
                                    this.layer.triangle(9*lcos(this.anim.direction),-63,3*lcos(this.anim.direction),-69,18*lcos(this.anim.direction),-67)
                                break
                                case 'Elf Archer':
                                    this.layer.triangle(-12*lcos(this.anim.direction),-67,-8*lcos(this.anim.direction),-73,-21*lcos(this.anim.direction),-74)
                                    this.layer.triangle(12*lcos(this.anim.direction),-67,8*lcos(this.anim.direction),-73,21*lcos(this.anim.direction),-74)
                                break
                            }
                        }
                    }
                    if(this.trigger.display.mouth&&lcos(this.anim.direction)>0.1){
                        this.minorDisplayGeneral(1,0)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>=0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(this.anim.thick,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].bottom+this.anim.direction)>=0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(this.anim.thick)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        if(this.trigger.display.eye[g]){
                            this.minorDisplayGeneral(0,g)
                        }
                    }
                break
                case 'Fat Scrapper':
                    if(this.name=='Fat Scrapper'&&this.trigger.display.goggles&&lcos(this.anim.direction)<=0){
                        this.layer.fill(this.flashColor(this.color.goggles)[0],this.flashColor(this.color.goggles)[1],this.flashColor(this.color.goggles)[2],this.fade*this.fades.goggles)
                        this.layer.stroke(120,120,120,this.fade)
	    				this.layer.strokeWeight(2)
    					this.layer.rect(lsin(this.anim.direction)*15.5,this.parts.eyeLevel,lcos(this.anim.direction)*20,7,2)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.ellipse(0,-39,36,30)
                    }
                    if(this.name=='Fat Scrapper'&&this.trigger.display.belt){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.belt[0])[0],this.flashColor(this.color.belt[0])[1],this.flashColor(this.color.belt[0])[2],this.fade*this.fades.belt)
                        this.layer.rect(0,-39,38,3)
                        if(lcos(this.anim.direction)>0){
                            this.layer.fill(this.flashColor(this.color.belt[1])[0],this.flashColor(this.color.belt[1])[1],this.flashColor(this.color.belt[1])[2],this.fade*this.fades.belt)
                            this.layer.rect(lsin(this.anim.direction)*19,-39,8*lcos(this.anim.direction),8)
                            this.layer.fill(this.flashColor(this.color.belt[2])[0],this.flashColor(this.color.belt[2])[1],this.flashColor(this.color.belt[2])[2],this.fade*this.fades.belt)
                            this.layer.rect(lsin(this.anim.direction)*19,-39,4*lcos(this.anim.direction),4)
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        for(let h=0;h<2;h++){
                            if((g==0&&h==0||g==1&&h==1)&&lcos(this.spin.legs[0].bottom+this.anim.direction)<=lcos(this.spin.legs[1].bottom+this.anim.direction)||(g==0&&h==1||g==1&&h==0)&&lcos(this.spin.legs[0].bottom+this.anim.direction)>lcos(this.spin.legs[1].bottom+this.anim.direction)){
                                if(this.trigger.display.skin.legs){
                                    this.layer.stroke(this.flashColor(this.color.skin.legs)[0],this.flashColor(this.color.skin.legs)[1],this.flashColor(this.color.skin.legs)[2],this.fade*this.fades.skin.legs)
                                    this.layer.strokeWeight(4)
                                    this.layer.line(this.graphics.legs[h].top.x,this.graphics.legs[h].top.y,this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y)
                                    this.layer.line(this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y,this.graphics.legs[h].bottom.x,this.graphics.legs[h].bottom.y)
                                }
                            }
                        }
                    }for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.4&&lcos(this.spin.arms[g].top+this.anim.direction)<0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                    }
                    if(this.trigger.display.skin.head){
                        this.layer.fill(this.flashColor(this.color.skin.head)[0],this.flashColor(this.color.skin.head)[1],this.flashColor(this.color.skin.head)[2],this.fade*this.fades.skin.head)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-66,30,30)
                    }
                    if(this.trigger.display.mouth&&lcos(this.anim.direction)>0.1){
                        this.minorDisplayGeneral(1,0)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>=0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].bottom+this.anim.direction)>=0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        if(this.trigger.display.eye[g]){
                            this.minorDisplayGeneral(0,g)
                        }
                    }
                    if(this.name=='Fat Scrapper'&&this.trigger.display.goggles&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.flashColor(this.color.goggles)[0],this.flashColor(this.color.goggles)[1],this.flashColor(this.color.goggles)[2],this.fade*this.fades.goggles)
                        this.layer.stroke(120,120,120,this.fade)
	    				this.layer.strokeWeight(2)
    					this.layer.rect(lsin(this.anim.direction)*15.5,this.parts.eyeLevel,lcos(this.anim.direction)*20,7,2)
                    }
                break
                case 'Donu': case 'Deca':
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        for(let h=0;h<2;h++){
                            if((g==0&&h==0||g==1&&h==1)&&lcos(this.spin.legs[0].bottom+this.anim.direction)<=lcos(this.spin.legs[1].bottom+this.anim.direction)||(g==0&&h==1||g==1&&h==0)&&lcos(this.spin.legs[0].bottom+this.anim.direction)>lcos(this.spin.legs[1].bottom+this.anim.direction)){
                                if(this.trigger.display.skin.legs){
                                    this.layer.stroke(this.flashColor(this.color.skin.legs)[0],this.flashColor(this.color.skin.legs)[1],this.flashColor(this.color.skin.legs)[2],this.fade*this.fades.skin.legs)
                                    this.layer.strokeWeight(4)
                                    this.layer.line(this.graphics.legs[h].top.x,this.graphics.legs[h].top.y,this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y)
                                    this.layer.line(this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y,this.graphics.legs[h].bottom.x,this.graphics.legs[h].bottom.y)
                                }
                            }
                        }
                    }
                    if(this.trigger.display.skin.body){
                        switch(this.name){
                            case 'Donu':
                                this.layer.noFill()
                                for(let a=0,la=2;a<la;a++){
                                    this.layer.stroke(
                                        this.flashColor(mergeColor(this.color.skin.body[0],this.color.skin.body[1],0.5+0.25*lcos(this.anim.direction+(lsin(this.anim.direction)<0?-1:1)*(-90+a*180))))[0],
                                        this.flashColor(mergeColor(this.color.skin.body[0],this.color.skin.body[1],0.5+0.25*lcos(this.anim.direction+(lsin(this.anim.direction)<0?-1:1)*(-90+a*180))))[1],
                                        this.flashColor(mergeColor(this.color.skin.body[0],this.color.skin.body[1],0.5+0.25*lcos(this.anim.direction+(lsin(this.anim.direction)<0?-1:1)*(-90+a*180))))[2],this.fade*this.fades.skin.body)
                                    this.layer.strokeWeight(30)
                                    this.layer.arc(0,-55,60*(abs(lsin(this.anim.direction+(lsin(this.anim.direction)<0?-1:1)*(-90+a*180)))*0.95+0.05),60,-90+a*180+(lsin(this.anim.direction)<0?180:0),90+a*180+(lsin(this.anim.direction)<0?180:0))
                                }
                            break
                            case 'Deca':
                                this.layer.noStroke()
                                for(let a=0,la=4;a<la;a++){
                                    if(lcos(-45+a*90+this.anim.direction)>0){
                                        this.layer.fill(this.flashColor(this.color.skin.body[a])[0],this.flashColor(this.color.skin.body[a])[1],this.flashColor(this.color.skin.body[a])[2],this.fade*this.fades.skin.body)
                                        this.layer.triangle(0,-100,lsin(-45+a*90+this.anim.direction)*32-lcos(-45+a*90+this.anim.direction)*32,-55,lsin(-45+a*90+this.anim.direction)*32+lcos(-45+a*90+this.anim.direction)*32,-55)
                                        this.layer.fill(this.flashColor(this.color.skin.body[(a+2)%4])[0],this.flashColor(this.color.skin.body[(a+2)%4])[1],this.flashColor(this.color.skin.body[(a+2)%4])[2],this.fade*this.fades.skin.body)
                                        this.layer.triangle(0,-10,lsin(-45+a*90+this.anim.direction)*32-lcos(-45+a*90+this.anim.direction)*32,-55,lsin(-45+a*90+this.anim.direction)*32+lcos(-45+a*90+this.anim.direction)*32,-55)
                                    }
                                }
                            break
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.4){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                    }
                break
                case 'Flame':
                    this.layer.fill(this.flashColor(this.color)[0],this.flashColor(this.color)[1],this.flashColor(this.color)[2],this.fade)
                    this.layer.quad(0,-30-6*this.anim.glow,-6*this.anim.glow,-30,0,-30+6*this.anim.glow,6*this.anim.glow,-30)
                    regTriangle(this.layer,lsin(this.anim.direction)*18*this.anim.glow,-30+lcos(this.anim.direction)*18*this.anim.glow,3,3,this.anim.direction)
                    this.layer.fill(this.flashColor(this.color)[0],this.flashColor(this.color)[1],this.flashColor(this.color)[2],this.fade/6)
                    for(let a=0,la=5;a<la;a++){
                        this.layer.quad(0,-30+(-7.5-a*1.5)*this.anim.glow,(-7.5-a*1.5)*this.anim.glow,-30,0,-30+(7.5+a*1.5)*this.anim.glow,(7.5+a*1.5)*this.anim.glow,-30)
                        regTriangle(this.layer,lsin(this.anim.direction)*18*this.anim.glow,-30+lcos(this.anim.direction)*18*this.anim.glow,4.5+a*1.5,4.5+a*1.5,this.anim.direction)
                    }
                break
                case 'Hexaghost Orb':
                    this.layer.fill(this.flashColor(this.color)[0],this.flashColor(this.color)[1],this.flashColor(this.color)[2],this.fade)
                    this.layer.ellipse(0,-30,12*this.anim.glow,12*this.anim.glow)
                    this.layer.fill(this.flashColor(this.color)[0],this.flashColor(this.color)[1],this.flashColor(this.color)[2],this.fade/6)
                    for(let a=0,la=5;a<la;a++){
                        this.layer.ellipse(0,-30,(15+a*3)*this.anim.glow,(15+a*3)*this.anim.glow)
                    }
                break
                case 'Hexaghost Core':
                    if(this.trigger.display.glow){
                        for(let a=0,la=6;a<la;a++){
                            this.layer.fill(this.flashColor(this.color.glow[a])[0],this.flashColor(this.color.glow[a])[1],this.flashColor(this.color.glow[a])[2],this.fade/6)
                            this.layer.ellipse(0,-30,(90-a*10)*this.anim.glow,(90-a*10)*this.anim.glow)
                        }
                    }
                    if(this.trigger.display.base){
                        this.layer.fill(this.flashColor(this.color.base[0])[0],this.flashColor(this.color.base[0])[1],this.flashColor(this.color.base[0])[2],this.fade)
                        regPoly(this.layer,-2,-30,6,18,18,0)
                        this.layer.fill(this.flashColor(this.color.base[1])[0],this.flashColor(this.color.base[1])[1],this.flashColor(this.color.base[1])[2],this.fade)
                        regPoly(this.layer,2,-30,6,18,18,0)
                    }
                break
                case 'Flame':
                    this.layer.fill(this.flashColor(this.color)[0],this.flashColor(this.color)[1],this.flashColor(this.color)[2],this.fade)
                    this.layer.quad(0,-30-6*this.anim.glow,-6*this.anim.glow,-30,0,-30+6*this.anim.glow,6*this.anim.glow,-30)
                    regTriangle(this.layer,lsin(this.anim.direction)*18*this.anim.glow,-30+lcos(this.anim.direction)*18*this.anim.glow,3,3,this.anim.direction)
                    this.layer.fill(this.flashColor(this.color)[0],this.flashColor(this.color)[1],this.flashColor(this.color)[2],this.fade/6)
                    for(let a=0,la=5;a<la;a++){
                        this.layer.quad(0,-30+(-7.5-a*1.5)*this.anim.glow,(-7.5-a*1.5)*this.anim.glow,-30,0,-30+(7.5+a*1.5)*this.anim.glow,(7.5+a*1.5)*this.anim.glow,-30)
                        regTriangle(this.layer,lsin(this.anim.direction)*18*this.anim.glow,-30+lcos(this.anim.direction)*18*this.anim.glow,4.5+a*1.5,4.5+a*1.5,this.anim.direction)
                    }
                break
                case 'Bronze Automaton':
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(8)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(8)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        for(let h=0;h<2;h++){
                            if((g==0&&h==0||g==1&&h==1)&&lcos(this.spin.legs[0].bottom+this.anim.direction)<=lcos(this.spin.legs[1].bottom+this.anim.direction)||(g==0&&h==1||g==1&&h==0)&&lcos(this.spin.legs[0].bottom+this.anim.direction)>lcos(this.spin.legs[1].bottom+this.anim.direction)){
                                if(this.trigger.display.skin.legs){
                                    this.layer.stroke(this.flashColor(this.color.skin.legs)[0],this.flashColor(this.color.skin.legs)[1],this.flashColor(this.color.skin.legs)[2],this.fade*this.fades.skin.legs)
                                    this.layer.strokeWeight(8)
                                    this.layer.line(this.graphics.legs[h].top.x,this.graphics.legs[h].top.y,this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y)
                                    this.layer.line(this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y,this.graphics.legs[h].bottom.x,this.graphics.legs[h].bottom.y)
                                }
                            }
                        }
                    }
                    if(this.trigger.display.gear){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.gear)[0],this.flashColor(this.color.gear)[1],this.flashColor(this.color.gear)[2],this.fade*this.fades.gear)
                        this.layer.translate(-21,-60)
                        this.layer.rotate(game.timer*3)
                        this.layer.ellipse(0,0,16,16)
                        for(let g=0;g<4;g++){
                            this.layer.rect(lsin(g*90)*10,lcos(g*90)*10,6,6)
                        }
                        this.layer.rotate(game.timer*-3)
                        this.layer.translate(42,0)
                        this.layer.rotate(game.timer*3)
                        this.layer.ellipse(0,0,16,16)
                        for(let g=0;g<4;g++){
                            this.layer.rect(lsin(g*90)*10,lcos(g*90)*10,6,6)
                        }
                        this.layer.rotate(game.timer*-3)
                        this.layer.translate(-21,60)
                    }
                    if(this.trigger.display.main){
                        this.layer.noStroke()
    					for(let a=0,la=9;a<la;a++){
	    					this.layer.fill(this.flashColor(mergeColor(this.color.main[0],this.color.main[1],a/la))[0],this.flashColor(mergeColor(this.color.main[0],this.color.main[1],a/la))[1],this.flashColor(mergeColor(this.color.main[0],this.color.main[1],a/la))[2],this.fade*this.fades.main)
			    			this.layer.rect(0,-60,48-a*4,60-a*5,3)
					    }
                    }
                    if(this.trigger.display.diamond){
                        this.layer.noStroke()
    					this.layer.fill(this.flashColor(this.color.diamond[0])[0],this.flashColor(this.color.diamond[0])[1],this.flashColor(this.color.diamond[0])[2],this.fade*this.fades.diamond)
	    				this.layer.quad(3,-69,12,-78,21,-69,12,-60)
                        this.layer.fill(this.flashColor(this.color.diamond[1])[0],this.flashColor(this.color.diamond[1])[1],this.flashColor(this.color.diamond[1])[2],this.fade*this.fades.diamond)
                        this.layer.quad(6,-69,12,-75,18,-69,12,-63)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.4){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(8,lcos(this.spin.arms[g].top+this.anim.direction)*10+4))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                    }
                break
                case 'Bronze Orb C': case 'Bronze Orb A':
                    if(this.trigger.display.gear){
                        this.layer.translate(0,-30)
                        this.layer.rotate(game.timer*3)
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.gear)[0],this.flashColor(this.color.gear)[1],this.flashColor(this.color.gear)[2],this.fade*this.fades.gear)
                        for(let g=0;g<4;g++){
                            this.layer.rect(lsin(g*90)*10,lcos(g*90)*10,6,6)
                        }
                        this.layer.rotate(game.timer*-3)
					    this.layer.translate(0,30)
                    }
                    if(this.trigger.display.main){
                        this.layer.noStroke()
    					for(let a=0,la=9;a<la;a++){
	    					this.layer.fill(this.flashColor(mergeColor(this.color.main[0],this.color.main[1],a/la))[0],this.flashColor(mergeColor(this.color.main[0],this.color.main[1],a/la))[1],this.flashColor(mergeColor(this.color.main[0],this.color.main[1],a/la))[2],this.fade*this.fades.main)
		    				this.layer.ellipse(0,-30,18-a*2)
                            switch(this.name){
                                case 'Bronze Orb C':
        			    			this.layer.triangle(-3,-42,3,-42,0,-56+a*2)
		        		            this.layer.triangle(-3,-18,3,-18,0,-4-a*2)
                                break
                                case 'Bronze Orb A':
        			    			this.layer.triangle(-12,-33,-12,-27,-26+a*2,-30)
		        		            this.layer.triangle(12,-33,12,-27,26-a*2,-30)
                                break
                            }
					    }
                    }
                    if(this.trigger.display.diamond){
                        this.layer.noStroke()
    					this.layer.fill(this.flashColor(this.color.diamond[0])[0],this.flashColor(this.color.diamond[0])[1],this.flashColor(this.color.diamond[0])[2],this.fade*this.fades.diamond)
	    				this.layer.quad(-6,-30,0,-36,6,-30,0,-24)
                        this.layer.fill(this.flashColor(this.color.diamond[1])[0],this.flashColor(this.color.diamond[1])[1],this.flashColor(this.color.diamond[1])[2],this.fade*this.fades.diamond)
                        this.layer.quad(-3,-30,0,-33,3,-30,0,-27)
                    }
                break
                case 'Management Robot': case 'Management Prototype': case 'Destructor Bot': case 'Purge X02':
                    for(let g=0;g<2;g++){
                        if(this.name=='Purge X02'&&this.trigger.display.extra.sword&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4&&g==0){
                            this.minorDisplay(0,g)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.limb)[0],this.flashColor(this.color.skin.limb)[1],this.flashColor(this.color.skin.limb)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.limb)[0],this.flashColor(this.color.skin.limb)[1],this.flashColor(this.color.skin.limb)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        for(let h=0;h<2;h++){
                            if((g==0&&h==0||g==1&&h==1)&&lcos(this.spin.legs[0].bottom+this.anim.direction)<=lcos(this.spin.legs[1].bottom+this.anim.direction)||(g==0&&h==1||g==1&&h==0)&&lcos(this.spin.legs[0].bottom+this.anim.direction)>lcos(this.spin.legs[1].bottom+this.anim.direction)){
                                if(this.trigger.display.skin.legs){
                                    this.layer.stroke(this.flashColor(this.color.skin.limb)[0],this.flashColor(this.color.skin.limb)[1],this.flashColor(this.color.skin.limb)[2],this.fade*this.fades.skin.legs)
                                    this.layer.strokeWeight(4)
                                    this.layer.line(this.graphics.legs[h].top.x,this.graphics.legs[h].top.y,this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y)
                                    this.layer.line(this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y,this.graphics.legs[h].bottom.x,this.graphics.legs[h].bottom.y)
                                }
                            }
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.stroke(this.flashColor(this.color.skin.out)[0],this.flashColor(this.color.skin.out)[1],this.flashColor(this.color.skin.out)[2],this.fade*this.fades.skin.body)
                        this.layer.strokeWeight(4)
                        this.layer.fill(this.flashColor(this.color.skin.in)[0],this.flashColor(this.color.skin.in)[1],this.flashColor(this.color.skin.in)[2],this.fade*this.fades.skin.body)
                        if(this.name=='Management Prototype'){
                            for(let a=0,la=6;a<la;a++){
                                if(lcos(this.anim.direction+a*60)>0){
                                    this.layer.rect(7.5*lsin(this.anim.direction+a*60),-42,8.5*lcos(this.anim.direction+a*60),24)
                                }
                            }
                            for(let a=0,la=4;a<la;a++){
                                if(lcos(this.anim.direction+a*90)>0){
                                    this.layer.rect(5*lsin(this.anim.direction+a*90),-57,10*lcos(this.anim.direction+a*90),6)
                                }
                            }
                        }else{
                            for(let a=0,la=4;a<la;a++){
                                if(lcos(this.anim.direction+a*90)>0){
                                    this.layer.rect(7.5*lsin(this.anim.direction+a*90),-45,15*lcos(this.anim.direction+a*90),30)
                                }
                            }
                        }
                    }
                    if(this.name=='Destructor Bot'&&this.trigger.display.bomb){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.bomb)[0],this.flashColor(this.color.bomb)[1],this.flashColor(this.color.bomb)[2],this.fade*this.fades.bomb)
                        for(let a=0,la=4;a<la;a++){
                            if(lcos(this.anim.direction+a*90)>0){
                                this.layer.ellipse(7.5*lsin(this.anim.direction+a*90),-45,6*lcos(this.anim.direction+a*90),6)
                            }
                        }
                        this.layer.arc(0,-90,6,6,-180,0)
                    }
                    for(let g=0;g<2;g++){
                        if(this.name=='Purge X02'&&this.trigger.display.extra.sword&&(lcos(this.spin.arms[g].top+this.anim.direction)>=0.4&&lcos(this.spin.arms[g].top+this.anim.direction)<0.6)&&g==0){
                            this.minorDisplay(0,g)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.4&&lcos(this.spin.arms[g].top+this.anim.direction)<0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.limb)[0],this.flashColor(this.color.skin.limb)[1],this.flashColor(this.color.skin.limb)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                    }
                    if(this.trigger.display.skin.head){
                        this.layer.stroke(this.flashColor(this.color.skin.out)[0],this.flashColor(this.color.skin.out)[1],this.flashColor(this.color.skin.out)[2],this.fade*this.fades.skin.arms)
                        this.layer.strokeWeight(4)
                        this.layer.fill(this.flashColor(this.color.skin.in)[0],this.flashColor(this.color.skin.in)[1],this.flashColor(this.color.skin.in)[2],this.fade*this.fades.skin.body)
                        if(this.name=='Management Prototype'){
                            for(let a=0,la=6;a<la;a++){
                                if(lcos(this.anim.direction+a*60)>0){
                                    this.layer.rect(13.5*lsin(this.anim.direction+a*60),-75,15.5*lcos(this.anim.direction+a*60),27)
                                }
                            }
                        }else{
                            for(let a=0,la=4;a<la;a++){
                                if(lcos(this.anim.direction+a*90)>0){
                                    this.layer.rect(13.5*lsin(this.anim.direction+a*90),-75,27*lcos(this.anim.direction+a*90),27)
                                }
                            }
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.name=='Purge X02'&&this.trigger.display.extra.sword&&(lcos(this.spin.arms[g].top+this.anim.direction)>=0.6||lcos(this.spin.arms[g].bottom+this.anim.direction)>=0.6)&&g==0){
                            this.minorDisplay(0,g)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>=0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.limb)[0],this.flashColor(this.color.skin.limb)[1],this.flashColor(this.color.skin.limb)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].bottom+this.anim.direction)>=0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.limb)[0],this.flashColor(this.color.skin.limb)[1],this.flashColor(this.color.skin.limb)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        if(this.trigger.display.eye[g]){
                            this.minorDisplayGeneral(0,g)
                        }
                    }
                    if(this.name=='Purge X02'&&this.trigger.display.hat){
                        this.layer.stroke(this.color.hat[0],this.color.hat[1],this.color.hat[2],this.fade)
                        this.layer.fill(this.color.hat[0],this.color.hat[1],this.color.hat[2],this.fade)
                        this.layer.strokeWeight(4)
                        this.layer.line(-20,-90,20,-90)
                        this.layer.quad(-15,-90,15,-90,10,-98,-10,-98)
                    }
                break
                case 'Sentry':
                    if(this.trigger.display.turret&&lcos(this.anim.direction)<=0){
					    this.layer.noStroke()
					    this.layer.fill(this.flashColor(this.color.turret)[0],this.flashColor(this.color.turret)[1],this.flashColor(this.color.turret)[2],this.fade)
					    this.layer.rect(14*lsin(this.anim.direction),-20,12+4*lcos(this.anim.direction),8)
                    }
                    if(this.trigger.display.leg){
                        this.layer.stroke(this.flashColor(this.color.leg)[0],this.flashColor(this.color.leg)[1],this.flashColor(this.color.leg)[2],this.fade*this.fades.leg)
					    this.layer.strokeWeight(3)
					    this.layer.line(0,-20,10,0)
					    this.layer.line(0,-20,-10,0)
                    }
                    if(this.trigger.display.body){
                        this.layer.noStroke()
					    this.layer.fill(this.flashColor(this.color.body)[0],this.flashColor(this.color.body)[1],this.flashColor(this.color.body)[2],this.fade*this.fades.body)
					    this.layer.ellipse(0,-20,20,20)
                    }
                    if(this.trigger.display.turret&&lcos(this.anim.direction)>0){
					    this.layer.noStroke()
					    this.layer.fill(this.flashColor(this.color.turret)[0],this.flashColor(this.color.turret)[1],this.flashColor(this.color.turret)[2],this.fade)
					    this.layer.rect(14*lsin(this.anim.direction),-20,12-4*lcos(this.anim.direction),8)
                    }
                break
                case 'Flying Rock':
                    if(this.trigger.display.body){
                        this.layer.noStroke()
					    this.layer.fill(this.flashColor(this.color.body)[0],this.flashColor(this.color.body)[1],this.flashColor(this.color.body)[2],this.fade*this.fades.body)
					    regPoly(this.layer,0,-48,8,12,12,0)
                    }
                    if(this.trigger.display.eye[0]){
                        this.minorDisplayGeneral(0,0)
                    }
                break
                case 'Repulsor':
                    if(this.trigger.display.skin.body){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.skin.body[6])[0],this.flashColor(this.color.skin.body[6])[1],this.flashColor(this.color.skin.body[6])[2],this.fade*this.fades.skin.body)
                        this.layer.triangle(0,-42,0,-30,-lsin(this.anim.direction)*48,-40.5)
                        for(let a=0,la=6;a<la;a++){
                            if(lcos(-30+a*60+this.anim.body)>0){
                                this.layer.fill(this.flashColor(this.color.skin.body[a])[0],this.flashColor(this.color.skin.body[a])[1],this.flashColor(this.color.skin.body[a])[2],this.fade*this.fades.skin.body)
                                this.layer.triangle(0,-48,lsin(-30+a*60+this.anim.body)*15-lcos(-30+a*60+this.anim.body)*10,-36,lsin(-30+a*60+this.anim.body)*15+lcos(-30+a*60+this.anim.body)*10,-36)
                                this.layer.fill(this.flashColor(this.color.skin.body[(a+3)%6])[0],this.flashColor(this.color.skin.body[(a+3)%6])[1],this.flashColor(this.color.skin.body[(a+3)%6])[2],this.fade*this.fades.skin.body)
                                this.layer.triangle(0,-24,lsin(-30+a*60+this.anim.body)*15-lcos(-30+a*60+this.anim.body)*10,-36,lsin(-30+a*60+this.anim.body)*15+lcos(-30+a*60+this.anim.body)*10,-36)
                            }
                        }
                    }
                break
                case 'Bush Thing':
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)<=0){
                            this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[2],this.fade*this.fades.skin.arms)
                            this.layer.noStroke()
                            this.layer.ellipse(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,16,16)
                            for(let a=0,la=9;a<la;a++){
                                this.layer.ellipse(lsin(360*a/la)*6+this.graphics.arms[g].middle.x,lcos(360*a/la)*6+this.graphics.arms[g].middle.y,7)
                            }
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.ellipse(0,-21,48,48)
                        for(let a=0,la=15;a<la;a++){
                            this.layer.ellipse(lsin(360*a/la)*18,lcos(360*a/la)*18-21,14)
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)>0){
                            this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[2],this.fade*this.fades.skin.arms)
                            this.layer.noStroke()
                            this.layer.ellipse(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,16,16)
                            for(let a=0,la=9;a<la;a++){
                                this.layer.ellipse(lsin(360*a/la)*6+this.graphics.arms[g].middle.x,lcos(360*a/la)*6+this.graphics.arms[g].middle.y,7)
                            }
                        }
                        if(this.trigger.display.eye[g]){
                            this.layer.stroke(this.color.eye.back[0],this.color.eye.back[1],this.color.eye.back[2],this.fade*this.fades.eye[g])
                            this.layer.strokeWeight((5-this.anim.eye[g]*3)*constrain(lcos(this.spin.eye[g]+this.anim.direction)*5,0,1))
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*22-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*22+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel-this.anim.eye[g]*2)
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*22-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*22+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel+this.anim.eye[g]*2)
                        }
                    }
                break
                case 'Fireball':
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)<=0){
                            this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[2],this.fade*this.fades.skin.arms)
                            this.layer.noStroke()
                            this.layer.ellipse(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,12,12)
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.arc(0,-24,30,30,-15,195)
                        this.layer.quad(0,-23,lcos(15)*15,-24-lsin(15)*15,0,-72,-lcos(15)*15,-24-lsin(15)*15)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)>0){
                            this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[2],this.fade*this.fades.skin.arms)
                            this.layer.noStroke()
                            this.layer.ellipse(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,12,12)
                        }
                        if(this.trigger.display.eye[g]){
                            this.layer.stroke(this.color.eye.back[0],this.color.eye.back[1],this.color.eye.back[2],this.fade*this.fades.eye[g])
                            this.layer.strokeWeight((5-this.anim.eye[g]*3)*constrain(lcos(this.spin.eye[g]+this.anim.direction)*5,0,1))
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*15-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*15+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel-this.anim.eye[g]*2)
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*15-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*15+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel+this.anim.eye[g]*2)
                        }
                    }
                break
                case 'Dead Shell':
                    for(let g=0;g<4;g++){
                        this.layer.stroke(this.flashColor(upColor(this.color.skin.legs,lcos(this.spin.legs[g]+this.anim.direction)*20,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.legs,lcos(this.spin.legs[g]+this.anim.direction)*20,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.legs,lcos(this.spin.legs[g]+this.anim.direction)*20,[1,1,1]))[2],this.fade*this.fades.skin.legs)
                        this.layer.strokeWeight(6)
                        this.layer.noFill()
                        if(lsin(this.anim.direction+this.spin.legs[g])>0){
                            this.layer.arc(12*lsin(this.anim.direction+this.spin.legs[g]),0,36*lsin(this.anim.direction+this.spin.legs[g]),48,-90,0)
                        }else{
                            this.layer.arc(12*lsin(this.anim.direction+this.spin.legs[g]),0,-36*lsin(this.anim.direction+this.spin.legs[g]),48,-180,-90)
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.ellipse(0,-36,60,60)
                    }
                    if(this.trigger.display.mouth&&lcos(this.anim.direction)>0.1){
                        this.minorDisplayGeneral(1,0)
                    }
                break
                case 'Management Drone':
                    if(this.trigger.display.skin.body){
                        this.layer.stroke(this.flashColor(this.color.skin.out)[0],this.flashColor(this.color.skin.out)[1],this.flashColor(this.color.skin.out)[2],this.fade*this.fades.skin.body)
                        this.layer.strokeWeight(4)
                        this.layer.fill(this.flashColor(this.color.skin.in)[0],this.flashColor(this.color.skin.in)[1],this.flashColor(this.color.skin.in)[2],this.fade*this.fades.skin.body)
                        for(let a=0,la=4;a<la;a++){
                            if(lcos(this.anim.direction+a*90)>=0){
                                this.layer.rect(20*lsin(this.anim.direction+a*90),-60,40*lcos(this.anim.direction+a*90),12)
                                this.layer.rect(15*lsin(this.anim.direction+a*90),-51,30*lcos(this.anim.direction+a*90),6)
                                for(let b=0,lb=4;b<lb;b++){
                                    this.layer.rect(3*lsin(this.anim.direction+a*90)+20*lsin(this.anim.direction+b*90-45),-72,6*lcos(this.anim.direction+a*90),12)
                                }
                            }
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.eye[g]){
                            this.minorDisplayGeneral(0,g)
                        }
                    }
                break
                case 'Personnel Carrier':
                    if(this.trigger.display.wheel){
                        this.layer.stroke(this.flashColor(this.color.out)[0],this.flashColor(this.color.out)[1],this.flashColor(this.color.out)[2],this.fade*this.fades.wheel)
                        this.layer.strokeWeight(4)
                        this.layer.fill(this.flashColor(this.color.in)[0],this.flashColor(this.color.in)[1],this.flashColor(this.color.in)[2],this.fade*this.fades.wheel)
                        for(let a=0,la=4;a<la;a++){
                            this.layer.ellipse(-20*lsin(this.anim.direction-30+a*60+floor(a/2)*60),-10,20*lsin(this.anim.direction),20)
                        }
                    }
                    if(this.trigger.display.body){
                        this.layer.stroke(this.flashColor(this.color.out)[0],this.flashColor(this.color.out)[1],this.flashColor(this.color.out)[2],this.fade*this.fades.body)
                        this.layer.strokeWeight(4)
                        this.layer.fill(this.flashColor(this.color.in)[0],this.flashColor(this.color.in)[1],this.flashColor(this.color.in)[2],this.fade*this.fades.body)
                        for(let a=0,la=4;a<la;a++){
                            if(lcos(this.anim.direction+a*90)>=0){
                                this.layer.rect((40-a%2*20)*lsin(this.anim.direction+a*90),-30,(40+a%2*40)*lcos(this.anim.direction+a*90),40)
                                this.layer.rect(15*lsin(this.anim.direction+a*90),-53,30*lcos(this.anim.direction+a*90),6)
                            }
                        }
                        for(let a=0,la=2;a<la;a++){
                            if(lcos(this.anim.direction-90+a*180)>=0){
                                this.layer.ellipse(20*lsin(this.anim.direction-90+a*180),-30,20*lcos(this.anim.direction-90+a*180),20)
                            }
                        }
                        this.layer.line(lsin(this.anim.direction-15)*30,-56,lsin(this.anim.direction-15)*30,-64)
                    }
                    if(this.trigger.display.window&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.flashColor(this.color.window)[0],this.flashColor(this.color.window)[1],this.flashColor(this.color.window)[2],this.fade*this.fades.window)
                        this.layer.noStroke()
                        this.layer.rect(40*lsin(this.anim.direction),-35,25*lcos(this.anim.direction),10)
                    }
                break
                case 'Executive':
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.ellipse(0,-48,13,39)
                        this.layer.fill(this.flashColor(this.color.skin.upperBody)[0],this.flashColor(this.color.skin.upperBody)[1],this.flashColor(this.color.skin.upperBody)[2],this.fade*this.fades.skin.body)
                        this.layer.arc(0,-48,14,40,-180,0)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        for(let h=0;h<2;h++){
                            if((g==0&&h==0||g==1&&h==1)&&lcos(this.spin.legs[0].bottom+this.anim.direction)<=lcos(this.spin.legs[1].bottom+this.anim.direction)||(g==0&&h==1||g==1&&h==0)&&lcos(this.spin.legs[0].bottom+this.anim.direction)>lcos(this.spin.legs[1].bottom+this.anim.direction)){
                                if(this.trigger.display.skin.legs){
                                    this.layer.stroke(this.flashColor(this.color.skin.legs)[0],this.flashColor(this.color.skin.legs)[1],this.flashColor(this.color.skin.legs)[2],this.fade*this.fades.skin.legs)
                                    this.layer.strokeWeight(4)
                                    this.layer.line(this.graphics.legs[h].top.x,this.graphics.legs[h].top.y,this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y)
                                    this.layer.line(this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y,this.graphics.legs[h].bottom.x,this.graphics.legs[h].bottom.y)
                                }
                            }
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.4&&lcos(this.spin.arms[g].top+this.anim.direction)<0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                    }
                    if(this.trigger.display.tie&&lcos(this.anim.direction)>0){
                        this.layer.noStroke()
		    			this.layer.fill(this.flashColor(this.color.tie[0])[0],this.flashColor(this.color.tie[0])[1],this.flashColor(this.color.tie[0])[2],this.fade*this.fades.tie)
                        this.layer.quad(lsin(this.anim.direction)*6-lcos(this.anim.direction)*2.5,-54,lsin(this.anim.direction)*3,-70,lsin(this.anim.direction)*6+lcos(this.anim.direction)*2.5,-54,lsin(this.anim.direction)*9,-50)
                    }
                    if(this.trigger.display.skin.head){
                        this.layer.fill(this.flashColor(this.color.skin.head)[0],this.flashColor(this.color.skin.head)[1],this.flashColor(this.color.skin.head)[2],this.fade*this.fades.skin.head)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-87,42,42)
                    }
                    if(this.trigger.display.mouth&&lcos(this.anim.direction)>0.1){
                        this.minorDisplayGeneral(1,0)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>=0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].bottom+this.anim.direction)>=0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        if(this.trigger.display.eye[g]){
                            this.minorDisplayGeneral(0,g)
                        }
                    }
                break
                case 'Mechanized':
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.limb)[0],this.flashColor(this.color.skin.limb)[1],this.flashColor(this.color.skin.limb)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(6)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.limb)[0],this.flashColor(this.color.skin.limb)[1],this.flashColor(this.color.skin.limb)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(6)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        for(let h=0;h<2;h++){
                            if((g==0&&h==0||g==1&&h==1)&&lcos(this.spin.legs[0].bottom+this.anim.direction)<=lcos(this.spin.legs[1].bottom+this.anim.direction)||(g==0&&h==1||g==1&&h==0)&&lcos(this.spin.legs[0].bottom+this.anim.direction)>lcos(this.spin.legs[1].bottom+this.anim.direction)){
                                if(this.trigger.display.skin.legs){
                                    this.layer.stroke(this.flashColor(this.color.skin.limb)[0],this.flashColor(this.color.skin.limb)[1],this.flashColor(this.color.skin.limb)[2],this.fade*this.fades.skin.legs)
                                    this.layer.strokeWeight(6)
                                    this.layer.line(this.graphics.legs[h].top.x,this.graphics.legs[h].top.y,this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y)
                                    this.layer.line(this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y,this.graphics.legs[h].bottom.x,this.graphics.legs[h].bottom.y)
                                }
                            }
                        }
                    }
                    if(this.trigger.display.skin.head){
                        this.layer.fill(this.flashColor(this.color.skin.head)[0],this.flashColor(this.color.skin.head)[1],this.flashColor(this.color.skin.head)[2],this.fade*this.fades.skin.head)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-87,30,30)
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.stroke(this.flashColor(this.color.skin.out)[0],this.flashColor(this.color.skin.out)[1],this.flashColor(this.color.skin.out)[2],this.fade*this.fades.skin.body)
                        this.layer.strokeWeight(4)
                        this.layer.fill(this.flashColor(this.color.skin.in)[0],this.flashColor(this.color.skin.in)[1],this.flashColor(this.color.skin.in)[2],this.fade*this.fades.skin.body)
                        for(let a=0,la=4;a<la;a++){
                            if(lcos(this.anim.direction+a*90)>=0){
                                this.layer.rect((7.5+a%2*7.5)*lsin(this.anim.direction+a*90),-51,(30-a%2*15)*lcos(this.anim.direction+a*90),42)
                            }
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.4&&lcos(this.spin.arms[g].top+this.anim.direction)<0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.limb)[0],this.flashColor(this.color.skin.limb)[1],this.flashColor(this.color.skin.limb)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                    }
                    if(this.trigger.display.mouth&&lcos(this.anim.direction)>0.1){
                        this.minorDisplayGeneral(1,0)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>=0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.limb)[0],this.flashColor(this.color.skin.limb)[1],this.flashColor(this.color.skin.limb)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(6)
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].bottom+this.anim.direction)>=0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.limb)[0],this.flashColor(this.color.skin.limb)[1],this.flashColor(this.color.skin.limb)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(6)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        if(this.trigger.display.eye[g]){
                            this.minorDisplayGeneral(0,g)
                        }
                    }
                break
                case 'Louse':
                    if(this.trigger.display.antenna&&lcos(this.anim.direction)<=0){
                        this.layer.fill(this.flashColor(this.color.antenna)[0],this.flashColor(this.color.antenna)[1],this.flashColor(this.color.antenna)[2],this.fade*this.fades.antenna)
                        this.layer.triangle(20*abs(lsin(this.anim.direction))-2,-3,20*abs(lsin(this.anim.direction))+2,-3,20*abs(lsin(this.anim.direction)),-15)
                    }
                    if(this.trigger.display.body){
                        this.layer.fill(this.flashColor(this.color.body[0])[0],this.flashColor(this.color.body[0])[1],this.flashColor(this.color.body[0])[2],this.fade*this.fades.body)
                        this.layer.arc(0,0,24+abs(lsin(this.anim.direction))*24,24,-180,-156)
                        this.layer.arc(0,0,24+abs(lsin(this.anim.direction))*24,24,-120,-60)
                        this.layer.arc(0,0,24+abs(lsin(this.anim.direction))*24,24,-24,0)
                        this.layer.fill(this.flashColor(this.color.body[1])[0],this.flashColor(this.color.body[1])[1],this.flashColor(this.color.body[1])[2],this.fade*this.fades.body)
                        this.layer.arc(0,0,24+abs(lsin(this.anim.direction))*24,24,-156,-120)
                        this.layer.arc(0,0,24+abs(lsin(this.anim.direction))*24,24,-60,-24)
                    }
                    if(this.trigger.display.antenna&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.flashColor(this.color.antenna)[0],this.flashColor(this.color.antenna)[1],this.flashColor(this.color.antenna)[2],this.fade*this.fades.antenna)
                        this.layer.triangle(20*lsin(this.anim.direction)-2,-3,20*lsin(this.anim.direction)+2,-3,20*lsin(this.anim.direction),-15)
                    }
                break
                case 'Fungling':
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)<=0){
                            this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[2],this.fade*this.fades.skin.arms)
                            this.layer.noStroke()
                            this.layer.ellipse(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,14,14)
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-24,36,36)
                    }
                    if(this.trigger.display.skin.tumor){
                        this.layer.fill(this.flashColor(this.color.skin.tumor)[0],this.flashColor(this.color.skin.tumor)[1],this.flashColor(this.color.skin.tumor)[2],this.fade*this.fades.skin.tumor)
                        this.layer.noStroke()
                        this.layer.ellipse(10,-39,11,11)
                        this.layer.ellipse(4,-40,8,8)
                        this.layer.ellipse(13,-35,7,7)
                    }
                    if(this.trigger.display.mouth&&lcos(this.anim.direction)>0.1){
                        this.minorDisplayGeneral(1,0)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)>0){
                            this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[2],this.fade*this.fades.skin.arms)
                            this.layer.noStroke()
                            this.layer.ellipse(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,14,14)
                        }
                        if(this.trigger.display.eye[g]){
                            this.minorDisplayGeneral(0,g)
                        }
                    }
                break
                case 'Hwurmp': case 'Antihwurmp':
                    if(this.trigger.display.mouth&&lcos(this.anim.direction)<=0){
                        this.layer.stroke(this.flashColor(this.color.mouth)[0],this.flashColor(this.color.mouth)[1],this.flashColor(this.color.mouth)[2],this.fade*this.fades.mouth)
                        this.layer.strokeWeight(3)
                        this.layer.ellipse(lsin(this.anim.direction)*18*this.anim.body,-18,12*lcos(this.anim.direction),6)
                    }
                    if(this.trigger.display.body){
                        this.layer.fill(this.flashColor(this.color.body)[0],this.flashColor(this.color.body)[1],this.flashColor(this.color.body)[2],this.fade*this.fades.body)
                        this.layer.noStroke()
                        this.layer.translate(0,-30)
                        this.layer.ellipse(0,0,40*this.anim.body,40*this.anim.body)
                        for(var a=0,la=12;a<la;a++){
                            this.layer.rotate(30)
                            this.layer.triangle(-5,-20*this.anim.body+4,5,-20*this.anim.body+4,0,-20*this.anim.body-4)
                        }
                        this.layer.translate(0,30)
                    }
                    if(this.trigger.display.mouth&&lcos(this.anim.direction)>0){
                        this.layer.stroke(this.flashColor(this.color.mouth)[0],this.flashColor(this.color.mouth)[1],this.flashColor(this.color.mouth)[2],this.fade*this.fades.mouth)
                        this.layer.strokeWeight(3)
                        this.layer.ellipse(lsin(this.anim.direction)*18*this.anim.body,-18,12*lcos(this.anim.direction),6)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.eye[g]){
                            this.layer.stroke(this.color.eye.back[0],this.color.eye.back[1],this.color.eye.back[2],this.fade*this.fades.eye[g])
                            this.layer.strokeWeight((5-this.anim.eye[g]*3)*constrain(lcos(this.spin.eye[g]+this.anim.direction)*5,0,1))
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*20*this.anim.body-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*20*this.anim.body+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel-this.anim.eye[g]*2)
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*20*this.anim.body-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*20*this.anim.body+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel+this.anim.eye[g]*2)
                        }
                    }
                break
                case 'Bee':
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)<=0){
                            this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[2],this.fade*this.fades.skin.arms)
                            this.layer.noStroke()
                            this.layer.ellipse(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,6,6)
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-18,9,9)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)>0){
                            this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[2],this.fade*this.fades.skin.arms)
                            this.layer.noStroke()
                            this.layer.ellipse(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,6,6)
                        }
                    }
                break
                case 'Pixie':
                    if(this.trigger.display.glow){
                        this.layer.fill(this.color.glow[0],this.color.glow[1],this.color.glow[2],this.fade*this.fades.glow/12)
                        this.layer.noStroke()
                        for(let a=0,la=8;a<la;a++){
                            this.layer.ellipse(0,-18,15+a*3,15+a*3)
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)<=0){
                            this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[2],this.fade*this.fades.skin.arms*0.6)
                            this.layer.noStroke()
                            this.layer.push()
                            this.layer.translate(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y+lsin(this.time*10)*-2)
                            this.layer.rotate(this.graphics.arms[g].middle.x*-(4+lsin(this.time*10)*2))
                            this.layer.ellipse(0,0,9,6)
                            this.layer.pop()
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body*0.8)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-18,12,12)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)>0){
                            this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[2],this.fade*this.fades.skin.arms*0.6)
                            this.layer.noStroke()
                            this.layer.push()
                            this.layer.translate(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y+lsin(this.time*10)*-2)
                            this.layer.rotate(this.graphics.arms[g].middle.x*-(4+lsin(this.time*10)*2))
                            this.layer.ellipse(0,0,9,6)
                            this.layer.pop()
                        }
                    }
                break
                case 'Glimerrer':
                    if(this.trigger.display.crystal){
                        for(let a=0,la=3;a<la;a++){
                            this.layer.fill(this.flashColor(this.color.crystal[a])[0],this.flashColor(this.color.crystal[a])[1],this.flashColor(this.color.crystal[a])[2],this.fade*this.fades.crystal)
                            for(let b=0,lb=5;b<lb;b++){
                                this.layer.quad(0,0,
                                    (lsin(-72+b*36)*30-lcos(-72+b*36)*5*(1-a/la))*(0.8+abs(lsin(this.anim.direction))),lcos(-72+b*36)*-36-lsin(-72+b*36)*6*(1-a/la),
                                    lsin(-72+b*36)*(40-a/la*10)*(1+abs(lsin(this.anim.direction))),lcos(-72+b*36)*-(48-a/la*12),
                                    (lsin(-72+b*36)*30+lcos(-72+b*36)*5*(1-a/la))*(0.8+abs(lsin(this.anim.direction))),lcos(-72+b*36)*-36+lsin(-72+b*36)*6*(1-a/la))
                            }
                        }
                    }
                    if(this.trigger.display.body){
                        this.layer.fill(this.flashColor(this.color.body[0])[0],this.flashColor(this.color.body[0])[1],this.flashColor(this.color.body[0])[2],this.fade*this.fades.body)
                        this.layer.arc(0,0,48+abs(lsin(this.anim.direction))*48,60,-180,-150)
                        this.layer.arc(0,0,48+abs(lsin(this.anim.direction))*48,60,-114,-66)
                        this.layer.arc(0,0,48+abs(lsin(this.anim.direction))*48,60,-30,0)
                        this.layer.fill(this.flashColor(this.color.body[1])[0],this.flashColor(this.color.body[1])[1],this.flashColor(this.color.body[1])[2],this.fade*this.fades.body)
                        this.layer.arc(0,0,48+abs(lsin(this.anim.direction))*48,60,-150,-114)
                        this.layer.arc(0,0,48+abs(lsin(this.anim.direction))*48,60,-66,-30)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.eye[g]){
                            this.layer.stroke(this.color.eye.back[0],this.color.eye.back[1],this.color.eye.back[2],this.fade*this.fades.eye[g])
                            this.layer.strokeWeight((5-this.anim.eye[g]*3)*constrain(lcos(this.spin.eye[g]+this.anim.direction)*5,0,1))
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*40-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*40+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel-this.anim.eye[g]*2)
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*40-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*40+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel+this.anim.eye[g]*2)
                        }
                    }
                break
                case 'Host':
                    if(this.trigger.display.body){
                        this.layer.fill(this.flashColor(mergeColor(this.color.body,[255,255,255],this.anim.body))[0],this.flashColor(mergeColor(this.color.body,[255,255,255],this.anim.body))[1],this.flashColor(mergeColor(this.color.body,[255,255,255],this.anim.body))[2],this.fade*this.fades.body)
                        this.layer.noStroke()
                        this.layer.arc(0,-30,36,36,-this.anim.direction,-this.anim.direction+180)
                        regPoly(this.layer,0,-30,4,14,14,this.anim.direction)
                        this.layer.noFill()
                        this.layer.stroke(this.flashColor(mergeColor(this.color.body,[255,255,255],this.anim.body))[0],this.flashColor(mergeColor(this.color.body,[255,255,255],this.anim.body))[1],this.flashColor(mergeColor(this.color.body,[255,255,255],this.anim.body))[2],this.fade*this.fades.body)
                        this.layer.strokeWeight(3)
                        this.layer.strokeCap(SQUARE)
                        this.layer.arc(0,-30,45,45,-this.anim.direction,-this.anim.direction+180)
                        this.layer.strokeCap(ROUND)
                    }
                break
                case 'Host Drone':
                    if(this.trigger.display.body){
                        this.layer.fill(this.flashColor(mergeColor(this.color.body,[255,255,255],this.anim.body))[0],this.flashColor(mergeColor(this.color.body,[255,255,255],this.anim.body))[1],this.flashColor(mergeColor(this.color.body,[255,255,255],this.anim.body))[2],this.fade*this.fades.body)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-30,12,12)
                        this.layer.noFill()
                        this.layer.stroke(this.flashColor(mergeColor(this.color.body,[255,255,255],this.anim.body))[0],this.flashColor(mergeColor(this.color.body,[255,255,255],this.anim.body))[1],this.flashColor(mergeColor(this.color.body,[255,255,255],this.anim.body))[2],this.fade*this.fades.body)
                        this.layer.strokeWeight(3)
                        this.layer.strokeCap(SQUARE)
                        this.layer.arc(0,-30,21,21,-this.anim.direction-210,-this.anim.direction+30)
                        this.layer.line(9*lcos(-this.anim.direction-210),-30+9*lsin(-this.anim.direction-210),15*lcos(-this.anim.direction-210),-30+15*lsin(-this.anim.direction-210))
                        this.layer.line(9*lcos(-this.anim.direction+30),-30+9*lsin(-this.anim.direction+30),15*lcos(-this.anim.direction+30),-30+15*lsin(-this.anim.direction+30))
                        this.layer.strokeCap(ROUND)
                    }
                break
                case 'Darkblot':
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)<=0){
                            this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*20,[1,1,1]))[2],this.fade*this.fades.skin.arms)
                            this.layer.noStroke()
                            this.layer.ellipse(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,14,14)
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.arc(0,3,48,48,-180,0)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.anim.direction+this.spin.arms[g].top)>0){
                            this.layer.fill(this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[0],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[1],this.flashColor(upColor(this.color.skin.arms,lcos(this.spin.arms[g].top+this.anim.direction)*50,[1,1,1]))[2],this.fade*this.fades.skin.arms)
                            this.layer.noStroke()
                            this.layer.ellipse(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,14,14)
                        }
                        if(this.trigger.display.eye[g]){
                            this.layer.stroke(this.color.eye.back[0],this.color.eye.back[1],this.color.eye.back[2],this.fade*this.fades.eye[g])
                            this.layer.strokeWeight((5-this.anim.eye[g]*3)*constrain(lcos(this.spin.eye[g]+this.anim.direction)*5,0,1))
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*21-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*21+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel-this.anim.eye[g]*2)
                            this.layer.line(lsin(this.spin.eye[g]+this.anim.direction)*21-(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel,lsin(this.spin.eye[g]+this.anim.direction)*21+(g*2-1)*lcos(this.spin.eye[g]+this.anim.direction)*this.anim.eye[g]*2,this.parts.eyeLevel+this.anim.eye[g]*2)
                        }
                    }
                break
                case 'Glitch': case 'Glitched Giant':
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms[g])[0],this.flashColor(this.color.skin.arms[g])[1],this.flashColor(this.color.skin.arms[g])[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                            if(this.name=='Glitched Giant'&&this.trigger.display.armor){
                                this.layer.stroke(this.flashColor(this.color.armor)[0],this.flashColor(this.color.armor)[1],this.flashColor(this.color.armor)[2],this.fade*this.fades.armor)
                                this.layer.strokeWeight(5)
                                this.layer.line(
                                    this.graphics.arms[g].top.x*0.6+this.graphics.arms[g].middle.x*0.4,this.graphics.arms[g].top.y*0.6+this.graphics.arms[g].middle.y*0.4,
                                    this.graphics.arms[g].top.x*0.4+this.graphics.arms[g].middle.x*0.6,this.graphics.arms[g].top.y*0.4+this.graphics.arms[g].middle.y*0.6)
                                this.layer.line(
                                    this.graphics.arms[g].middle.x*0.6+this.graphics.arms[g].bottom.x*0.4,this.graphics.arms[g].middle.y*0.6+this.graphics.arms[g].bottom.y*0.4,
                                    this.graphics.arms[g].middle.x*0.4+this.graphics.arms[g].bottom.x*0.6,this.graphics.arms[g].middle.y*0.4+this.graphics.arms[g].bottom.y*0.6)
                            }
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.ellipse(0,-48,13,39)
                    }
                    if(this.name=='Glitched Giant'&&this.trigger.display.belt){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.belt)[0],this.flashColor(this.color.belt)[1],this.flashColor(this.color.belt)[2],this.fade*this.fades.belt)
                        this.layer.rect(0,-45,14,3)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms[g])[0],this.flashColor(this.color.skin.arms[g])[1],this.flashColor(this.color.skin.arms[g])[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                            if(this.name=='Glitched Giant'&&this.trigger.display.armor){
                                this.layer.stroke(this.flashColor(this.color.armor)[0],this.flashColor(this.color.armor)[1],this.flashColor(this.color.armor)[2],this.fade*this.fades.armor)
                                this.layer.strokeWeight(5)
                                this.layer.line(
                                    this.graphics.arms[g].top.x*0.6+this.graphics.arms[g].middle.x*0.4,this.graphics.arms[g].top.y*0.6+this.graphics.arms[g].middle.y*0.4,
                                    this.graphics.arms[g].top.x*0.4+this.graphics.arms[g].middle.x*0.6,this.graphics.arms[g].top.y*0.4+this.graphics.arms[g].middle.y*0.6)
                                this.layer.line(
                                    this.graphics.arms[g].middle.x*0.6+this.graphics.arms[g].bottom.x*0.4,this.graphics.arms[g].middle.y*0.6+this.graphics.arms[g].bottom.y*0.4,
                                    this.graphics.arms[g].middle.x*0.4+this.graphics.arms[g].bottom.x*0.6,this.graphics.arms[g].middle.y*0.4+this.graphics.arms[g].bottom.y*0.6)
                            }
                        }
                        for(let h=0;h<2;h++){
                            if((g==0&&h==0||g==1&&h==1)&&lcos(this.spin.legs[0].bottom+this.anim.direction)<=lcos(this.spin.legs[1].bottom+this.anim.direction)||(g==0&&h==1||g==1&&h==0)&&lcos(this.spin.legs[0].bottom+this.anim.direction)>lcos(this.spin.legs[1].bottom+this.anim.direction)){
                                if(this.trigger.display.skin.legs){
                                    this.layer.stroke(this.flashColor(this.color.skin.legs[h])[0],this.flashColor(this.color.skin.legs[h])[1],this.flashColor(this.color.skin.legs[h])[2],this.fade*this.fades.skin.legs)
                                    this.layer.strokeWeight(4)
                                    this.layer.line(this.graphics.legs[h].top.x,this.graphics.legs[h].top.y,this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y)
                                    this.layer.line(this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y,this.graphics.legs[h].bottom.x,this.graphics.legs[h].bottom.y)
                                    if(this.name=='Glitched Giant'&&this.trigger.display.armor){
                                        this.layer.stroke(this.flashColor(this.color.armor)[0],this.flashColor(this.color.armor)[1],this.flashColor(this.color.armor)[2],this.fade*this.fades.armor)
                                        this.layer.strokeWeight(5)
                                        this.layer.line(
                                            this.graphics.legs[h].top.x*0.6+this.graphics.legs[h].middle.x*0.4,this.graphics.legs[h].top.y*0.6+this.graphics.legs[h].middle.y*0.4,
                                            this.graphics.legs[h].top.x*0.4+this.graphics.legs[h].middle.x*0.6,this.graphics.legs[h].top.y*0.4+this.graphics.legs[h].middle.y*0.6)
                                        this.layer.line(
                                            this.graphics.legs[h].middle.x*0.6+this.graphics.legs[h].bottom.x*0.4,this.graphics.legs[h].middle.y*0.6+this.graphics.legs[h].bottom.y*0.4,
                                            this.graphics.legs[h].middle.x*0.4+this.graphics.legs[h].bottom.x*0.6,this.graphics.legs[h].middle.y*0.4+this.graphics.legs[h].bottom.y*0.6)
                                    }
                                }
                            }
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.4&&lcos(this.spin.arms[g].top+this.anim.direction)<0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms[g])[0],this.flashColor(this.color.skin.arms[g])[1],this.flashColor(this.color.skin.arms[g])[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                            if(this.name=='Glitched Giant'&&this.trigger.display.armor){
                                this.layer.stroke(this.flashColor(this.color.armor)[0],this.flashColor(this.color.armor)[1],this.flashColor(this.color.armor)[2],this.fade*this.fades.armor)
                                this.layer.strokeWeight(5)
                                this.layer.line(
                                    this.graphics.arms[g].top.x*0.6+this.graphics.arms[g].middle.x*0.4,this.graphics.arms[g].top.y*0.6+this.graphics.arms[g].middle.y*0.4,
                                    this.graphics.arms[g].top.x*0.4+this.graphics.arms[g].middle.x*0.6,this.graphics.arms[g].top.y*0.4+this.graphics.arms[g].middle.y*0.6)
                                this.layer.line(
                                    this.graphics.arms[g].middle.x*0.6+this.graphics.arms[g].bottom.x*0.4,this.graphics.arms[g].middle.y*0.6+this.graphics.arms[g].bottom.y*0.4,
                                    this.graphics.arms[g].middle.x*0.4+this.graphics.arms[g].bottom.x*0.6,this.graphics.arms[g].middle.y*0.4+this.graphics.arms[g].bottom.y*0.6)
                            }
                        }
                    }
                    if(this.trigger.display.skin.head){
                        this.layer.fill(this.flashColor(this.color.skin.head)[0],this.flashColor(this.color.skin.head)[1],this.flashColor(this.color.skin.head)[2],this.fade*this.fades.skin.head)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-81,30,30)
                    }
                    if(this.trigger.display.mouth&&lcos(this.anim.direction)>0.1){
                        this.minorDisplayGeneral(1,0)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>=0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms[g])[0],this.flashColor(this.color.skin.arms[g])[1],this.flashColor(this.color.skin.arms[g])[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                            if(this.name=='Glitched Giant'&&this.trigger.display.armor){
                                this.layer.stroke(this.flashColor(this.color.armor)[0],this.flashColor(this.color.armor)[1],this.flashColor(this.color.armor)[2],this.fade*this.fades.armor)
                                this.layer.strokeWeight(5)
                                this.layer.line(
                                    this.graphics.arms[g].top.x*0.6+this.graphics.arms[g].middle.x*0.4,this.graphics.arms[g].top.y*0.6+this.graphics.arms[g].middle.y*0.4,
                                    this.graphics.arms[g].top.x*0.4+this.graphics.arms[g].middle.x*0.6,this.graphics.arms[g].top.y*0.4+this.graphics.arms[g].middle.y*0.6)
                                this.layer.line(
                                    this.graphics.arms[g].middle.x*0.6+this.graphics.arms[g].bottom.x*0.4,this.graphics.arms[g].middle.y*0.6+this.graphics.arms[g].bottom.y*0.4,
                                    this.graphics.arms[g].middle.x*0.4+this.graphics.arms[g].bottom.x*0.6,this.graphics.arms[g].middle.y*0.4+this.graphics.arms[g].bottom.y*0.6)
                            }
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].bottom+this.anim.direction)>=0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms[g])[0],this.flashColor(this.color.skin.arms[g])[1],this.flashColor(this.color.skin.arms[g])[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                            if(this.name=='Glitched Giant'&&this.trigger.display.armor){
                                this.layer.stroke(this.flashColor(this.color.armor)[0],this.flashColor(this.color.armor)[1],this.flashColor(this.color.armor)[2],this.fade*this.fades.armor)
                                this.layer.strokeWeight(5)
                                this.layer.line(
                                    this.graphics.arms[g].middle.x*0.6+this.graphics.arms[g].bottom.x*0.4,this.graphics.arms[g].middle.y*0.6+this.graphics.arms[g].bottom.y*0.4,
                                    this.graphics.arms[g].middle.x*0.4+this.graphics.arms[g].bottom.x*0.6,this.graphics.arms[g].middle.y*0.4+this.graphics.arms[g].bottom.y*0.6)
                            }
                        }
                        if(this.trigger.display.eye[g]){
                            this.minorDisplayGeneral(0,g)
                        }
                    }
                break
                case 'Managerial':
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.ellipse(0,-50,16,42)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        for(let h=0;h<2;h++){
                            if((g==0&&h==0||g==1&&h==1)&&lcos(this.spin.legs[0].bottom+this.anim.direction)<=lcos(this.spin.legs[1].bottom+this.anim.direction)||(g==0&&h==1||g==1&&h==0)&&lcos(this.spin.legs[0].bottom+this.anim.direction)>lcos(this.spin.legs[1].bottom+this.anim.direction)){
                                if(this.trigger.display.skin.legs){
                                    this.layer.stroke(this.flashColor(this.color.skin.legs)[0],this.flashColor(this.color.skin.legs)[1],this.flashColor(this.color.skin.legs)[2],this.fade*this.fades.skin.legs)
                                    this.layer.strokeWeight(4)
                                    this.layer.line(this.graphics.legs[h].top.x,this.graphics.legs[h].top.y,this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y)
                                    this.layer.line(this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y,this.graphics.legs[h].bottom.x,this.graphics.legs[h].bottom.y)
                                }
                            }
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.4&&lcos(this.spin.arms[g].top+this.anim.direction)<0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                    }
                    if(this.trigger.display.skin.head){
                        this.layer.fill(this.flashColor(this.color.skin.head)[0],this.flashColor(this.color.skin.head)[1],this.flashColor(this.color.skin.head)[2],this.fade*this.fades.skin.head)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-84,30,30)
                    }
                    if(this.trigger.display.mouth&&lcos(this.anim.direction)>0.1){
                        this.minorDisplayGeneral(1,0)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>=0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].bottom+this.anim.direction)>=0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        if(this.trigger.display.eye[g]){
                            this.minorDisplayGeneral(0,g)
                        }
                    }
                break
                case '':
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.ellipse(0,-48,13,39)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        for(let h=0;h<2;h++){
                            if((g==0&&h==0||g==1&&h==1)&&lcos(this.spin.legs[0].bottom+this.anim.direction)<=lcos(this.spin.legs[1].bottom+this.anim.direction)||(g==0&&h==1||g==1&&h==0)&&lcos(this.spin.legs[0].bottom+this.anim.direction)>lcos(this.spin.legs[1].bottom+this.anim.direction)){
                                if(this.trigger.display.skin.legs){
                                    this.layer.stroke(this.flashColor(this.color.skin.legs)[0],this.flashColor(this.color.skin.legs)[1],this.flashColor(this.color.skin.legs)[2],this.fade*this.fades.skin.legs)
                                    this.layer.strokeWeight(4)
                                    this.layer.line(this.graphics.legs[h].top.x,this.graphics.legs[h].top.y,this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y)
                                    this.layer.line(this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y,this.graphics.legs[h].bottom.x,this.graphics.legs[h].bottom.y)
                                }
                            }
                        }
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.4&&lcos(this.spin.arms[g].top+this.anim.direction)<0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                    }
                    if(this.trigger.display.skin.head){
                        this.layer.fill(this.flashColor(this.color.skin.head)[0],this.flashColor(this.color.skin.head)[1],this.flashColor(this.color.skin.head)[2],this.fade*this.fades.skin.head)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-81,30,30)
                    }
                    if(this.trigger.display.mouth&&lcos(this.anim.direction)>0.1){
                        this.minorDisplayGeneral(1,0)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>=0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].bottom+this.anim.direction)>=0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                        }
                        if(this.trigger.display.eye[g]){
                            this.minorDisplayGeneral(0,g)
                        }
                    }
                break
                default:
                    if(this.name=='Lunaria'&&this.trigger.display.stars){
                        this.layer.noStroke()
                        this.layer.fill(this.color.stars[0],this.color.stars[1],this.color.stars[2],this.fade*this.fades.stars)
                        for(let a=0,la=9;a<la;a++){
                            if(lcos(a*40+this.anim.direction+this.time*3)<=0){
                                regStar(this.layer,lsin(a*40+this.anim.direction+this.time*3)*20,-54+lcos(a*40+this.anim.direction+this.time*3)*6,5,lcos(a*40+this.anim.direction+this.time*3)*3,3,lcos(a*40+this.anim.direction+this.time*3)*1.5,1.5,this.time*3)
                            }
                            if(lcos(a*40+this.anim.direction+this.time*3+20)<=0){
                                regStar(this.layer,lsin(a*40+this.anim.direction+this.time*3+20)*18,-18+lcos(a*40+this.anim.direction+this.time*3+20)*6,5,lcos(a*40+this.anim.direction+this.time*3+20)*3,3,lcos(a*40+this.anim.direction+this.time*3+20)*1.5,1.5,this.time*3)
                                regStar(this.layer,lsin(a*40+this.anim.direction+this.time*3+20)*18,-90+lcos(a*40+this.anim.direction+this.time*3+20)*6,5,lcos(a*40+this.anim.direction+this.time*3+20)*3,3,lcos(a*40+this.anim.direction+this.time*3+20)*1.5,1.5,this.time*3)
                            }
                        }
                    }
                    if(this.name=='Divine Guard'&&this.trigger.display.hat){
                        this.layer.fill(this.color.hat[0],this.color.hat[1],this.color.hat[2],this.fade*this.fades.hat)
                        this.layer.noStroke()
                        for(let a=0,la=2;a<la;a++){
                            if(lcos(this.anim.direction-90+a*180)<=0){
                                this.layer.triangle(lsin(this.anim.direction-90+a*180)*15-lcos(this.anim.direction-90+a*180)*8,-81,lsin(this.anim.direction-90+a*180)*15+lcos(this.anim.direction-90+a*180)*8,-81,lsin(this.anim.direction-90+a*180)*15,-75)
                            }
                        }
                    }
                    if(this.name=='Beekeeper'&&this.trigger.display.helmet){
                        this.layer.noStroke()
                        this.layer.fill(this.color.helmet[1][0],this.color.helmet[1][1],this.color.helmet[1][2],this.fade*this.fades.helmet)
                        for(let a=0,la=15;a<la;a++){
                            if(lcos(this.anim.direction+a*45)<=0){
                                this.layer.rect(16*lsin(this.anim.direction+a*24),-81,2*lcos(this.anim.direction+a*24),12)
                            }
                        }
                    }
                    if(this.name=='Riot Police'&&this.trigger.display.shield&&lcos(this.anim.direction)<0){
                        this.layer.fill(this.flashColor(this.color.shield[0])[0],this.flashColor(this.color.shield[0])[1],this.flashColor(this.color.shield[0])[2],this.fade*this.fades.shield)
                        this.layer.noStroke()
                        this.layer.rect((this.graphics.arms[0].bottom.x+this.graphics.arms[1].bottom.x)/2,(this.graphics.arms[0].bottom.y+this.graphics.arms[1].bottom.y)/2,36*lcos(this.anim.direction),48,3)
                    }
                    if(this.name=='Jet'&&this.trigger.display.pack&&lcos(this.anim.direction+180)<0){
                        this.layer.fill(this.color.pack[0],this.color.pack[1],this.color.pack[2],this.fade*this.fades.pack)
                        this.layer.noStroke()
                        this.layer.rect(lsin(this.anim.direction+180)*13,-48,12,36,2)
                        this.layer.fill(this.color.pack[0]-100,this.color.pack[1]-100,this.color.pack[2]-100,this.fade*this.fades.pack)
                        this.layer.rect(lsin(this.anim.direction+180)*13,-28,10,4)
                        this.layer.fill(255,150,0,this.fade*this.fades.pack/2)
                        this.layer.triangle(lsin(this.anim.direction+180)*13-4,-26,lsin(this.anim.direction+180)*13+4,-26,lsin(this.anim.direction+180)*13,-18+lsin(this.time*5)*2)
                        this.layer.fill(255,75,0,this.fade*this.fades.pack/2)
                        this.layer.triangle(lsin(this.anim.direction+180)*13-2,-26,lsin(this.anim.direction+180)*13+2,-26,lsin(this.anim.direction+180)*13,-22+lsin(this.time*5))
                    }
                    if(this.name=='Bolt'&&this.trigger.display.shock){
                        this.layer.noStroke()
                        for(let a=0,la=this.shocks.length;a<la;a++){
                            this.layer.fill(this.color.shock[0],this.color.shock[1],this.color.shock[2],this.fade*this.shocks[a][1])
                            this.layer.triangle(lsin(this.shocks[a][0])*4,lcos(this.shocks[a][0])*4-48,lsin(this.shocks[a][0])*-4,lcos(this.shocks[a][0])*-4-48,-lcos(this.shocks[a][0])*48,lsin(this.shocks[a][0])*48-48)
                        }
                    }
                    if((this.name=='Lightspeed'||this.name=='Councilman'||this.name=='Avant Guard')&&this.trigger.display.wing){
                        this.layer.noFill()
                        this.layer.stroke(this.color.wing[0],this.color.wing[1],this.color.wing[2],this.fade*this.fades.wing)
                        this.layer.strokeWeight(3)
                        for(let a=0,la=2;a<la;a++){
                            if(lcos(a*180+this.anim.direction)<0){
                                if(lsin(a*180+this.anim.direction)<=0){
                                    this.layer.arc(0,-81,66*lcos(a*180+this.anim.direction),72,-5,85)
                                    this.layer.arc(0,-87,48*lcos(a*180+this.anim.direction),60,-5,85)
                                }else{
                                    this.layer.arc(0,-81,66*lcos(a*180+this.anim.direction),72,95,185)
                                    this.layer.arc(0,-87,48*lcos(a*180+this.anim.direction),60,95,185)
                                }
                            }
                        }
                    }
                    if(this.name=='Lunar Dust'&&this.trigger.display.outline){
                        this.layer.fill(this.flashColor(this.color.outline)[0],this.flashColor(this.color.outline)[1],this.flashColor(this.color.outline)[2],this.fade*this.fades.outline)
                        this.layer.stroke(this.flashColor(this.color.outline)[0],this.flashColor(this.color.outline)[1],this.flashColor(this.color.outline)[2],this.fade*this.fades.outline)
                        this.layer.strokeWeight(7)
                        for(let g=0;g<2;g++){
                            if(this.trigger.display.skin.arms){
                                this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                                this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                            }
                            if(this.trigger.display.skin.legs){
                                this.layer.line(this.graphics.legs[g].top.x,this.graphics.legs[g].top.y,this.graphics.legs[g].middle.x,this.graphics.legs[g].middle.y)
                                this.layer.line(this.graphics.legs[g].middle.x,this.graphics.legs[g].middle.y,this.graphics.legs[g].bottom.x,this.graphics.legs[g].bottom.y)
                            }
                        }
                        this.layer.noStroke()
                        this.layer.ellipse(0,-48,16,42)
                        this.layer.ellipse(0,-81,33,33)
                    }
                    if((this.name=='Management Soldier'||this.name=='Management Special Forces'||this.name=='Management Sniper'||this.name=='Walker Driver'||this.name=='Riot Police')&&this.trigger.display.visor&&lcos(this.anim.direction)<=0){
                        this.layer.noStroke()
                        this.layer.fill(this.color.visor[0],this.color.visor[1],this.color.visor[2],this.fade*this.fades.visor/2)
                        this.layer.rect(lsin(this.anim.direction)*18,-78,20*lcos(this.anim.direction),6)
                    }
                    if(this.name=='Slow King'&&this.trigger.display.cape&&lcos(this.anim.direction+180)<-0.1){
                        this.layer.noStroke()
                        this.layer.fill(this.color.cape[0],this.color.cape[1],this.color.cape[2],this.fade*this.fades.cape)
                        this.layer.arc(5*lsin(this.anim.direction+180),-60,-8*lcos(this.anim.direction+180),12,-180,0)
                        for(let a=0,la=5;a<la;a++){
                            this.layer.triangle(5*lsin(this.anim.direction+180)-4*lcos(this.anim.direction+180),-60,5*lsin(this.anim.direction+180)+4*lcos(this.anim.direction+180),-60,8*lsin(this.anim.direction+180)+(-12+a*6)*lcos(this.anim.direction+180),-3)
                        }
                    }
                    if(this.name=='Nil'&&this.trigger.display.cape&&lcos(this.anim.direction+180)<-0.1){
                        this.layer.noStroke()
                        this.layer.fill(this.color.cape[0][0],this.color.cape[0][1],this.color.cape[0][2],this.fade*this.fades.cape)
                        for(let a=0,la=2;a<la;a++){
                            this.layer.triangle(5*lsin(this.anim.direction+180)-4*lcos(this.anim.direction+180),-60,5*lsin(this.anim.direction+180)+4*lcos(this.anim.direction+180),-60,8*lsin(this.anim.direction+180)+(-12+a*24)*lcos(this.anim.direction+180),-3)
                        }
                        this.layer.fill(this.color.cape[1][0],this.color.cape[1][1],this.color.cape[1][2],this.fade*this.fades.cape)
                        this.layer.arc(5*lsin(this.anim.direction+180),-60,-8*lcos(this.anim.direction+180),12,-180,0)
                        for(let a=0,la=3;a<la;a++){
                            this.layer.triangle(5*lsin(this.anim.direction+180)-4*lcos(this.anim.direction+180),-60,5*lsin(this.anim.direction+180)+4*lcos(this.anim.direction+180),-60,8*lsin(this.anim.direction+180)+(-6+a*6)*lcos(this.anim.direction+180),-3)
                        }
                    }
                    if((this.name=='Roger Reviv'||this.name=='Tech Support')&&this.trigger.display.headset){
                        this.layer.noStroke()
                        this.layer.fill(this.color.headset[0],this.color.headset[1],this.color.headset[2],this.fade*this.fades.headset)
					    for(let a=0,la=2;a<la;a++){
                            if(lcos(this.anim.direction-90+a*180)<=0){
                                this.layer.ellipse(lsin(this.anim.direction-90+a*180)*15,-81,-lcos(this.anim.direction-90+a*180)*6+6,12)
                            }
                        }
                        this.layer.stroke(this.color.headset[0],this.color.headset[1],this.color.headset[2],this.fade*this.fades.headset)
                        this.layer.strokeWeight(2)
                        this.layer.noFill()
                        for(let a=0,la=2;a<la;a++){
                            if(lcos(this.anim.direction-90+a*180)<=0){
                                if(lsin(this.anim.direction-90+a*180)>0){
                                    this.layer.arc(0,-85,abs(lsin(this.anim.direction-90+a*180))*30,26,-90,0)
                                }else if(lsin(this.anim.direction-90+a*180)<0){
                                    this.layer.arc(0,-85,abs(lsin(this.anim.direction-90+a*180))*30,26,-180,-90)
                                }else{
                                    this.layer.line(0,-85,0,-98)
                                }
                            }
                        }
                    }
                    if(this.name=='Cartel'&&this.trigger.display.sunglasses&&lcos(this.anim.direction)<=0){
                        this.layer.fill(this.color.sunglasses[0],this.color.sunglasses[1],this.color.sunglasses[2],this.fade*this.fades.sunglasses)
                        this.layer.noStroke()
	    				this.layer.ellipse(lsin(this.anim.direction)*16+lcos(this.anim.direction)*-5,-78,8*lcos(this.anim.direction),6)
		    			this.layer.ellipse(lsin(this.anim.direction)*16+lcos(this.anim.direction)*5,-78,8*lcos(this.anim.direction),6)
			    		this.layer.rect(lsin(this.anim.direction)*16,-78,16*lcos(this.anim.direction),2)
                    }
                    if(this.name=='Rewriter'&&this.trigger.display.goggles&&lcos(this.anim.direction)<=0){
                        this.layer.fill(this.flashColor(this.color.goggles[0])[0],this.flashColor(this.color.goggles[0])[1],this.flashColor(this.color.goggles[0])[2],this.fade*this.fades.goggles)
                        this.layer.stroke(this.flashColor(this.color.goggles[1])[0],this.flashColor(this.color.goggles[1])[1],this.flashColor(this.color.goggles[1])[2],this.fade*this.fades.goggles)
	    				this.layer.strokeWeight(2)
    					this.layer.rect(lsin(this.anim.direction)*15.5,this.parts.eyeLevel,lcos(this.anim.direction)*18,6,2)
                    }
                    if(this.name=='Jet'&&this.trigger.display.goggles&&lcos(this.anim.direction)<=0){
                        this.layer.fill(this.flashColor(this.color.goggles)[0],this.flashColor(this.color.goggles)[1],this.flashColor(this.color.goggles)[2],this.fade*this.fades.goggles)
                        this.layer.stroke(20,20,20,this.fade*this.fades.goggles)
	    				this.layer.strokeWeight(2)
    					this.layer.rect(lsin(this.anim.direction)*15.5,this.parts.eyeLevel,lcos(this.anim.direction)*20,7,2)
                    }
                    if(this.name=='Scrapper'&&this.trigger.display.goggles&&lcos(this.anim.direction)<=0){
                        this.layer.fill(this.flashColor(this.color.goggles)[0],this.flashColor(this.color.goggles)[1],this.flashColor(this.color.goggles)[2],this.fade*this.fades.goggles)
                        this.layer.stroke(120,120,120,this.fade*this.fades.goggles)
	    				this.layer.strokeWeight(2)
    					this.layer.rect(lsin(this.anim.direction)*15.5,this.parts.eyeLevel,lcos(this.anim.direction)*20,7,2)
                    }
                    if(this.name=='Biker'&&this.trigger.display.goggles&&lcos(this.anim.direction)<=0){
                        this.layer.fill(this.flashColor(this.color.goggles)[0],this.flashColor(this.color.goggles)[1],this.flashColor(this.color.goggles)[2],this.fade*this.fades.goggles)
                        this.layer.stroke(190,20,20,this.fade*this.fades.goggles)
	    				this.layer.strokeWeight(2)
    					this.layer.rect(lsin(this.anim.direction)*15.5,this.parts.eyeLevel,lcos(this.anim.direction)*20,7,2)
                    }
                    for(let g=0;g<2;g++){
                        if((this.name=='Goon'||this.name=='Slaver'||this.name=='Romeo'||this.name=='Batter'||this.name=='Swordmaster'||this.name=='Champion'||this.name=='Vengeful'||this.name=='Lunaria'||this.name=='Divine Guard'||this.name=='Avant Guard')&&this.trigger.display.extra.sword&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4&&g==0){
                            this.minorDisplay(0,g)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<=-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                            if((this.name=='Billy Beatup'||this.name=='Lunar Shard'||this.name=='Solar Shard'||this.name=='Coffee Commander'||this.name=='Divine Guard'||this.name=='Avant Guard')&&this.trigger.display.band||this.name=='Gas Man'&&this.trigger.display.can&&g==0){
                                this.minorDisplay(1,g)
                            }
                            if(this.name=='Prison Guard'&&this.trigger.display.armor){
                                this.layer.stroke(this.flashColor(this.color.armor)[0],this.flashColor(this.color.armor)[1],this.flashColor(this.color.armor)[2],this.fade*this.fades.armor)
                                this.layer.strokeWeight(4)
                                this.layer.line(
                                    this.graphics.arms[g].top.x*0.7+this.graphics.arms[g].middle.x*0.3,this.graphics.arms[g].top.y*0.7+this.graphics.arms[g].middle.y*0.3,
                                    this.graphics.arms[g].top.x*0.3+this.graphics.arms[g].middle.x*0.7,this.graphics.arms[g].top.y*0.3+this.graphics.arms[g].middle.y*0.7)
                                this.layer.line(
                                    this.graphics.arms[g].middle.x*0.7+this.graphics.arms[g].bottom.x*0.3,this.graphics.arms[g].middle.y*0.7+this.graphics.arms[g].bottom.y*0.3,
                                    this.graphics.arms[g].middle.x*0.3+this.graphics.arms[g].bottom.x*0.7,this.graphics.arms[g].middle.y*0.3+this.graphics.arms[g].bottom.y*0.7)
                            }
                            if(this.name=='Assistant Fitness Officer'&&this.trigger.display.muscles){
                                this.layer.strokeWeight(6)
                                this.layer.line(
                                    this.graphics.arms[g].top.x*0.7+this.graphics.arms[g].middle.x*0.3,this.graphics.arms[g].top.y*0.7+this.graphics.arms[g].middle.y*0.3,
                                    this.graphics.arms[g].top.x*0.3+this.graphics.arms[g].middle.x*0.7,this.graphics.arms[g].top.y*0.3+this.graphics.arms[g].middle.y*0.7)
                            }
                        }
                    }
                    if(this.name=='Solar Shard'&&this.trigger.display.sun){
                        this.layer.noFill()
                        this.layer.stroke(this.color.sun[0],this.color.sun[1],this.color.sun[2],this.fade*this.fades.sun)
                        this.layer.strokeWeight(3)
                        for(let a=0,la=2;a<la;a++){
                            if(lcos(a*180+this.anim.direction)<=0){
                                if(lsin(a*180+this.anim.direction)>0){
                                    this.layer.arc(0,-48,24*lcos(a*180+this.anim.direction),24,-75,75)
                                }else{
                                    this.layer.arc(0,-48,24*lcos(a*180+this.anim.direction),24,105,255)
                                }
                                this.layer.line(12*lcos(a*180+this.anim.direction),-48,18*lcos(a*180+this.anim.direction),-48)
                                this.layer.line(6*sqrt(2)*lcos(a*180+this.anim.direction),-48-6*sqrt(2),9*sqrt(2)*lcos(a*180+this.anim.direction),-48-9*sqrt(2))
                                this.layer.line(6*sqrt(2)*lcos(a*180+this.anim.direction),-48+6*sqrt(2),9*sqrt(2)*lcos(a*180+this.anim.direction),-48+9*sqrt(2))
                            }
                        }
                    }
                    if(this.name=='Lunar Shard'&&this.trigger.display.moon){
                        this.layer.fill(this.color.moon[0][0],this.color.moon[0][1],this.color.moon[0][2],this.fade*this.fades.moon)
                        this.layer.stroke(this.color.moon[1][0],this.color.moon[1][1],this.color.moon[1][2],this.fade*this.fades.moon)
                        this.layer.strokeWeight(3)
                        for(let a=0,la=2;a<la;a++){
                            if(lcos(a*180+this.anim.direction)<=0){
                                this.layer.beginShape()
                                this.layer.vertex(24*lsin(a*180+this.anim.direction),-68)
                                this.layer.bezierVertex(18*lsin(a*180+this.anim.direction),-51,12*lsin(a*180+this.anim.direction),-45,7*lsin(a*180+this.anim.direction),-44)
                                this.layer.vertex(7*lsin(a*180+this.anim.direction),-52)
                                this.layer.bezierVertex(12*lsin(a*180+this.anim.direction),-52,18*lsin(a*180+this.anim.direction),-56,24*lsin(a*180+this.anim.direction),-68)
                                this.layer.endShape()
                            }
                        }
                    }
                    if(this.name=='Divine Guard'&&this.trigger.display.sphere){
                        this.layer.fill(this.color.sphere[0],this.color.sphere[1],this.color.sphere[2],this.fade*this.fades.sphere)
                        this.layer.noStroke()
                        for(let a=0,la=2;a<la;a++){
                            if(lcos(this.anim.direction-60+a*120)<=0){
                                this.layer.ellipse(lsin(this.anim.direction-60+a*120)*6,-64,4,4)
                            }
                        }
                        this.layer.fill(this.color.sphere[0],this.color.sphere[1],this.color.sphere[2],this.fade*this.fades.sphere*0.4)
                        for(let a=0,la=2;a<la;a++){
                            if(lcos(this.anim.direction-60+a*120)<=0){
                                this.layer.ellipse(lsin(this.anim.direction-60+a*120)*6,-64,5,5)
                                this.layer.ellipse(lsin(this.anim.direction-60+a*120)*6,-64,6,6)
                            }
                        }
                    }
                    if(this.name=='Lunaria'&&this.trigger.display.under.under.top&&lcos(this.spin.under.under.top[0]+this.anim.direction)<=0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,-lcos(this.spin.under.under.top[0]+this.anim.direction)))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,-lcos(this.spin.under.under.top[0]+this.anim.direction)))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,-lcos(this.spin.under.under.top[0]+this.anim.direction)))[2],this.fade*this.fades.under.under.top)
                        this.layer.ellipse(lsin(this.spin.under.under.top[0]+this.anim.direction)*5.2,-53,lcos(this.spin.under.under.top[0]+this.anim.direction)*2.5+3.5,6)
                    }
                    if(this.name=='Lunaria'&&this.trigger.display.under.under.top&&lcos(this.spin.under.under.top[1]+this.anim.direction)<=0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,-lcos(this.spin.under.under.top[1]+this.anim.direction)))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,-lcos(this.spin.under.under.top[1]+this.anim.direction)))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,-lcos(this.spin.under.under.top[1]+this.anim.direction)))[2],this.fade*this.fades.under.under.top)
                        this.layer.ellipse(lsin(this.spin.under.under.top[1]+this.anim.direction)*5.2,-53,lcos(this.spin.under.under.top[1]+this.anim.direction)*2.5+3.5,6)
                    }
                    if(this.trigger.display.skin.body){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.skin.body)[0],this.flashColor(this.color.skin.body)[1],this.flashColor(this.color.skin.body)[2],this.fade*this.fades.skin.body)
                        this.layer.ellipse(0,-48,13,39)
                        if(this.name=='Romeo'||this.name=='Intern'){
                            this.layer.fill(this.flashColor(this.color.skin.upperBody)[0],this.flashColor(this.color.skin.upperBody)[1],this.flashColor(this.color.skin.upperBody)[2],this.fade*this.fades.skin.body)
                            this.layer.arc(0,-45,14,46,-180,0)
                        }else if(this.name=='Billy Beatup'){
                            this.layer.fill(this.flashColor(this.color.skin.upperBody)[0],this.flashColor(this.color.skin.upperBody)[1],this.flashColor(this.color.skin.upperBody)[2],this.fade*this.fades.skin.body)
                            this.layer.arc(0,-48,14,40,-180,0)
                        }else if(this.name=='Assistant Hiring Officer'||this.name=='Assistant Fitness Officer'||this.name=='PhD'){
                            this.layer.fill(this.flashColor(this.color.skin.upperBody)[0],this.flashColor(this.color.skin.upperBody)[1],this.flashColor(this.color.skin.upperBody)[2],this.fade*this.fades.skin.body)
                            this.layer.arc(0,-42,14,52,-180,0)
                        }else if(this.name=='Corrupt Detective'){
                            this.layer.fill(this.flashColor(this.color.skin.upperBody)[0],this.flashColor(this.color.skin.upperBody)[1],this.flashColor(this.color.skin.upperBody)[2],this.fade*this.fades.skin.body)
                            this.layer.arc(0,-47,14,42,-180,0)
                        }
                    }
                    if(this.name=='Nerfer'&&this.trigger.display.arrows&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.color.arrows[0][0],this.color.arrows[0][1],this.color.arrows[0][2],this.fade*this.fades.arrows)
                        regTriangle(this.layer,6*lsin(this.anim.direction),-54,4*lcos(this.anim.direction),4,0)
                        this.layer.fill(this.color.arrows[1][0],this.color.arrows[1][1],this.color.arrows[1][2],this.fade*this.fades.arrows)
                        regTriangle(this.layer,6.5*lsin(this.anim.direction),-48,4*lcos(this.anim.direction),4,0)
                        this.layer.fill(this.color.arrows[2][0],this.color.arrows[2][1],this.color.arrows[2][2],this.fade*this.fades.arrows)
                        regTriangle(this.layer,6*lsin(this.anim.direction),-42,4*lcos(this.anim.direction),4,0)
                    }
                    if(this.name=='Buffer'&&this.trigger.display.arrows&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.color.arrows[0][0],this.color.arrows[0][1],this.color.arrows[0][2],this.fade*this.fades.arrows)
                        regTriangle(this.layer,6*lsin(this.anim.direction),-54,4*lcos(this.anim.direction),4,60)
                        this.layer.fill(this.color.arrows[1][0],this.color.arrows[1][1],this.color.arrows[1][2],this.fade*this.fades.arrows)
                        regTriangle(this.layer,6.5*lsin(this.anim.direction),-48,4*lcos(this.anim.direction),4,60)
                        this.layer.fill(this.color.arrows[2][0],this.color.arrows[2][1],this.color.arrows[2][2],this.fade*this.fades.arrows)
                        regTriangle(this.layer,6*lsin(this.anim.direction),-42,4*lcos(this.anim.direction),4,60)
                    }
                    if(this.name=='Billy Beatup'&&this.trigger.display.logo&&lcos(this.anim.direction)>0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.logo)[0],this.flashColor(this.color.logo)[1],this.flashColor(this.color.logo)[2],this.fade*this.fades.logo)
                        this.layer.ellipse(lsin(this.anim.direction)*6.5,-54,8*lcos(this.anim.direction),8)
                    }
                    if(this.name=='Tech Support'&&this.trigger.display.logo&&lcos(this.anim.direction)>0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.logo)[0],this.flashColor(this.color.logo)[1],this.flashColor(this.color.logo)[2],this.fade*this.fades.logo)
                        this.layer.quad(lsin(this.anim.direction)*6.5-4*lcos(this.anim.direction),-58,lsin(this.anim.direction)*6.5-2*lcos(this.anim.direction),-58,lsin(this.anim.direction)*6.5+4*lcos(this.anim.direction),-50,lsin(this.anim.direction)*6.5+2*lcos(this.anim.direction),-50)
                        this.layer.quad(lsin(this.anim.direction)*6.5-4*lcos(this.anim.direction),-52,lsin(this.anim.direction)*6.5-2*lcos(this.anim.direction),-52,lsin(this.anim.direction)*6.5+4*lcos(this.anim.direction),-56,lsin(this.anim.direction)*6.5+2*lcos(this.anim.direction),-56)
                    }
                    if((this.name=='Management Officer'||this.name=='Management Caller'||this.name=='Comrade')&&this.trigger.display.badge&&lcos(this.anim.direction+36)>0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.badge[0])[0],this.flashColor(this.color.badge[0])[1],this.flashColor(this.color.badge[0])[2],this.fade*this.fades.badge)
                        this.layer.ellipse(lsin(this.anim.direction+36)*6,-57,5*lcos(this.anim.direction+36),5)
                        this.layer.fill(this.flashColor(this.color.badge[1])[0],this.flashColor(this.color.badge[1])[1],this.flashColor(this.color.badge[1])[2],this.fade*this.fades.badge)
                        this.layer.ellipse(lsin(this.anim.direction+36)*6,-56,3*lcos(this.anim.direction+36),3)
                    }
                    if(this.name=='Coffee Commander'&&this.trigger.display.badge&&lcos(this.anim.direction-36)>0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.badge)[0],this.flashColor(this.color.badge)[1],this.flashColor(this.color.badge)[2],this.fade*this.fades.badge)
                        this.layer.ellipse(lsin(this.anim.direction-36)*6,-57,4*lcos(this.anim.direction-36),4)
                    }
                    if((this.name=='Bouncer'||this.name=='Drunk'||this.name=='Management Officer'||this.name=='Management Caller'||this.name=='Deployer'||this.name=='Chief Deployer')&&this.trigger.display.belt){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.belt)[0],this.flashColor(this.color.belt)[1],this.flashColor(this.color.belt)[2],this.fade*this.fades.belt)
                        this.layer.rect(0,-45,14,3)
                    }
                    if(this.name=='Ninja'&&this.trigger.display.belt){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.belt)[0],this.flashColor(this.color.belt)[1],this.flashColor(this.color.belt)[2],this.fade*this.fades.belt)
                        this.layer.rect(0,-51,13,3)
					    this.layer.rect(0,-45,13,3)
                    }
                    if(this.name=='Ninja Master'&&this.trigger.display.belt){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.belt[0])[0],this.flashColor(this.color.belt[0])[1],this.flashColor(this.color.belt[0])[2],this.fade*this.fades.belt)
                        this.layer.rect(0,-51,13,3)
					    this.layer.rect(0,-45,13,3)
                        this.layer.fill(this.flashColor(this.color.belt[1])[0],this.flashColor(this.color.belt[1])[1],this.flashColor(this.color.belt[1])[2],this.fade*this.fades.belt)
                        this.layer.rect(0,-51,13,1)
					    this.layer.rect(0,-45,13,1)
                    }
                    if(this.name=='Armored Ninja'&&this.trigger.display.belt){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.belt)[0],this.flashColor(this.color.belt)[1],this.flashColor(this.color.belt)[2],this.fade*this.fades.belt)
                        this.layer.rect(0,-51,13,3)
					    this.layer.rect(0,-45,13,3)
                        for(let a=0,la=12;a<la;a++){
                            if(lcos(a*30+this.anim.direction)>0){
					            this.layer.rect(lsin(a*30+this.anim.direction)*6.5,-48,lcos(a*30+this.anim.direction),3)
                            }
                        }
                    }
                    if((this.name=='Red'||this.name=='Management Custodian'||this.name=='Gas Man'||this.name=='Comrade')&&this.trigger.display.belt){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.belt)[0],this.flashColor(this.color.belt)[1],this.flashColor(this.color.belt)[2],this.fade*this.fades.belt)
                        for(let a=0,la=6;a<la;a++){
                            if(lcos(30+a*60+this.anim.direction)>0){
					            this.layer.rect(lsin(30+a*60+this.anim.direction)*6.5,-48,lcos(30+a*60+this.anim.direction)*4,3)
                            }
                        }
                    }
                    if((this.name=='Management Soldier'||this.name=='Management Special Forces'||this.name=='Management Sniper'||this.name=='Walker Driver'||this.name=='Riot Police')&&this.trigger.display.belt){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.belt)[0],this.flashColor(this.color.belt)[1],this.flashColor(this.color.belt)[2],this.fade*this.fades.belt)
                        for(let a=0,la=8;a<la;a++){
                            if(lcos(22.5+a*45+this.anim.direction)>0){
					            this.layer.rect(lsin(22.5+a*45+this.anim.direction)*6.5,-48,lcos(22.5+a*45+this.anim.direction)*3,2)
                            }
                        }
                    }
                    if((this.name=='Sharpshot'||this.name=='Prison Guard')&&this.trigger.display.belt){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.belt[0])[0],this.flashColor(this.color.belt[0])[1],this.flashColor(this.color.belt[0])[2],this.fade*this.fades.belt)
                        this.layer.rect(0,-45,14,4)
                        if(lcos(this.anim.direction)>0){
                            this.layer.fill(this.flashColor(this.color.belt[1])[0],this.flashColor(this.color.belt[1])[1],this.flashColor(this.color.belt[1])[2],this.fade*this.fades.belt)
                            this.layer.rect(lsin(this.anim.direction)*7,-45,6*lcos(this.anim.direction),6)
                        }
                    }
                    if(this.name=='Scrapper'&&this.trigger.display.belt){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.belt[0])[0],this.flashColor(this.color.belt[0])[1],this.flashColor(this.color.belt[0])[2],this.fade*this.fades.belt)
                        this.layer.rect(0,-45,14,3)
                        if(lcos(this.anim.direction)>0){
                            this.layer.fill(this.flashColor(this.color.belt[1])[0],this.flashColor(this.color.belt[1])[1],this.flashColor(this.color.belt[1])[2],this.fade*this.fades.belt)
                            this.layer.rect(lsin(this.anim.direction)*7,-45,8*lcos(this.anim.direction),8)
                            this.layer.fill(this.flashColor(this.color.belt[2])[0],this.flashColor(this.color.belt[2])[1],this.flashColor(this.color.belt[2])[2],this.fade*this.fades.belt)
                            this.layer.rect(lsin(this.anim.direction)*7,-45,4*lcos(this.anim.direction),4)
                        }
                    }
                    if((this.name=='Gangster'||this.name=='Batter'||this.name=='Gangster Gunner'||this.name=='Gangster Machinegunner')&&this.trigger.display.overall){
                        this.layer.noStroke()
                        this.layer.fill(this.color.overall[0],this.color.overall[1],this.color.overall[2],this.fade)
                        this.layer.arc(0,-48,15,41,0,180)
                        for(let a=0,la=4;a<la;a++){
                            let direction=this.anim.direction-36+a*72+floor(a/2)*48
                            if(lcos(direction)>0){
                                this.layer.quad(lsin(direction)*7.5-lcos(direction),-46,lsin(direction)*7.5+lcos(direction),-46,lsin(direction)*3+lcos(direction),-72,lsin(direction)*3-lcos(direction),-72)
                            }
                        }
                    }
                    if(this.name=='Prisoner'&&this.trigger.display.belt){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.belt)[0],this.flashColor(this.color.belt)[1],this.flashColor(this.color.belt)[2],this.fade*this.fades.belt)
                        for(let a=0,la=6;a<la;a++){
                            if(lcos(30+a*60+this.anim.direction)>0){
					            this.layer.rect(lsin(30+a*60+this.anim.direction)*6.5,-45,lcos(30+a*60+this.anim.direction)*2,6)
                            }
                        }
                    }
                    if(this.name=='Drunk'&&this.trigger.display.bottle){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.bottle)[0],this.flashColor(this.color.bottle)[1],this.flashColor(this.color.bottle)[2],this.fade*this.fades.bottle)
                        for(let g=0;g<3;g++){
                            if(lcos(this.anim.direction+15+g*30)>0){
                                this.layer.rect(lsin(this.anim.direction+15+g*30)*7,-45,3*lcos(this.anim.direction+15+g*30),6)
                                this.layer.rect(lsin(this.anim.direction+15+g*30)*7,-49,2*lcos(this.anim.direction+15+g*30),2)
                            }
                        }
                    }
                    if(this.name=='Swordmaster'&&this.trigger.display.belt){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.belt)[0],this.flashColor(this.color.belt)[1],this.flashColor(this.color.belt)[2],this.fade*this.fades.belt)
                        this.layer.rect(0,-45,14,3)
                        for(let a=0,la=6;a<la;a++){
                            if(lcos(30+a*60+this.anim.direction)>0){
					            this.layer.rect(lsin(30+a*60+this.anim.direction)*6.5,-45,lcos(30+a*60+this.anim.direction)*4,8)
                            }
                        }
                    }
                    if(this.name=='Jet'&&this.trigger.display.belt){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.belt)[0],this.flashColor(this.color.belt)[1],this.flashColor(this.color.belt)[2],this.fade*this.fades.belt)
                        this.layer.rect(0,-45,14,3)
                        for(let a=0,la=10;a<la;a++){
                            if(lcos(a*36+this.anim.direction)>0){
					            this.layer.rect(lsin(a*36+this.anim.direction)*6.5,-45,lcos(a*36+this.anim.direction)*2,7)
                            }
                        }
                    }
                    if(this.name=='Beekeeper'&&this.trigger.display.belt){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.belt)[0],this.flashColor(this.color.belt)[1],this.flashColor(this.color.belt)[2],this.fade*this.fades.belt)
                        this.layer.rect(0,-45,14,2)
                        for(let a=0,la=9;a<la;a++){
                            if(lcos(a*40+this.anim.direction)>0){
					            this.layer.rect(lsin(a*40+this.anim.direction)*6.5,-43,lcos(a*40+this.anim.direction)*2,6)
                            }
                        }
                    }
                    if(this.name=='Coffee Commander'&&this.trigger.display.belt){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.belt)[0],this.flashColor(this.color.belt)[1],this.flashColor(this.color.belt)[2],this.fade*this.fades.belt)
                        for(let a=0,la=12;a<la;a++){
                            if(lcos(a*30+this.anim.direction)>0){
					            this.layer.rect(lsin(a*30+this.anim.direction)*6.5,-46,lcos(a*30+this.anim.direction)*(3-a%2*2),4)
                            }
                        }
                    }
                    if(this.name=='Wiz'&&this.trigger.display.belt){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.belt)[0],this.flashColor(this.color.belt)[1],this.flashColor(this.color.belt)[2],this.fade*this.fades.belt)
                        for(let a=0,la=6;a<la;a++){
                            if(lcos(a*60+this.anim.direction)>0){
                                regStar(this.layer,lsin(a*60+this.anim.direction)*6.5,-46,5,lcos(a*60+this.anim.direction)*(3-a%2*2),4,lcos(a*60+this.anim.direction)*(3-a%2*2)*0.5,2,0)
                            }
                        }
                    }
                    if(this.name=='Reichswehr'&&this.trigger.display.pocket){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(this.color.pocket)[0],this.flashColor(this.color.pocket)[1],this.flashColor(this.color.pocket)[2],this.fade*this.fades.pocket)
                        for(let a=0,la=2;a<la;a++){
                            if(lcos(this.anim.direction-36+a*72)>0){
                                this.layer.rect(lsin(this.anim.direction-36+a*72)*6,-54,lcos(this.anim.direction-36+a*72)*4,4)
                            }
        				}
                    }
                    if(this.name=='Rusty'&&this.trigger.display.rust){
                        this.layer.fill(this.flashColor(this.color.rust[0])[0],this.flashColor(this.color.rust[0])[1],this.flashColor(this.color.rust[0])[2],this.fade*this.fades.rust)
                        this.layer.noStroke()
                        this.layer.ellipse(-3,-49,7,7)
                        this.layer.ellipse(2,-40,6,6)
                        this.layer.ellipse(1,-58,5,5)
                        this.layer.fill(this.flashColor(this.color.rust[1])[0],this.flashColor(this.color.rust[1])[1],this.flashColor(this.color.rust[1])[2],this.fade*this.fades.rust)
                        this.layer.ellipse(3,-44,7,7)
	    				this.layer.ellipse(-2,-33,6,6)
    					this.layer.ellipse(-1,-62,5,5)
                    }
                    for(let g=0;g<2;g++){
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)<0.4&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.3){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(4)
                            this.layer.line(this.graphics.arms[g].top.x,this.graphics.arms[g].top.y,this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y)
                            this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                            if((this.name=='Billy Beatup'||this.name=='Lunar Shard'||this.name=='Solar Shard'||this.name=='Coffee Commander'||this.name=='Divine Guard'||this.name=='Avant Guard')&&this.trigger.display.band||this.name=='Gas Man'&&this.trigger.display.can&&g==0||this.name=='Assistant Hiring Officer'&&this.trigger.display.clipboard&&g==0){
                                this.minorDisplay(1,g)
                            }
                            if(this.name=='Prison Guard'&&this.trigger.display.armor){
                                this.layer.stroke(this.flashColor(this.color.armor)[0],this.flashColor(this.color.armor)[1],this.flashColor(this.color.armor)[2],this.fade*this.fades.armor)
                                this.layer.strokeWeight(4)
                                this.layer.line(
                                    this.graphics.arms[g].top.x*0.7+this.graphics.arms[g].middle.x*0.3,this.graphics.arms[g].top.y*0.7+this.graphics.arms[g].middle.y*0.3,
                                    this.graphics.arms[g].top.x*0.3+this.graphics.arms[g].middle.x*0.7,this.graphics.arms[g].top.y*0.3+this.graphics.arms[g].middle.y*0.7)
                                this.layer.line(
                                    this.graphics.arms[g].middle.x*0.7+this.graphics.arms[g].bottom.x*0.3,this.graphics.arms[g].middle.y*0.7+this.graphics.arms[g].bottom.y*0.3,
                                    this.graphics.arms[g].middle.x*0.3+this.graphics.arms[g].bottom.x*0.7,this.graphics.arms[g].middle.y*0.3+this.graphics.arms[g].bottom.y*0.7)
                            }
                            if(this.name=='Assistant Fitness Officer'&&this.trigger.display.muscles){
                                this.layer.strokeWeight(6)
                                this.layer.line(
                                    this.graphics.arms[g].top.x*0.7+this.graphics.arms[g].middle.x*0.3,this.graphics.arms[g].top.y*0.7+this.graphics.arms[g].middle.y*0.3,
                                    this.graphics.arms[g].top.x*0.3+this.graphics.arms[g].middle.x*0.7,this.graphics.arms[g].top.y*0.3+this.graphics.arms[g].middle.y*0.7)
                            }
                        }
                        for(let h=0;h<2;h++){
                            if((g==0&&h==0||g==1&&h==1)&&lcos(this.spin.legs[0].bottom+this.anim.direction)<=lcos(this.spin.legs[1].bottom+this.anim.direction)||(g==0&&h==1||g==1&&h==0)&&lcos(this.spin.legs[0].bottom+this.anim.direction)>lcos(this.spin.legs[1].bottom+this.anim.direction)){
                                if(this.trigger.display.skin.legs){
                                    this.layer.stroke(this.flashColor(this.color.skin.legs)[0],this.flashColor(this.color.skin.legs)[1],this.flashColor(this.color.skin.legs)[2],this.fade*this.fades.skin.legs)
                                    this.layer.strokeWeight(4)
                                    this.layer.line(this.graphics.legs[h].top.x,this.graphics.legs[h].top.y,this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y)
                                    this.layer.line(this.graphics.legs[h].middle.x,this.graphics.legs[h].middle.y,this.graphics.legs[h].bottom.x,this.graphics.legs[h].bottom.y)
                                    if(this.name=='Prison Guard'&&this.trigger.display.armor){
                                        this.layer.stroke(this.flashColor(this.color.armor)[0],this.flashColor(this.color.armor)[1],this.flashColor(this.color.armor)[2],this.fade*this.fades.armor)
                                        this.layer.strokeWeight(4)
                                        this.layer.line(
                                            this.graphics.legs[h].top.x*0.7+this.graphics.legs[h].middle.x*0.3,this.graphics.legs[h].top.y*0.7+this.graphics.legs[h].middle.y*0.3,
                                            this.graphics.legs[h].top.x*0.3+this.graphics.legs[h].middle.x*0.7,this.graphics.legs[h].top.y*0.3+this.graphics.legs[h].middle.y*0.7)
                                        this.layer.line(
                                            this.graphics.legs[h].middle.x*0.7+this.graphics.legs[h].bottom.x*0.3,this.graphics.legs[h].middle.y*0.7+this.graphics.legs[h].bottom.y*0.3,
                                            this.graphics.legs[h].middle.x*0.3+this.graphics.legs[h].bottom.x*0.7,this.graphics.legs[h].middle.y*0.3+this.graphics.legs[h].bottom.y*0.7)
                                    }
                                }
                            }
                        }
                    }
                    if(this.name=='Lunaria'&&this.trigger.display.under.under.top&&lcos(this.spin.under.under.top[0]+this.anim.direction)>0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,lcos(this.spin.under.under.top[0]+this.anim.direction)))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,lcos(this.spin.under.under.top[0]+this.anim.direction)))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,lcos(this.spin.under.under.top[0]+this.anim.direction)))[2],this.fade*this.fades.under.under.top)
                        this.layer.ellipse(lsin(this.spin.under.under.top[0]+this.anim.direction)*5.2,-52,lcos(this.spin.under.under.top[0]+this.anim.direction)*2.5+3.5,6)
                    }
                    if(this.name=='Lunaria'&&this.trigger.display.under.under.top&&lcos(this.spin.under.under.top[1]+this.anim.direction)>0){
                        this.layer.noStroke()
                        this.layer.fill(this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,lcos(this.spin.under.under.top[1]+this.anim.direction)))[0],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,lcos(this.spin.under.under.top[1]+this.anim.direction)))[1],this.flashColor(mergeColor(this.color.skin.body,this.color.under.under.top,lcos(this.spin.under.under.top[1]+this.anim.direction)))[2],this.fade*this.fades.under.under.top)
                        this.layer.ellipse(lsin(this.spin.under.under.top[1]+this.anim.direction)*5.2,-52,lcos(this.spin.under.under.top[1]+this.anim.direction)*2.5+3.5,6)
                    }
                    if((this.name=='Trenchcoat'||this.name=='Trenchcoat Gunner'||this.name=='Capitalist'||this.name=='Bodyguard'||this.name=='Assistant Hiring Officer'||this.name=='Assistant Fitness Officer'||this.name=='Corrupt Detective'||this.name=='Coffee Commander')&&this.trigger.display.tie&&lcos(this.anim.direction)>0.1){
                        this.layer.fill(this.flashColor(this.color.tie[0])[0],this.flashColor(this.color.tie[0])[1],this.flashColor(this.color.tie[0])[2],this.fade*this.fades.tie)
                        this.layer.noStroke()
		    			this.layer.triangle(lsin(this.anim.direction)*3-lcos(this.anim.direction)*3,-70,lsin(this.anim.direction)*3+lcos(this.anim.direction)*3,-70,lsin(this.anim.direction)*9,-50)
	    				this.layer.fill(this.flashColor(this.color.tie[1])[0],this.flashColor(this.color.tie[1])[1],this.flashColor(this.color.tie[1])[2],this.fade*this.fades.tie)
                        this.layer.quad(lsin(this.anim.direction)*6-lcos(this.anim.direction)*1.5,-60,lsin(this.anim.direction)*3,-70,lsin(this.anim.direction)*6+lcos(this.anim.direction)*1.5,-60,lsin(this.anim.direction)*9,-50)
                    }
                    if(this.name=='Lunar Shard'&&this.trigger.display.moon){
                        this.layer.fill(this.color.moon[0][0],this.color.moon[0][1],this.color.moon[0][2],this.fade*this.fades.moon)
                        this.layer.stroke(this.color.moon[1][0],this.color.moon[1][1],this.color.moon[1][2],this.fade*this.fades.moon)
                        this.layer.strokeWeight(3)
                        for(let a=0,la=2;a<la;a++){
                            if(lcos(a*180+this.anim.direction)>0){
                                this.layer.beginShape()
                                this.layer.vertex(24*lsin(a*180+this.anim.direction),-68)
                                this.layer.bezierVertex(18*lsin(a*180+this.anim.direction),-51,12*lsin(a*180+this.anim.direction),-45,7*lsin(a*180+this.anim.direction),-44)
                                this.layer.vertex(7*lsin(a*180+this.anim.direction),-52)
                                this.layer.bezierVertex(12*lsin(a*180+this.anim.direction),-52,18*lsin(a*180+this.anim.direction),-56,24*lsin(a*180+this.anim.direction),-68)
                                this.layer.endShape()
                            }
                        }
                    }
                    if(this.name=='Solar Shard'&&this.trigger.display.sun){
                        this.layer.noFill()
                        this.layer.stroke(this.color.sun[0],this.color.sun[1],this.color.sun[2],this.fade*this.fades.sun)
                        this.layer.strokeWeight(3)
                        for(let a=0,la=2;a<la;a++){
                            if(lcos(a*180+this.anim.direction)>0){
                                if(lsin(a*180+this.anim.direction)>0){
                                    this.layer.arc(0,-48,24*lcos(a*180+this.anim.direction),24,-75,75)
                                }else{
                                    this.layer.arc(0,-48,24*lcos(a*180+this.anim.direction),24,105,255)
                                }
                                this.layer.line(12*lcos(a*180+this.anim.direction),-48,18*lcos(a*180+this.anim.direction),-48)
                                this.layer.line(6*sqrt(2)*lcos(a*180+this.anim.direction),-48-6*sqrt(2),9*sqrt(2)*lcos(a*180+this.anim.direction),-48-9*sqrt(2))
                                this.layer.line(6*sqrt(2)*lcos(a*180+this.anim.direction),-48+6*sqrt(2),9*sqrt(2)*lcos(a*180+this.anim.direction),-48+9*sqrt(2))
                            }
                        }
                    }
                    if(this.name=='PhD'&&this.trigger.display.button&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.flashColor(this.color.button)[0],this.flashColor(this.color.button)[1],this.flashColor(this.color.button)[2],this.fade*this.fades.button)
                        this.layer.noStroke()
                        this.layer.ellipse(lsin(this.anim.direction)*6,-54,5*lcos(this.anim.direction),5)
                    }
                    if(this.name=='Prestige'&&this.trigger.display.hex){
                        this.layer.fill(this.color.hex[0],this.color.hex[1],this.color.hex[2],this.fade*this.fades.hex)
                        this.layer.noStroke()
                        for(let a=0,la=6;a<la;a++){
                            if(lcos(this.anim.direction+a*60)>0){
                                regPoly(this.layer,lsin(this.anim.direction+a*60)*6.5,-48,6,3*lcos(this.anim.direction+a*60),3,0)
                            }
                        }
                    }
                    if(this.name=='Rewriter'&&this.trigger.display.bowtie&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.flashColor(this.color.bowtie[0])[0],this.flashColor(this.color.bowtie[0])[1],this.flashColor(this.color.bowtie[0])[2],this.fade*this.fades.bowtie)
                        this.layer.noStroke()
		    			this.layer.triangle(lsin(this.anim.direction)*3-lcos(this.anim.direction)*3,-70,lsin(this.anim.direction)*3+lcos(this.anim.direction)*3,-70,lsin(this.anim.direction)*9,-50)
	    				this.layer.fill(this.color.bowtie[1][0],this.color.bowtie[1][1],this.color.bowtie[1][2],this.fade*this.fades.bowtie)
                        this.layer.triangle(lsin(this.anim.direction)*6,-62,lsin(this.anim.direction)*6-lcos(this.anim.direction)*5,-64,lsin(this.anim.direction)*6-lcos(this.anim.direction)*5,-60)
                        this.layer.triangle(lsin(this.anim.direction)*6,-62,lsin(this.anim.direction)*6+lcos(this.anim.direction)*5,-64,lsin(this.anim.direction)*6+lcos(this.anim.direction)*5,-60)
                    }
                    if((this.name=='Trenchcoat'||this.name=='Trenchcoat Gunner'||this.name=='Corrupt Detective'||this.name=='PhD'||this.name=='Junkie')&&this.trigger.display.coat){
                        this.layer.fill(this.flashColor(this.color.coat)[0],this.flashColor(this.color.coat)[1],this.flashColor(this.color.coat)[2],this.fade*this.fades.coat)
                        this.layer.noStroke()
                        if(lcos(this.anim.direction)<0.5){
                            this.layer.ellipse(0,-48,18,40)
                        }else{
                            this.layer.arc(-1.5+lsin(this.anim.direction)*7,-48,20+min(0,lsin(this.anim.direction)*24),40+min(0,lsin(this.anim.direction)*8),90,270)
                            this.layer.arc(1.5+lsin(this.anim.direction)*7,-48,20+min(0,-lsin(this.anim.direction)*24),40+min(0,-lsin(this.anim.direction)*8),-90,90)
                        }
                    }
                    for(let g=0;g<2;g++){
                        if((this.name=='Goon'||this.name=='Slaver'||this.name=='Romeo'||this.name=='Batter'||this.name=='Swordmaster'||this.name=='Champion'||this.name=='Vengeful'||this.name=='Lunaria'||this.name=='Divine Guard'||this.name=='Avant Guard')&&this.trigger.display.extra.sword&&(lcos(this.spin.arms[g].top+this.anim.direction)>=0.4&&lcos(this.spin.arms[g].top+this.anim.direction)<0.6)&&g==0){
                            this.minorDisplay(0,g)
                        }
                        if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>-0.4&&lcos(this.spin.arms[g].top+this.anim.direction)<0.6){
                            this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                            this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                            this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                            this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                            if((this.name=='Billy Beatup'||this.name=='Lunar Shard'||this.name=='Solar Shard'||this.name=='Coffee Commander'||this.name=='Divine Guard'||this.name=='Avant Guard')&&this.trigger.display.band||this.name=='Gas Man'&&this.trigger.display.can&&g==0||this.name=='Assistant Hiring Officer'&&this.trigger.display.clipboard&&g==0){
                                this.minorDisplay(1,g)
                            }
                            if(this.name=='Prison Guard'&&this.trigger.display.armor){
                                this.layer.stroke(this.flashColor(this.color.armor)[0],this.flashColor(this.color.armor)[1],this.flashColor(this.color.armor)[2],this.fade*this.fades.armor)
                                this.layer.strokeWeight(4)
                                this.layer.line(
                                    this.graphics.arms[g].top.x*0.7+this.graphics.arms[g].middle.x*0.3,this.graphics.arms[g].top.y*0.7+this.graphics.arms[g].middle.y*0.3,
                                    this.graphics.arms[g].top.x*0.3+this.graphics.arms[g].middle.x*0.7,this.graphics.arms[g].top.y*0.3+this.graphics.arms[g].middle.y*0.7)
                                this.layer.line(
                                    this.graphics.arms[g].middle.x*0.7+this.graphics.arms[g].bottom.x*0.3,this.graphics.arms[g].middle.y*0.7+this.graphics.arms[g].bottom.y*0.3,
                                    this.graphics.arms[g].middle.x*0.3+this.graphics.arms[g].bottom.x*0.7,this.graphics.arms[g].middle.y*0.3+this.graphics.arms[g].bottom.y*0.7)
                            }
                            if(this.name=='Assistant Fitness Officer'&&this.trigger.display.muscles){
                                this.layer.strokeWeight(6)
                                this.layer.line(
                                    this.graphics.arms[g].top.x*0.7+this.graphics.arms[g].middle.x*0.3,this.graphics.arms[g].top.y*0.7+this.graphics.arms[g].middle.y*0.3,
                                    this.graphics.arms[g].top.x*0.3+this.graphics.arms[g].middle.x*0.7,this.graphics.arms[g].top.y*0.3+this.graphics.arms[g].middle.y*0.7)
                            }
                        }
                    }
                    if((this.name=='Comrade'||this.name=='Wiz')&&this.trigger.display.moustache&&lcos(this.anim.direction)<=0){
                        this.layer.stroke(this.color.moustache[0],this.color.moustache[1],this.color.moustache[2],this.fade*this.fades.moustache)
                        this.layer.strokeWeight(2)
                        this.layer.line(15*lsin(this.anim.direction),-75.25,15*lsin(this.anim.direction)-4*lcos(this.anim.direction),-74.25)
                        this.layer.line(15*lsin(this.anim.direction),-75.25,15*lsin(this.anim.direction)+4*lcos(this.anim.direction),-74.25)
                    }
                    if(this.name=='Buried'&&this.trigger.display.bone){
                        this.layer.push()
                        this.layer.translate(0,-81)
                        this.layer.stroke(this.color.bone[0],this.color.bone[1],this.color.bone[2],this.fade*this.fades.bone)
                        this.layer.strokeWeight(2)
                        this.layer.line(-8,0,-13,12)
                        this.layer.line(-8,0,-21,-4)
                        this.layer.line(8,0,17,-9)
                        this.layer.line(8,0,19,8)
                        this.layer.line(0,0,-5,-16)
                        this.layer.line(0,0,8,15)
                        this.layer.pop()
                    }
                    if(this.name=='Rusty'&&this.trigger.display.bar){
                        this.layer.stroke(this.color.bar[0],this.color.bar[1],this.color.bar[2],this.fade*this.fades.bar)
                        this.layer.strokeWeight(3)
                        this.layer.line(-6,-87,-12,-93)
                        this.layer.line(-6,-87,-8,-94)
					    this.layer.line(-6,-87,-13,-88)
                    }
                    if(this.name=='Divine Guard'&&this.trigger.display.sphere){
                        this.layer.fill(this.color.sphere[0],this.color.sphere[1],this.color.sphere[2],this.fade*this.fades.sphere)
                        this.layer.noStroke()
                        for(let a=0,la=2;a<la;a++){
                            if(lcos(this.anim.direction-60+a*120)>0){
                                this.layer.ellipse(lsin(this.anim.direction-60+a*120)*6,-64,4,4)
                            }
                        }
                        this.layer.fill(this.color.sphere[0],this.color.sphere[1],this.color.sphere[2],this.fade*this.fades.sphere*0.4)
                        for(let a=0,la=2;a<la;a++){
                            if(lcos(this.anim.direction-60+a*120)>0){
                                this.layer.ellipse(lsin(this.anim.direction-60+a*120)*6,-64,5,5)
                                this.layer.ellipse(lsin(this.anim.direction-60+a*120)*6,-64,6,6)
                            }
                        }
                    }
                    if(this.trigger.display.skin.head){
                        this.layer.fill(this.flashColor(this.color.skin.head)[0],this.flashColor(this.color.skin.head)[1],this.flashColor(this.color.skin.head)[2],this.fade*this.fades.skin.head)
                        this.layer.noStroke()
                        this.layer.ellipse(0,-81,30,30)
                        if(this.name=='Slow King'&&this.trigger.display.tumor){
                            this.layer.ellipse(-8,-93,9,9)
		        			this.layer.ellipse(-3,-94,7,7)
        					this.layer.ellipse(-11,-90,6,6)
                        }else if(this.name=='Looter'&&this.trigger.display.bandana){
                            this.layer.fill(this.color.bandana[0][0],this.color.bandana[0][1],this.color.bandana[0][2],this.fade*this.fades.bandana)
                            this.layer.noStroke()
                            this.layer.arc(0,-81,33,33,-180,0)
                            if(lcos(this.anim.direction+180)<0){
                                this.layer.triangle(15*lsin(this.anim.direction+180),-84,30*lsin(this.anim.direction+180),-84,28*lsin(this.anim.direction+180),-90)
                            }
                            this.layer.fill(this.color.bandana[1][0],this.color.bandana[1][1],this.color.bandana[1][2],this.fade*this.fades.bandana)
                            this.layer.arc(0,-81,24,24,-180,0)
                            if(lcos(this.anim.direction+180)>=0){
                                this.layer.fill(this.color.bandana[0][0],this.color.bandana[0][1],this.color.bandana[0][2],this.fade*this.fades.bandana)
                                this.layer.triangle(15*lsin(this.anim.direction+180),-84,30*lsin(this.anim.direction+180),-84,28*lsin(this.anim.direction+180),-90)
                            }
                        }
                    }
                    if(this.name=='Rusty'&&this.trigger.display.rust){
                        this.layer.fill(this.flashColor(this.color.rust[0])[0],this.flashColor(this.color.rust[0])[1],this.flashColor(this.color.rust[0])[2],this.fade*this.fades.rust)
                        this.layer.noStroke()
                        this.layer.ellipse(-4,-88,10,10)
                        this.layer.ellipse(8,-83,9,9)
                        this.layer.ellipse(1,-72,8,8)
                        this.layer.fill(this.flashColor(this.color.rust[1])[0],this.flashColor(this.color.rust[1])[1],this.flashColor(this.color.rust[1])[2],this.fade*this.fades.rust)
                        this.layer.ellipse(4,-88,10,10)
	    				this.layer.ellipse(-8,-83,9,9)
    					this.layer.ellipse(-1,-72,8,8)
                    }
                    if((this.name=='Ninja'||this.name=='Mugger'||this.name=='Ninja Master'||this.name=='Armored Ninja')&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.flashColor(this.color.eyeHole)[0],this.flashColor(this.color.eyeHole)[1],this.flashColor(this.color.eyeHole)[2],this.fade*this.fades.skin.head)
                        this.layer.noStroke()
                        this.layer.rect(lsin(this.anim.direction)*15,-78,lcos(this.anim.direction)*15,6,2)
                    }
                    if((this.name=='Moss Creature'||this.name=='Dark Priest')&&this.trigger.display.eyeHole&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.flashColor(this.color.eyeHole)[0],this.flashColor(this.color.eyeHole)[1],this.flashColor(this.color.eyeHole)[2],this.fade*this.fades.eyeHole)
                        this.layer.arc(lsin(this.anim.direction)*15,-81,16.5*lcos(this.anim.direction),15,0,180)
                    }
                    if(this.name=='Cartel'||this.name=='Roger Reviv'){
                        for(let g=0;g<2;g++){
                            if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>=0.6){
                                this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                                this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                                this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                                this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                            }
                            if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].bottom+this.anim.direction)>=0.3){
                                this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                                this.layer.strokeWeight(4)
                                this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                            }
                        }
                        if(this.trigger.display.neck&&lcos(this.anim.direction)>0){
                            this.layer.fill(this.color.neck[0],this.color.neck[1],this.color.neck[2],this.fade*this.fades.neck)
                            this.layer.noStroke()
                            this.layer.arc(0,-54,18,24,-180,0)
                        }
                        if(this.trigger.display.skin.head){
                            this.layer.fill(this.flashColor(this.color.skin.head)[0],this.flashColor(this.color.skin.head)[1],this.flashColor(this.color.skin.head)[2],this.fade*this.fades.skin.head)
                            this.layer.noStroke()
                            this.layer.ellipse(0,-81,30,30)
                        }
                        if(this.trigger.display.bandana&&lcos(this.anim.direction)>0){
                            this.layer.fill(this.color.bandana[0],this.color.bandana[1],this.color.bandana[2],this.fade*this.fades.bandana)
                            this.layer.noStroke()
                            this.layer.arc(0,-78,32,26,0,180)
                        }
                        for(let g=0;g<2;g++){
                            if(this.trigger.display.eye[g]){
                                this.minorDisplayGeneral(0,g)
                            }
                        }
                    }else{
                        if(this.trigger.display.mouth&&lcos(this.anim.direction)>0.1){
                            this.minorDisplayGeneral(1,0)
                        }
                        for(let g=0;g<2;g++){
                            if((this.name=='Goon'||this.name=='Slaver'||this.name=='Romeo'||this.name=='Batter'||this.name=='Swordmaster'||this.name=='Champion'||this.name=='Vengeful'||this.name=='Lunaria'||this.name=='Divine Guard'||this.name=='Avant Guard')&&this.trigger.display.extra.sword&&(lcos(this.spin.arms[g].top+this.anim.direction)>=0.6||lcos(this.spin.arms[g].bottom+this.anim.direction)>=0.6)&&g==0){
                                this.minorDisplay(0,g)
                            }
                            if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].top+this.anim.direction)>=0.6){
                                this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                                this.layer.strokeWeight(min(4,lcos(this.spin.arms[g].top+this.anim.direction)*5+2))
                                this.layer.line(this.graphics.arms[g].topStack.x,this.graphics.arms[g].topStack.y,this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y)
                                this.layer.line(this.graphics.arms[g].middleStack.x,this.graphics.arms[g].middleStack.y,this.graphics.arms[g].bottomStack.x,this.graphics.arms[g].bottomStack.y)
                                if((this.name=='Billy Beatup'||this.name=='Lunar Shard'||this.name=='Solar Shard'||this.name=='Coffee Commander'||this.name=='Divine Guard'||this.name=='Avant Guard')&&this.trigger.display.band||this.name=='Gas Man'&&this.trigger.display.can&&g==0||this.name=='Assistant Hiring Officer'&&this.trigger.display.clipboard&&g==0){
                                    this.minorDisplay(1,g)
                                }
                                if(this.name=='Prison Guard'&&this.trigger.display.armor){
                                    this.layer.stroke(this.flashColor(this.color.armor)[0],this.flashColor(this.color.armor)[1],this.flashColor(this.color.armor)[2],this.fade*this.fades.armor)
                                    this.layer.strokeWeight(4)
                                    this.layer.line(
                                        this.graphics.arms[g].top.x*0.7+this.graphics.arms[g].middle.x*0.3,this.graphics.arms[g].top.y*0.7+this.graphics.arms[g].middle.y*0.3,
                                        this.graphics.arms[g].top.x*0.3+this.graphics.arms[g].middle.x*0.7,this.graphics.arms[g].top.y*0.3+this.graphics.arms[g].middle.y*0.7)
                                    this.layer.line(
                                        this.graphics.arms[g].middle.x*0.7+this.graphics.arms[g].bottom.x*0.3,this.graphics.arms[g].middle.y*0.7+this.graphics.arms[g].bottom.y*0.3,
                                        this.graphics.arms[g].middle.x*0.3+this.graphics.arms[g].bottom.x*0.7,this.graphics.arms[g].middle.y*0.3+this.graphics.arms[g].bottom.y*0.7)
                                }
                                if(this.name=='Assistant Fitness Officer'&&this.trigger.display.muscles){
                                    this.layer.strokeWeight(6)
                                    this.layer.line(
                                        this.graphics.arms[g].top.x*0.7+this.graphics.arms[g].middle.x*0.3,this.graphics.arms[g].top.y*0.7+this.graphics.arms[g].middle.y*0.3,
                                        this.graphics.arms[g].top.x*0.3+this.graphics.arms[g].middle.x*0.7,this.graphics.arms[g].top.y*0.3+this.graphics.arms[g].middle.y*0.7)
                                }
                            }
                            if(this.trigger.display.skin.arms&&lcos(this.spin.arms[g].bottom+this.anim.direction)>=0.3&&this.name!='Shadow Trooper'&&this.name!='Soul'){
                                this.layer.stroke(this.flashColor(this.color.skin.arms)[0],this.flashColor(this.color.skin.arms)[1],this.flashColor(this.color.skin.arms)[2],this.fade*this.fades.skin.arms)
                                this.layer.strokeWeight(4)
                                this.layer.line(this.graphics.arms[g].middle.x,this.graphics.arms[g].middle.y,this.graphics.arms[g].bottom.x,this.graphics.arms[g].bottom.y)
                                if((this.name=='Billy Beatup'||this.name=='Lunar Shard'||this.name=='Solar Shard'||this.name=='Coffee Commander'||this.name=='Divine Guard'||this.name=='Avant Guard')&&this.trigger.display.band||this.name=='Gas Man'&&this.trigger.display.can&&g==0||this.name=='Assistant Hiring Officer'&&this.trigger.display.clipboard&&g==0){
                                    this.minorDisplay(1,g)
                                }
                                if(this.name=='Prison Guard'&&this.trigger.display.armor){
                                    this.layer.stroke(this.flashColor(this.color.armor)[0],this.flashColor(this.color.armor)[1],this.flashColor(this.color.armor)[2],this.fade*this.fades.armor)
                                    this.layer.strokeWeight(4)
                                    this.layer.line(
                                        this.graphics.arms[g].middle.x*0.7+this.graphics.arms[g].bottom.x*0.3,this.graphics.arms[g].middle.y*0.7+this.graphics.arms[g].bottom.y*0.3,
                                        this.graphics.arms[g].middle.x*0.3+this.graphics.arms[g].bottom.x*0.7,this.graphics.arms[g].middle.y*0.3+this.graphics.arms[g].bottom.y*0.7)
                                }
                                if(this.name=='Assistant Fitness Officer'&&this.trigger.display.muscles){
                                    this.layer.strokeWeight(6)
                                    this.layer.line(
                                        this.graphics.arms[g].top.x*0.7+this.graphics.arms[g].middle.x*0.3,this.graphics.arms[g].top.y*0.7+this.graphics.arms[g].middle.y*0.3,
                                        this.graphics.arms[g].top.x*0.3+this.graphics.arms[g].middle.x*0.7,this.graphics.arms[g].top.y*0.3+this.graphics.arms[g].middle.y*0.7)
                                }
                            }
                            if((this.name=='Thug'||this.name=='Goon')&&this.trigger.display.eye[g]){
                                this.layer.stroke(this.flashColor(this.color.eyeHole)[0],this.flashColor(this.color.eyeHole)[1],this.flashColor(this.color.eyeHole)[2],this.fade*this.fades.eye[g])
                                this.layer.strokeWeight((6-this.anim.eye[g]*3)*constrain(lcos(this.spin.eye[g]+this.anim.head)*5,0,1))
                                this.layer.line(lsin(this.spin.eye[g]+this.anim.head)*14-(g*2-1)*lcos(this.spin.eye[g]+this.anim.head)*this.anim.eye[g]*2,this.parts.eyeLevel-0.5,lsin(this.spin.eye[g]+this.anim.head)*14+(g*2-1)*lcos(this.spin.eye[g]+this.anim.head)*this.anim.eye[g]*2,this.parts.eyeLevel-this.anim.eye[g]*2-0.5)
                                this.layer.line(lsin(this.spin.eye[g]+this.anim.head)*14-(g*2-1)*lcos(this.spin.eye[g]+this.anim.head)*this.anim.eye[g]*2,this.parts.eyeLevel-0.5,lsin(this.spin.eye[g]+this.anim.head)*14+(g*2-1)*lcos(this.spin.eye[g]+this.anim.head)*this.anim.eye[g]*2,this.parts.eyeLevel+this.anim.eye[g]*2-0.5)
                            }
                            if(this.name!='Councilman'&&this.name!='Nil'&&this.name!='Vengeful'&&this.name!='Avant Guard'&&this.trigger.display.eye[g]){
                                this.minorDisplayGeneral(0,g)
                            }
                        }
                    }
                    if(this.name=='Councilman'&&this.trigger.display.eye[0]){
                        this.layer.noFill()
                        this.layer.stroke(this.color.eye.back[0],this.color.eye.back[1],this.color.eye.back[2],this.fade*this.fades.eye[0])
                        for(let a=0,la=3;a<la;a++){
                            if(lcos(this.anim.direction-24+a*24)>0){
                                this.layer.strokeWeight(3*lcos(this.anim.direction-24+a*24))
                                this.layer.line(lsin(this.anim.direction-24+a*24)*15,-82,lsin(this.anim.direction-24+a*24)*15,-76)
                            }
                        }
                    }else if(this.name=='Nil'&&this.trigger.display.eye[0]&&lcos(this.anim.direction)>0){
                        this.layer.noFill()
                        this.layer.stroke(this.color.eye.back[0],this.color.eye.back[1],this.color.eye.back[2],this.fade*this.fades.eye[0])
                        this.layer.strokeWeight(5*lcos(this.anim.direction))
                        this.layer.line(lsin(this.anim.direction)*15,-82,lsin(this.anim.direction)*15,-76)
                    }else if(this.name=='Vengeful'&&this.trigger.display.eye[0]&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.color.eye.back[0],this.color.eye.back[1],this.color.eye.back[2],this.fade*this.fades.eye[0])
                        this.layer.noStroke()
                        this.layer.arc(lsin(this.anim.direction)*15-lcos(this.anim.direction)*5,-79,lcos(this.anim.direction)*8,6,30,210)
                        this.layer.arc(lsin(this.anim.direction)*15+lcos(this.anim.direction)*5,-79,lcos(this.anim.direction)*8,6,-30,150)
                    }else if(this.name=='Avant Guard'&&this.trigger.display.eye[0]&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.color.eye.back[0],this.color.eye.back[1],this.color.eye.back[2],this.fade*this.fades.eye[0])
                        this.layer.noStroke()
                        this.layer.arc(lsin(this.anim.direction)*15-lcos(this.anim.direction)*5,-79,lcos(this.anim.direction)*10,6,30,210)
                        this.layer.arc(lsin(this.anim.direction)*15+lcos(this.anim.direction)*5,-79,lcos(this.anim.direction)*10,6,-30,150)
                    }
                    if(this.name=='Comrade'&&this.trigger.display.moustache&&lcos(this.anim.direction)>0){
                        this.layer.stroke(this.color.moustache[0],this.color.moustache[1],this.color.moustache[2],this.fade*this.fades.moustache)
                        this.layer.strokeWeight(2)
                        this.layer.line(15*lsin(this.anim.direction),-75.25,15*lsin(this.anim.direction)-4*lcos(this.anim.direction),-74.25)
                        this.layer.line(15*lsin(this.anim.direction),-75.25,15*lsin(this.anim.direction)+4*lcos(this.anim.direction),-74.25)
                    }
                    if(this.name=='Biker'&&this.trigger.display.hat){
                        this.layer.fill(this.flashColor(this.color.hat)[0],this.flashColor(this.color.hat)[1],this.flashColor(this.color.hat)[2],this.fade*this.fades.hat)
                        this.layer.noStroke()
	    				this.layer.arc(0,-81,32,32,-180,0)
    					this.layer.rect(lsin(this.anim.direction+180)*16,-83,20+abs(lcos(this.anim.direction+180))*8,4)
                    }
                    if(this.name=='Biker'&&this.trigger.display.goggles&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.flashColor(this.color.goggles)[0],this.flashColor(this.color.goggles)[1],this.flashColor(this.color.goggles)[2],this.fade*this.fades.goggles)
                        this.layer.stroke(190,20,20,this.fade*this.fades.goggles)
	    				this.layer.strokeWeight(2)
    					this.layer.rect(lsin(this.anim.direction)*15.5,this.parts.eyeLevel,lcos(this.anim.direction)*20,7,2)
                    }
                    if(this.name=='Scrapper'&&this.trigger.display.goggles&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.flashColor(this.color.goggles)[0],this.flashColor(this.color.goggles)[1],this.flashColor(this.color.goggles)[2],this.fade*this.fades.goggles)
                        this.layer.stroke(120,120,120,this.fade*this.fades.goggles)
	    				this.layer.strokeWeight(2)
    					this.layer.rect(lsin(this.anim.direction)*15.5,this.parts.eyeLevel,lcos(this.anim.direction)*20,7,2)
                    }
                    if(this.name=='Jet'&&this.trigger.display.goggles&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.flashColor(this.color.goggles)[0],this.flashColor(this.color.goggles)[1],this.flashColor(this.color.goggles)[2],this.fade*this.fades.goggles)
                        this.layer.stroke(20,20,20,this.fade*this.fades.goggles)
	    				this.layer.strokeWeight(2)
    					this.layer.rect(lsin(this.anim.direction)*15.5,this.parts.eyeLevel,lcos(this.anim.direction)*20,7,2)
                    }
                    if(this.name=='Rewriter'&&this.trigger.display.goggles&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.flashColor(this.color.goggles[0])[0],this.flashColor(this.color.goggles[0])[1],this.flashColor(this.color.goggles[0])[2],this.fade*this.fades.goggles)
                        this.layer.stroke(this.flashColor(this.color.goggles[1])[0],this.flashColor(this.color.goggles[1])[1],this.flashColor(this.color.goggles[1])[2],this.fade*this.fades.goggles)
	    				this.layer.strokeWeight(2)
    					this.layer.rect(lsin(this.anim.direction)*15.5,this.parts.eyeLevel,lcos(this.anim.direction)*18,6,2)
                    }
                    if((this.name=='Trenchcoat'||this.name=='Trenchcoat Gunner')&&this.trigger.display.hat){
                        this.layer.fill(this.flashColor(this.color.hat)[0],this.flashColor(this.color.hat)[1],this.flashColor(this.color.hat)[2],this.fade*this.fades.hat)
                        this.layer.stroke(this.flashColor(this.color.hat)[0],this.flashColor(this.color.hat)[1],this.flashColor(this.color.hat)[2],this.fade*this.fades.hat)
			    		this.layer.strokeWeight(4)
		    			this.layer.line(-16,-90,16,-90)
	    				this.layer.quad(-12,-90,12,-90,8,-96,-8,-96)
                    }
                    if((this.name=='Cartel'||this.name=='Slippery Gangster'||this.name=='Roger Reviv'||this.name=='Bodyguard'||this.name=='Tech Support')&&this.trigger.display.sunglasses&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.color.sunglasses[0],this.color.sunglasses[1],this.color.sunglasses[2],this.fade*this.fades.sunglasses)
                        this.layer.noStroke()
	    				this.layer.ellipse(lsin(this.anim.direction)*16+lcos(this.anim.direction)*-5,-78,8*lcos(this.anim.direction),6)
		    			this.layer.ellipse(lsin(this.anim.direction)*16+lcos(this.anim.direction)*5,-78,8*lcos(this.anim.direction),6)
			    		this.layer.rect(lsin(this.anim.direction)*16,-78,16*lcos(this.anim.direction),2)
                    }
                    if((this.name=='Gangster Machinegunner')&&this.trigger.display.sunglasses&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.color.sunglasses[0],this.color.sunglasses[1],this.color.sunglasses[2],this.fade*this.fades.sunglasses)
                        this.layer.noStroke()
	    				this.layer.ellipse(lsin(this.anim.direction)*15+lcos(this.anim.direction)*-5,-78,7*lcos(this.anim.direction),5)
		    			this.layer.ellipse(lsin(this.anim.direction)*15+lcos(this.anim.direction)*5,-78,7*lcos(this.anim.direction),5)
			    		this.layer.rect(lsin(this.anim.direction)*15,-78,14*lcos(this.anim.direction),1)
                    }
                    if((this.name=='Gangster'||this.name=='Batter'||this.name=='Gangster Gunner'||this.name=='Sharpshot'||this.name=='Gangster Machinegunner')&&this.trigger.display.hat){
                        this.layer.stroke(this.color.hat[0],this.color.hat[1],this.color.hat[2],this.fade)
                        this.layer.fill(this.color.hat[0],this.color.hat[1],this.color.hat[2],this.fade)
                        this.layer.strokeWeight(4)
                        this.layer.line(-16,-90,16,-90)
                        this.layer.quad(-12,-90,12,-90,8,-96,-8,-96)
                    }
                    if((this.name=='Red'||this.name=='Comrade')&&this.trigger.display.hat){
                        this.layer.noStroke()
                        this.layer.fill(this.color.hat[0][0],this.color.hat[0][1],this.color.hat[0][2],this.fade*this.fades.hat)
					    this.layer.rect(0,-96,30,16,4)
                        if(lcos(this.anim.direction)>0){
                            this.layer.fill(this.color.hat[1][0],this.color.hat[1][1],this.color.hat[1][2],this.fade)
                            this.layer.ellipse(lsin(this.anim.direction)*15,-96,lcos(this.anim.direction)*13,13)
                            this.layer.fill(this.color.hat[2][0],this.color.hat[2][1],this.color.hat[2][2],this.fade)
                            this.layer.beginShape()
                            for(g=0;g<10;g++){
                                this.layer.vertex(lsin(this.anim.direction)*15+lcos(this.anim.direction)*lsin(g*36)*(3+(g%2)*3),-96+lcos(g*36)*(3+(g%2)*3))
                            }
                            this.layer.endShape()
                            this.layer.fill(this.color.hat[3][0],this.color.hat[3][1],this.color.hat[3][2],this.fade)
                            this.layer.beginShape()
                            for(g=0;g<10;g++){
                                this.layer.vertex(lsin(this.anim.direction)*15+lcos(this.anim.direction)*lsin(g*36)*(3/2+(g%2)*3/2),-96+lcos(g*36)*(3/2+(g%2)*3/2))
                            }
                            this.layer.endShape()
                        }
                    }
                    if((this.name=='Roger Reviv'||this.name=='Tech Support')&&this.trigger.display.headset){
                        this.layer.noStroke()
                        this.layer.fill(this.color.headset[0],this.color.headset[1],this.color.headset[2],this.fade*this.fades.headset)
					    for(let a=0,la=2;a<la;a++){
                            if(lcos(this.anim.direction-90+a*180)>0){
                                this.layer.ellipse(lsin(this.anim.direction-90+a*180)*15,-81,lcos(this.anim.direction-90+a*180)*6+6,12)
                            }
                        }
                        this.layer.stroke(this.color.headset[0],this.color.headset[1],this.color.headset[2],this.fade*this.fades.headset)
                        this.layer.strokeWeight(2)
                        this.layer.noFill()
                        for(let a=0,la=2;a<la;a++){
                            if(lcos(this.anim.direction-90+a*180)>0){
                                if(lsin(this.anim.direction-90+a*180)>0){
                                    this.layer.arc(0,-85,abs(lsin(this.anim.direction-90+a*180))*30,26,-90,0)
                                }else if(lsin(this.anim.direction-90+a*180)<0){
                                    this.layer.arc(0,-85,abs(lsin(this.anim.direction-90+a*180))*30,26,-180,-90)
                                }else{
                                    this.layer.line(0,-85,0,-98)
                                }
                            }
                        }
                    }
                    if(this.name=='Slow King'&&this.trigger.display.cape&&lcos(this.anim.direction+180)>0.1){
                        this.layer.noStroke()
                        this.layer.fill(this.color.cape[0],this.color.cape[1],this.color.cape[2],this.fade*this.fades.cape)
                        this.layer.arc(5*lsin(this.anim.direction+180),-60,8*lcos(this.anim.direction+180),12,-180,0)
                        for(let a=0,la=5;a<la;a++){
                            this.layer.triangle(5*lsin(this.anim.direction+180)-4*lcos(this.anim.direction+180),-60,5*lsin(this.anim.direction+180)+4*lcos(this.anim.direction+180),-60,8*lsin(this.anim.direction+180)+(-12+a*6)*lcos(this.anim.direction+180),-3)
                        }
                    }
                    if(this.name=='Nil'&&this.trigger.display.cape&&lcos(this.anim.direction+180)>0.1){
                        this.layer.noStroke()
                        this.layer.fill(this.color.cape[0][0],this.color.cape[0][1],this.color.cape[0][2],this.fade*this.fades.cape)
                        for(let a=0,la=2;a<la;a++){
                            this.layer.triangle(5*lsin(this.anim.direction+180)-4*lcos(this.anim.direction+180),-60,5*lsin(this.anim.direction+180)+4*lcos(this.anim.direction+180),-60,8*lsin(this.anim.direction+180)+(-12+a*24)*lcos(this.anim.direction+180),-3)
                        }
                        this.layer.fill(this.color.cape[1][0],this.color.cape[1][1],this.color.cape[1][2],this.fade*this.fades.cape)
                        this.layer.arc(5*lsin(this.anim.direction+180),-60,-8*lcos(this.anim.direction+180),12,-180,0)
                        for(let a=0,la=3;a<la;a++){
                            this.layer.triangle(5*lsin(this.anim.direction+180)-4*lcos(this.anim.direction+180),-60,5*lsin(this.anim.direction+180)+4*lcos(this.anim.direction+180),-60,8*lsin(this.anim.direction+180)+(-6+a*6)*lcos(this.anim.direction+180),-3)
                        }
                    }
                    if(this.name=='Capitalist'&&this.trigger.display.hat){
                        this.layer.fill(this.color.hat[0],this.color.hat[1],this.color.hat[2],this.fade*this.fades.hat)
                        this.layer.stroke(this.color.hat[0],this.color.hat[1],this.color.hat[2],this.fade*this.fades.hat)
                        this.layer.strokeWeight(5)
                        this.layer.line(-15,-90,15,-90)
					    this.layer.rect(0,-100,16,20,1)
					}
                    if(this.name=='Rewriter'&&this.trigger.display.hat){
                        this.layer.fill(this.color.hat[0],this.color.hat[1],this.color.hat[2],this.fade*this.fades.hat)
                        this.layer.stroke(this.color.hat[0],this.color.hat[1],this.color.hat[2],this.fade*this.fades.hat)
                        this.layer.strokeWeight(5)
                        this.layer.line(-15,-90,15,-90)
					    this.layer.rect(0,-97,16,14,1)
					}
                    if((this.name=='Management Soldier'||this.name=='Management Special Forces'||this.name=='Management Sniper'||this.name=='Walker Driver'||this.name=='Gas Man'||this.name=='Riot Police'||this.name=='Coffee Commander')&&this.trigger.display.helmet){
                        this.layer.noStroke()
                        this.layer.fill(this.color.helmet[0],this.color.helmet[1],this.color.helmet[2],this.fade*this.fades.helmet)
                        this.layer.arc(0,-81,36,36,-180,0)
                    }
                    if((this.name=='Management Soldier'||this.name=='Management Special Forces'||this.name=='Management Sniper'||this.name=='Walker Driver'||this.name=='Gas Man'||this.name=='Riot Police'||this.name=='Coffee Commander')&&this.trigger.display.visor&&lcos(this.anim.direction)>0){
                        this.layer.noStroke()
                        this.layer.fill(this.color.visor[0],this.color.visor[1],this.color.visor[2],this.fade*this.fades.visor/2)
                        this.layer.rect(lsin(this.anim.direction)*18,-78,20*lcos(this.anim.direction),6)
                    }
                    if(this.name=='Armored Ninja'&&this.trigger.display.helmet){
                        this.layer.noStroke()
                        this.layer.fill(this.color.helmet[0],this.color.helmet[1],this.color.helmet[2],this.fade*this.fades.helmet)
                        this.layer.arc(0,-81,36,36,-180,0)
                        this.layer.push()
                        this.layer.translate(0,-81)
                        this.layer.rotate(-60)
                        for(let a=0,la=5;a<la;a++){
                            this.layer.triangle(-3,-17,3,-17,0,-22)
                            this.layer.rotate(30)
                        }
                        this.layer.pop()
                    }
                    if(this.name=='Swordmaster'&&this.trigger.display.helmet){
                        this.layer.noStroke()
                        this.layer.fill(this.color.helmet[0],this.color.helmet[1],this.color.helmet[2],this.fade*this.fades.helmet)
                        this.layer.arc(0,-81,36,36,-180,0)
                        if(lcos(this.anim.direction)>0){
                            this.layer.rect(lsin(this.anim.direction)*18,-80,18*lcos(this.anim.direction),3)
                        }
                    }
                    if(this.name=='Management Sniper'&&this.trigger.display.monocle&&lcos(this.anim.direction-18)>0){
                        this.layer.noStroke()
                        this.layer.fill(this.color.monocle[0],this.color.monocle[1],this.color.monocle[2],this.fade*this.fades.monocle/2)
                        this.layer.ellipse(lsin(this.anim.direction-18)*18,-78,8*lcos(this.anim.direction-18),8)
                    }
                    if((this.name=='Management Officer'||this.name=='Management Caller')&&this.trigger.display.glasses&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.color.glasses[1][0],this.color.glasses[1][1],this.color.glasses[1][2],this.fade*this.fades.glasses/5)
                        this.layer.stroke(this.color.glasses[0][0],this.color.glasses[0][1],this.color.glasses[0][2],this.fade*this.fades.glasses)
                        this.layer.strokeWeight(1)
	    				this.layer.ellipse(lsin(this.anim.direction)*15+lcos(this.anim.direction)*-5,-77,6*lcos(this.anim.direction),3)
		    			this.layer.ellipse(lsin(this.anim.direction)*15+lcos(this.anim.direction)*5,-77,6*lcos(this.anim.direction),3)
			    		this.layer.line(lsin(this.anim.direction)*15+lcos(this.anim.direction)*2,-77,lsin(this.anim.direction)*15-lcos(this.anim.direction)*2,-77)
                    }
                    if((this.name=='Deployer'||this.name=='Chief Deployer')&&this.trigger.display.glasses&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.color.glasses[1][0],this.color.glasses[1][1],this.color.glasses[1][2],this.fade*this.fades.glasses/5)
                        this.layer.stroke(this.color.glasses[0][0],this.color.glasses[0][1],this.color.glasses[0][2],this.fade*this.fades.glasses)
                        this.layer.strokeWeight(1)
	    				this.layer.ellipse(lsin(this.anim.direction)*15+lcos(this.anim.direction)*-4.5,-78,6*lcos(this.anim.direction),6)
		    			this.layer.ellipse(lsin(this.anim.direction)*15+lcos(this.anim.direction)*4.5,-78,6*lcos(this.anim.direction),6)
			    		this.layer.line(lsin(this.anim.direction)*15+lcos(this.anim.direction)*1.5,-78,lsin(this.anim.direction)*15-lcos(this.anim.direction)*1.5,-78)
                    }
                    if(this.name=='Intern'&&this.trigger.display.glasses&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.color.glasses[1][0],this.color.glasses[1][1],this.color.glasses[1][2],this.fade*this.fades.glasses/5)
                        this.layer.stroke(this.color.glasses[0][0],this.color.glasses[0][1],this.color.glasses[0][2],this.fade*this.fades.glasses)
                        this.layer.strokeWeight(1)
	    				this.layer.ellipse(lsin(this.anim.direction)*15+lcos(this.anim.direction)*-4.5,-78,5*lcos(this.anim.direction),5)
		    			this.layer.ellipse(lsin(this.anim.direction)*15+lcos(this.anim.direction)*4.5,-78,5*lcos(this.anim.direction),5)
			    		this.layer.line(lsin(this.anim.direction)*15+lcos(this.anim.direction)*2,-78,lsin(this.anim.direction)*15-lcos(this.anim.direction)*2,-78)
                    }
                    if(this.name=='PhD'&&this.trigger.display.glasses&&lcos(this.anim.direction)>0){
                        this.layer.fill(this.color.glasses[1][0],this.color.glasses[1][1],this.color.glasses[1][2],this.fade*this.fades.glasses/5)
                        this.layer.stroke(this.color.glasses[0][0],this.color.glasses[0][1],this.color.glasses[0][2],this.fade*this.fades.glasses)
                        this.layer.strokeWeight(1)
	    				this.layer.ellipse(lsin(this.anim.direction)*15+lcos(this.anim.direction)*-4,-77,5*lcos(this.anim.direction),5)
		    			this.layer.ellipse(lsin(this.anim.direction)*15+lcos(this.anim.direction)*4,-77,5*lcos(this.anim.direction),5)
			    		this.layer.line(lsin(this.anim.direction)*15+lcos(this.anim.direction)*1.5,-77,lsin(this.anim.direction)*15-lcos(this.anim.direction)*1.5,-77)
                    }
                    if(this.name=='Management Custodian'&&this.trigger.display.hat){
                        this.layer.fill(this.color.hat[0],this.color.hat[1],this.color.hat[2],this.fade*this.fades.hat)
                        this.layer.noStroke()
                        this.layer.rect(0,-87,30,8)
					    this.layer.rect(21*lsin(this.anim.direction),-85,18,4)
					}
                    if((this.name=='Lightspeed'||this.name=='Councilman'||this.name=='Avant Guard')&&this.trigger.display.wing){
                        this.layer.noFill()
                        this.layer.stroke(this.color.wing[0],this.color.wing[1],this.color.wing[2],this.fade*this.fades.wing)
                        this.layer.strokeWeight(3)
                        for(let a=0,la=2;a<la;a++){
                            if(lcos(a*180+this.anim.direction)>0.02){
                                if(lsin(a*180+this.anim.direction)<0){
                                    this.layer.arc(0,-81,66*lcos(a*180+this.anim.direction),72,-5,85)
                                    this.layer.arc(0,-87,48*lcos(a*180+this.anim.direction),60,-5,85)
                                }else{
                                    this.layer.arc(0,-81,66*lcos(a*180+this.anim.direction),72,95,185)
                                    this.layer.arc(0,-87,48*lcos(a*180+this.anim.direction),60,95,185)
                                }
                            }else if(lcos(a*180+this.anim.direction)>0){
                                this.layer.line(0,-45,0,-87)
                            }
                        }
                    }
                    if(this.name=='Champion'&&this.trigger.display.hat){
                        this.layer.fill(this.color.hat[0],this.color.hat[1],this.color.hat[2],this.fade*this.fades.hat)
                        this.layer.stroke(this.color.hat[0],this.color.hat[1],this.color.hat[2],this.fade*this.fades.hat)
                        this.layer.strokeWeight(5)
                        this.layer.line(-15,-90,15,-90)
					    this.layer.rect(0,-95,20,10,1)
					}
                    if(this.name=='Wiz'&&this.trigger.display.hat){
                        this.layer.fill(this.color.hat[0],this.color.hat[1],this.color.hat[2],this.fade*this.fades.hat)
                        this.layer.stroke(this.color.hat[0],this.color.hat[1],this.color.hat[2],this.fade*this.fades.hat)
                        this.layer.strokeWeight(5)
                        this.layer.line(-18,-90,18,-90)
                        this.layer.triangle(-12,-90,12,-90,0,-114)
					}
                    if(this.name=='Slow King'&&this.trigger.display.shield){
                        this.layer.fill(this.color.shield[0],this.color.shield[1],this.color.shield[2],this.fade*this.fades.shield*0.2)
						this.layer.stroke(this.color.shield[0],this.color.shield[1],this.color.shield[2],this.fade*this.fades.shield)
						this.layer.strokeWeight(3)
                        regPoly(this.layer,0,-48,7,56,56,game.timer*2)
						regPoly(this.layer,0,-48,7,72,72,-game.timer*2)
                    }
                    if(this.name=='Jet'&&this.trigger.display.pack&&lcos(this.anim.direction+180)>=0){
                        this.layer.fill(this.color.pack[0],this.color.pack[1],this.color.pack[2],this.fade*this.fades.pack)
                        this.layer.noStroke()
                        this.layer.rect(lsin(this.anim.direction+180)*13,-48,12,36,2)
                        this.layer.fill(this.color.pack[0]-100,this.color.pack[1]-100,this.color.pack[2]-100,this.fade*this.fades.pack)
                        this.layer.rect(lsin(this.anim.direction+180)*13,-28,10,4)
                        this.layer.fill(255,150,0,this.fade*this.fades.pack/2)
                        this.layer.triangle(lsin(this.anim.direction+180)*13-4,-26,lsin(this.anim.direction+180)*13+4,-26,lsin(this.anim.direction+180)*13,-18+lsin(this.time*5)*2)
                        this.layer.fill(255,75,0,this.fade*this.fades.pack/2)
                        this.layer.triangle(lsin(this.anim.direction+180)*13-2,-26,lsin(this.anim.direction+180)*13+2,-26,lsin(this.anim.direction+180)*13,-22+lsin(this.time*5))
                    }
                    if(this.name=='Corrupt Detective'&&this.trigger.display.hat){
                        this.layer.fill(this.flashColor(this.color.hat[0])[0],this.flashColor(this.color.hat[0])[1],this.flashColor(this.color.hat[0])[2],this.fade*this.fades.hat)
                        this.layer.stroke(this.flashColor(this.color.hat[0])[0],this.flashColor(this.color.hat[0])[1],this.flashColor(this.color.hat[0])[2],this.fade*this.fades.hat)
			    		this.layer.strokeWeight(4)
		    			this.layer.line(-16,-90,16,-90)
	    				this.layer.quad(-12,-90,12,-90,8,-98,-8,-98)
                        this.layer.fill(this.flashColor(this.color.hat[0])[1],this.flashColor(this.color.hat[1])[1],this.flashColor(this.color.hat[1])[2],this.fade*this.fades.hat)
                        this.layer.noStroke()
	    				this.layer.quad(-13,-92,13,-92,11,-96,-11,-96)
                    }
                    if(this.name=='Riot Police'&&this.trigger.display.shield&&lcos(this.anim.direction)>=0){
                        this.layer.fill(this.flashColor(this.color.shield[0])[0],this.flashColor(this.color.shield[0])[1],this.flashColor(this.color.shield[0])[2],this.fade*this.fades.shield)
                        this.layer.noStroke()
                        this.layer.rect((this.graphics.arms[0].bottom.x+this.graphics.arms[1].bottom.x)/2,(this.graphics.arms[0].bottom.y+this.graphics.arms[1].bottom.y)/2,36*lcos(this.anim.direction),48,3)
                        this.layer.fill(this.flashColor(this.color.shield[1])[0],this.flashColor(this.color.shield[1])[1],this.flashColor(this.color.shield[1])[2],this.fade*this.fades.shield)
                        this.layer.rect((this.graphics.arms[0].bottom.x+this.graphics.arms[1].bottom.x)/2,(this.graphics.arms[0].bottom.y+this.graphics.arms[1].bottom.y)/2-15,24*lcos(this.anim.direction),6,3)
                    }
                    if(this.name=='Reichswehr'&&this.trigger.display.helmet){
                        this.layer.noStroke()
                        this.layer.fill(this.color.helmet[0][0],this.color.helmet[0][1],this.color.helmet[0][2],this.fade*this.fades.helmet)
                        this.layer.arc(0,-81,36,36,-180,0)
                        this.layer.fill(this.color.helmet[1][0],this.color.helmet[1][1],this.color.helmet[1][2],this.fade*this.fades.helmet)
                        this.layer.triangle(-3,-98,3,-98,0,-104)
                    }
                    if(this.name=='Beekeeper'&&this.trigger.display.helmet){
                        this.layer.noStroke()
                        this.layer.fill(this.color.helmet[0][0],this.color.helmet[0][1],this.color.helmet[0][2],this.fade*this.fades.helmet)
                        this.layer.quad(-18,-87,18,-87,9,-96,-9,-96)
                        this.layer.quad(-18,-75,18,-75,9,-66,-9,-66)
                        this.layer.fill(this.color.helmet[1][0],this.color.helmet[1][1],this.color.helmet[1][2],this.fade*this.fades.helmet)
                        for(let a=0,la=15;a<la;a++){
                            if(lcos(this.anim.direction+a*45)>0){
                                this.layer.rect(16*lsin(this.anim.direction+a*24),-81,2*lcos(this.anim.direction+a*24),12)
                            }
                        }
                    }
                    if(this.name=='Junkie'&&this.trigger.display.hat){
                        this.layer.fill(this.flashColor(this.color.hat[0])[0],this.flashColor(this.color.hat[0])[1],this.flashColor(this.color.hat[0])[2],this.fade*this.fades.hat)
                        this.layer.noStroke()
                        this.layer.rect(0,-91,30,12,3)
                        this.layer.rect(lsin(this.anim.direction+180)*15,-86,24,4)
                    }
                    if((this.name=='Councilman'||this.name=='Lunaria')&&this.trigger.display.halo){
                        this.layer.noFill()
                        this.layer.stroke(this.color.halo[0],this.color.halo[1],this.color.halo[2],this.fade*this.fades.halo)
                        this.layer.strokeWeight(2)
                        this.layer.ellipse(0,-96,22,8)
                    }
                    if(this.name=='Tech Support'&&this.trigger.display.hat){
                        this.layer.fill(this.flashColor(this.color.hat)[0],this.flashColor(this.color.hat)[1],this.flashColor(this.color.hat)[2],this.fade*this.fades.hat)
                        this.layer.noStroke()
	    				this.layer.arc(0,-84,32,32,-180,0)
    					this.layer.rect(lsin(this.anim.direction)*-16,-86,20+abs(lcos(this.anim.direction))*8,4)
                        this.layer.stroke(this.flashColor(this.color.hat)[0]-50,this.flashColor(this.color.hat)[1]-50,this.flashColor(this.color.hat)[2]-50,this.fade*this.fades.hat)
                        this.layer.strokeWeight(1)
                        this.layer.noFill()
                        for(let a=0,la=10;a<la;a++){
                            if(lcos(this.anim.direction+a*36)>0){
                                if(lsin(this.anim.direction+a*36)>0){
                                    this.layer.arc(0,-84.5,32*lsin(this.anim.direction+a*36),31,-90,0)
                                }else if(lsin(this.anim.direction+a*36)<0){
                                    this.layer.arc(0,-84.5,-32*lsin(this.anim.direction+a*36),31,-180,-90)
                                }
                            }
                        }
                    }
                    if(this.name=='Vengeful'&&this.trigger.display.hat){
                        this.layer.stroke(this.color.hat[0][0],this.color.hat[0][1],this.color.hat[0][2],this.fade*this.fades.hat)
                        this.layer.fill(this.color.hat[0][0],this.color.hat[0][1],this.color.hat[0][2],this.fade*this.fades.hat)
                        this.layer.strokeWeight(4)
                        this.layer.line(-17,-87,17,-87)
                        this.layer.quad(-13,-87,13,-87,8,-96,-8,-96)
                        this.layer.stroke(this.color.hat[1][0],this.color.hat[1][1],this.color.hat[1][2],this.fade*this.fades.hat)
                        this.layer.line(-12,-91,12,-91)
                    }
                    if(this.name=='Divine Guard'&&this.trigger.display.hat){
                        this.layer.fill(this.color.hat[0],this.color.hat[1],this.color.hat[2],this.fade*this.fades.hat)
                        this.layer.noStroke()
                        this.layer.arc(0,-81,34,34,-180,0)
                        for(let a=0,la=2;a<la;a++){
                            if(lcos(this.anim.direction-90+a*180)>0){
                                this.layer.triangle(lsin(this.anim.direction-90+a*180)*15-lcos(this.anim.direction-90+a*180)*8,-81,lsin(this.anim.direction-90+a*180)*15+lcos(this.anim.direction-90+a*180)*8,-81,lsin(this.anim.direction-90+a*180)*15,-75)
                            }
                        }
                    }
                    if(this.name=='Lunaria'&&this.trigger.display.stars){
                        this.layer.noStroke()
                        this.layer.fill(this.color.stars[0],this.color.stars[1],this.color.stars[2],this.fade*this.fades.stars)
                        for(let a=0,la=9;a<la;a++){
                            if(lcos(a*40+this.anim.direction+this.time*3)>0){
                                regStar(this.layer,lsin(a*40+this.anim.direction+this.time*3)*20,-54+lcos(a*40+this.anim.direction+this.time*3)*6,5,lcos(a*40+this.anim.direction+this.time*3)*3,3,lcos(a*40+this.anim.direction+this.time*3)*1.5,1.5,this.time*3)
                            }
                            if(lcos(a*40+this.anim.direction+this.time*3+20)>0){
                                regStar(this.layer,lsin(a*40+this.anim.direction+this.time*3+20)*18,-18+lcos(a*40+this.anim.direction+this.time*3+20)*6,5,lcos(a*40+this.anim.direction+this.time*3+20)*3,3,lcos(a*40+this.anim.direction+this.time*3+20)*1.5,1.5,this.time*3)
                                regStar(this.layer,lsin(a*40+this.anim.direction+this.time*3+20)*18,-90+lcos(a*40+this.anim.direction+this.time*3+20)*6,5,lcos(a*40+this.anim.direction+this.time*3+20)*3,3,lcos(a*40+this.anim.direction+this.time*3+20)*1.5,1.5,this.time*3)
                            }
                        }
                    }
                break
            
            }
            this.layer.pop()
        }
    }
    displayInfoInternal(){
        this.layer.noStroke()
        this.layer.fill(150,this.fade*this.infoAnim.life)
        this.layer.rect(0,0,50,6,3)
        if(this.collect.life>=this.life){
            this.layer.fill(240,0,0,this.fade*this.infoAnim.life)
            this.layer.rect((max(0,this.collect.life)/this.base.life)*25-25,0,(max(0,this.collect.life)/this.base.life)*50,2+min((max(0,this.collect.life)/this.base.life)*80,4),3)
            this.layer.fill(min(255,510-max(0,this.life)/this.base.life*510)-max(0,5-max(0,this.life)/this.base.life*30)*25,max(0,this.life)/this.base.life*510,0,this.fade*this.infoAnim.life)
            this.layer.rect((max(0,this.life)/this.base.life)*25-25,0,(max(0,this.life)/this.base.life)*50,2+min((max(0,this.life)/this.base.life)*80,4),3)
        }else if(this.collect.life<this.life){
            this.layer.fill(240,0,0,this.fade*this.infoAnim.life)
            this.layer.rect((max(0,this.life)/this.base.life)*25-25,0,(max(0,this.life)/this.base.life)*50,2+min((max(0,this.life)/this.base.life)*80,4),3)
            this.layer.fill(min(255,510-max(0,this.collect.life)/this.base.life*510)-max(0,5-max(0,this.collect.life)/this.base.life*30)*25,max(0,this.collect.life)/this.base.life*510,0,this.fade*this.infoAnim.life)
            this.layer.rect((max(0,this.collect.life)/this.base.life)*25-25,0,(max(0,this.collect.life)/this.base.life)*50,2+min((max(0,this.collect.life)/this.base.life)*80,4),3)
        }
        this.layer.noFill()
        this.layer.stroke(0,this.fade*this.infoAnim.life)
        this.layer.strokeWeight(0.75)
        this.layer.rect(0,0,51,6.75,3.75)
        this.layer.noStroke()
        if(this.infoAnim.block>0){
            this.layer.fill(0,this.fade*this.infoAnim.block)
            this.layer.ellipse(-28,0,11.5,11.5)
            this.layer.fill(150,175,200,this.fade*this.infoAnim.block)
            this.layer.ellipse(-28,0,10,10)
        }
        if(this.team==0){
            this.layer.fill(0,this.fade*this.infoAnim.life)
            this.layer.ellipse(28,0,11.5,11.5)
            this.layer.fill(200,100,100,this.fade*this.infoAnim.life)
            this.layer.ellipse(28,0,10,10)
        }
        for(let a=0,la=this.status.display.length;a<la;a++){
            displayStatusSymbol(this.layer,this.status.position[this.status.display[a]],12,this.status.display[a],0,this.status.size[this.status.display[a]],this.fade*this.infoAnim.life)
        }
        if(this.team==0){
            for(let a=0,la=this.attack.length;a<la;a++){
                if(this.infoAnim.intent[a]>0){
                    displayIntentSymbol(this.layer,0,-12,this.attack[a].type,this.attack[a].effect,0,1,this.fade*this.infoAnim.intent[a],!this.battle.relicManager.hasRelic(136,-1))
                }
            }
        }
        this.layer.fill(0,this.fade*this.infoAnim.life)
        this.layer.textSize(6)
        this.layer.text(max(0,ceil(this.life*10)/10)+"/"+max(0,ceil(this.base.life*10)/10),0,0.5)
        if(this.infoAnim.block>0){
            this.layer.fill(0,this.fade*this.infoAnim.block)
            this.layer.text(ceil(this.block*10)/10,-28,0.5)
        }
        this.layer.fill(0,this.fade*this.infoAnim.life)
        if(this.team==0){
            this.layer.text(this.order,28,0.5)
        }
        for(let a=0,la=this.status.display.length;a<la;a++){
            if(this.status.size[this.status.display[a]]>0){
                this.layer.textSize(8*this.status.size[this.status.display[a]])
                this.layer.text(this.status.main[this.status.display[a]],this.status.position[this.status.display[a]],12)
            }
        }
    }
    displayInfo(scene){
        switch(scene){
            case 'battle':
                if(this.fade>0&&this.infoAnim.size>0){
                    this.layer.push()
                    this.layer.translate(this.position.x+this.offset.life.x,this.position.y+this.offset.life.y)
                    this.layer.scale(this.infoAnim.size)
                    this.displayInfoInternal()
                    this.layer.pop()
                }
            break
            case 'overlay':
                if(this.fade>0&&this.infoAnim.description>0){
                    if(this.team>0){
                        this.layer.fill(mergeColor(types.color.card[this.type].fill,[150,150,150],0.5)[0],mergeColor(types.color.card[this.type].fill,[150,150,150],0.5)[1],mergeColor(types.color.card[this.type].fill,[150,150,150],0.5)[2],this.fade*this.infoAnim.description)
                    }else{
                        this.layer.fill(150,this.fade*this.infoAnim.description)
                    }
                    this.layer.noStroke()
                    this.layer.rect(100,300,160,240,10)
                    this.layer.fill(0,this.fade*this.infoAnim.description)
                    this.layer.textSize(this.name.length>=20?12:16)
                    this.layer.text(this.name,100,200)
                    this.layer.textSize(8)
                    this.layer.text(this.description,100,240)
                    this.layer.textSize(6)
                    this.layer.textAlign(LEFT,CENTER)
                    if(this.team==0){
                        for(let a=0,la=min(6,this.status.display.length);a<la;a++){
                            this.layer.text(this.status.name[this.status.display[a]],50,305+a*20+this.spec.length*15)
                        }
                    }else{
                        for(let a=0,la=min(6,this.status.display.length);a<la;a++){
                            this.layer.text(this.status.name[this.status.display[a]],50,305+a*20)
                        }
                    }
                    if(this.team==0){
                        for(let a=0,la=this.attack.length;a<la;a++){
                            this.layer.fill(0,this.fade*this.infoAnim.description*this.infoAnim.intent[a])
                            this.layer.text(intentDescription(this.attack[a],this,!this.battle.relicManager.hasRelic(136,-1)),60,280)
                        }
                        this.layer.fill(0,this.fade*this.infoAnim.description)
                        for(let a=0,la=this.spec.length;a<la;a++){
                            switch(this.spec[a]){
                                case 0: this.layer.text('Will Turn to Face Player',40,305+a*15); break
                                case 1: this.layer.text('Moves When You Move',40,305+a*15); break
                                case 2: this.layer.text('Boss',40,305+a*15); break
                                case 3: this.layer.text('Immune to Spikes and Mines',40,305+a*15); break
                                case 4: this.layer.text('Immune to Traps',40,305+a*15); break
                                case 5: this.layer.text('Slimes Tiles Moved On',40,305+a*15); break
                                case 6: this.layer.text('Spawns Slimes Every 20 HP Lost',40,305+a*15); break
                                case 7: this.layer.text('Attacks When You Move',40,305+a*15); break
                                case 8: this.layer.text('Attacks When You Play a Card',40,305+a*15); break
                                case 9: this.layer.text('Untargettable From Front',40,305+a*15); break
                                case 10: this.layer.text('Attacks When Injured',40,305+a*15); break
                                case 11: this.layer.text('Immune to Poison Tiles',40,305+a*15); break
                                case 12: this.layer.text('Co-Boss',40,305+a*15); break

                            }
                        }
                    }
                    this.layer.textAlign(CENTER,CENTER)
                    if(this.team==0){
                        for(let a=0,la=min(6,this.status.display.length);a<la;a++){
                            displayStatusSymbol(this.layer,40,305+a*20+this.spec.length*15,this.status.display[a],0,this.status.size[this.status.display[a]]*1.5,this.fade*this.infoAnim.description*this.infoAnim.life)
                        }
                    }else{
                        for(let a=0,la=min(6,this.status.display.length);a<la;a++){
                            displayStatusSymbol(this.layer,40,305+a*20,this.status.display[a],0,this.status.size[this.status.display[a]]*1.5,this.fade*this.infoAnim.description*this.infoAnim.life)
                        }
                    }
                    this.layer.fill(0,this.fade*this.infoAnim.description)
                    this.layer.textSize(12)
                    if(this.team==0){
                        for(let a=0,la=min(6,this.status.display.length);a<la;a++){
                            this.layer.text(this.status.main[this.status.display[a]],40,305+a*20+this.spec.length*15)
                        }
                    }else{
                        for(let a=0,la=min(6,this.status.display.length);a<la;a++){
                            this.layer.text(this.status.main[this.status.display[a]],40,305+a*20)
                        }
                    }
                    if(this.team==0){
                        for(let a=0,la=this.attack.length;a<la;a++){
                            if(this.infoAnim.intent[a]>0){
                                displayIntentSymbol(this.layer,40,280,this.attack[a].type,this.attack[a].effect,0,1.5,this.fade*this.infoAnim.description*this.infoAnim.intent[a],!this.battle.relicManager.hasRelic(136,-1))
                            }
                        }
                    }
                }
            break
            case 'rest':
                this.layer.push()
                this.layer.translate(350-this.id*100,495)
                this.layer.scale(1.5)
                this.displayInfoInternal()
                this.layer.pop()
            break
            case 'event':
                this.layer.push()
                this.layer.translate(800-this.id*700,510)
                this.layer.scale(1.5)
                this.displayInfoInternal()
                this.layer.pop()
            break
        }
    }
    updatePassive(){
        this.collect.life=this.collect.life*0.9+this.life*0.1
    }
    update(){
        this.updatePassive()
        this.tilePosition.x=round(this.tilePosition.x)
        this.tilePosition.y=round(this.tilePosition.y)
        if(this.team>0){
            this.fade=1
            if(this.life<=0){
                this.battle.itemManager.activateDeath(this.id)
                if(this.life<=0){
                    if(!this.dead){
                        if(this.battle.relicManager.hasRelic(81,this.id)){
                            this.battle.relicManager.active[81]--
                            if(this.battle.relicManager.active[81]<=0){
                                this.battle.relicManager.deactivate(81)
                            }
                            this.heal(round(this.base.life*5)/10)
                        }else{
                            this.dead=true
                            this.startAnimation(7)
                            this.deTarget()
                            let allDead=true
                            for(let a=0,la=this.battle.combatantManager.combatants.length;a<la;a++){
                                if(this.battle.combatantManager.combatants[a].team>0&&this.battle.combatantManager.combatants[a].life>0){
                                    allDead=false
                                }
                            }
                            if(allDead){
                                this.battle.result.defeat=true
                            }
                        }
                    }else{
                        this.runAnimation(1/15,7)
                    }
                }
            }
        }else{
            this.fade=smoothAnim(this.fade,this.life>0&&this.status.main[51]<=0,0,1,15)
            this.infoAnim.life=smoothAnim(this.infoAnim.life,this.life>0,0,1,5)
            if(this.life<=0&&!this.dead){
                this.dead=true
                this.battle.tileManager.activate()
                this.battle.counter.killed++
                this.battle.updateTargetting()
                if(this.battle.turn.main<this.battle.players){
                    this.battle.cardManagers[this.battle.turn.main].hand.deathEffect()
                }
                if(!this.minion){
                    this.battle.relicManager.activate(3)
                }
                if(this.battle.turn.main<this.battle.players){
                    this.battle.stats.killed[this.battle.turn.main]++
                }
                if(this.spec.includes(2)){
                    this.battle.combatantManager.allEffect(2,[0])
                    this.battle.clearReinforce()
                }
                if(this.status.main[42]>0){
                    this.battle.overlayManager.overlays[0][floor(random(0,this.battle.players))].active=true
                    this.battle.overlayManager.overlays[0][floor(random(0,this.battle.players))].activate([1,[
                            {type:0,value:[this.status.main[42]]}]])
                }
                if(this.name=='Prestige'&&this.base.life>10){
                    this.doubleHalf()
                    this.dead=false
                    this.battle.tileManager.activate()
                    this.battle.counter.killed--
                }else{
                    let type=0
                    switch(this.name){
                        case 'Slimoid':
                            type=findName('Modicum',types.combatant)
                            for(let a=0,la=7;a<la;a++){
                                this.battle.combatantManager.summonCombatant(this.tilePosition,type,this.goal.anim.direction)
                            }
                        break
                        case 'Big Slime':
                            this.battle.combatantManager.summonCombatant(this.tilePosition,findName('Slime',types.combatant),this.goal.anim.direction)
                            this.battle.combatantManager.summonCombatant(this.tilePosition,findName('Slime',types.combatant),this.goal.anim.direction)
                        break
                        case 'Big Spike Slime':
                            this.battle.combatantManager.summonCombatant(this.tilePosition,findName('Spike Slime',types.combatant),this.goal.anim.direction)
                            this.battle.combatantManager.summonCombatant(this.tilePosition,findName('Spike Slime',types.combatant),this.goal.anim.direction)
                        break
                        case 'Big Slimoid':
                            this.battle.combatantManager.summonCombatant(this.tilePosition,findName('Slimoid',types.combatant),this.goal.anim.direction)
                            this.battle.combatantManager.summonCombatant(this.tilePosition,findName('Slimoid',types.combatant),this.goal.anim.direction)
                        break
                        case 'Slime Boss':
                            this.battle.combatantManager.summonCombatant(this.tilePosition,findName('Big Slime',types.combatant),this.goal.anim.direction)
                            this.battle.combatantManager.summonCombatant(this.tilePosition,findName('Big Slime',types.combatant),this.goal.anim.direction)
                            this.battle.combatantManager.summonCombatant(this.tilePosition,findName('Big Slime',types.combatant),this.goal.anim.direction)
                        break
                        case 'Solar Shard':
                            this.battle.combatantManager.summonCombatant(this.tilePosition,findName('Lunar Shard',types.combatant),this.goal.anim.direction)
                        break
                        case 'Lunar Shard':
                            this.battle.combatantManager.summonCombatant(this.tilePosition,findName('Lunar Dust',types.combatant),this.goal.anim.direction)
                        break
                        case 'Personnel Carrier':
                            type=findName('Management Robot',types.combatant)
                            for(let a=0,la=5;a<la;a++){
                                this.battle.combatantManager.summonCombatant(this.tilePosition,type,this.goal.anim.direction)
                            }
                        break
                    }
                    this.battle.combatantManager.reorder()
                }
            }
        }
        this.time++
        this.infoAnim.block=smoothAnim(this.infoAnim.block,this.block>0,0,1,5)
        this.infoAnim.size=smoothAnim(this.infoAnim.size,this.infoAnim.upSize,1,1.5,5)
        this.infoAnim.description=smoothAnim(this.infoAnim.description,this.infoAnim.upSize,0,1,5)
        if(abs(this.anim.direction-this.goal.anim.direction)<=18||abs(this.anim.direction-this.goal.anim.direction-360)<=18||abs(this.anim.direction-this.goal.anim.direction+360)<=18||abs(this.anim.direction-this.goal.anim.direction-720)<=18||abs(this.anim.direction-this.goal.anim.direction+720)<=18){
            this.anim.direction=this.goal.anim.direction
        }else if(
            this.anim.direction>this.goal.anim.direction&&this.anim.direction<this.goal.anim.direction+180||
            this.anim.direction>this.goal.anim.direction-360&&this.anim.direction<this.goal.anim.direction-180||
            this.anim.direction>this.goal.anim.direction+360&&this.anim.direction<this.goal.anim.direction+540||
            this.anim.direction>this.goal.anim.direction-720&&this.anim.direction<this.goal.anim.direction-540||
            this.anim.direction>this.goal.anim.direction+720&&this.anim.direction<this.goal.anim.direction+900){
            this.anim.direction-=15
        }else if(
            this.anim.direction<this.goal.anim.direction&&this.anim.direction>this.goal.anim.direction-180||
            this.anim.direction<this.goal.anim.direction+360&&this.anim.direction>this.goal.anim.direction+180||
            this.anim.direction<this.goal.anim.direction-360&&this.anim.direction>this.goal.anim.direction-540||
            this.anim.direction<this.goal.anim.direction+720&&this.anim.direction>this.goal.anim.direction+540||
            this.anim.direction<this.goal.anim.direction-720&&this.anim.direction>this.goal.anim.direction-900){
            this.anim.direction+=15
        }else{
            this.anim.direction+=15*(floor(random(0,2)*2-1))
        }
        if(this.anim.direction>180){
            this.anim.direction-=360
        }else if(this.anim.direction<-180){
            this.anim.direction+=360
        }
        if(this.goal.anim.direction>180){
            this.goal.anim.direction-=360
        }else if(this.goal.anim.direction<-180){
            this.goal.anim.direction+=360
        }
        for(let a=0,la=this.status.main.length;a<la;a++){
            this.status.main[a]=round(this.status.main[a])
            if(this.status.main[a]!=0&&!this.status.active[a]){
                this.status.active[a]=true
                this.status.size[a]=0
                this.status.position[a]=this.status.display.length*6
                this.status.display.push(a)
            }
            if(this.status.active[a]){
                this.status.size[a]=smoothAnim(this.status.size[a],this.status.main[a]!=0,0,1,5)
            }
        }
        for(let a=0,la=this.status.display.length;a<la;a++){
            if(abs(this.status.position[this.status.display[a]]-(a*12-(la-1)*6))<2){
                this.status.position[this.status.display[a]]=a*12-(la-1)*6
            }else if(abs(this.status.position[this.status.display[a]]<a*12-(la-1)*6)){
                this.status.position[this.status.display[a]]+=2
            }else if(abs(this.status.position[this.status.display[a]]>a*12-(la-1)*6)){
                this.status.position[this.status.display[a]]-=2
            }
            if(this.status.main[this.status.display[a]]==0&&this.status.size[this.status.display[a]]<=0){
                this.status.active[this.status.display[a]]=false
                this.status.display.splice(a,1)
            }
        }
        for(let a=0,la=this.infoAnim.intent.length;a<la;a++){
            this.infoAnim.intent[a]=smoothAnim(this.infoAnim.intent[a],a==this.intent,0,1,5)
        }
        for(let a=0,la=this.infoAnim.flash.length;a<la;a++){
            this.infoAnim.flash[a]=smoothAnim(this.infoAnim.flash[a],this.infoAnim.upFlash[a],0,1,5)
            if(this.infoAnim.flash[a]>=1&&this.infoAnim.upFlash[a]){
                this.infoAnim.upFlash[a]=false
            }
        }
        for(let a=0,la=this.dodges.length;a<la;a++){
            this.dodges[a].timer++
            if(this.dodges[a].timer<=8){
                this.moveTile(this.dodges[a].direction,5)
                this.moveRelativeTile(this.dodges[a].direction,5)
            }else if(this.dodges[a].timer<=16){
                this.moveTile(this.dodges[a].direction,-5)
                this.moveRelativeTile(this.dodges[a].direction,-5)
            }else{
                this.dodges.splice(a,1)
                a--
                la--
            }
        }
        switch(this.name){
            case 'George':
                this.trigger.display.extra.damage=this.life<=this.base.life*0.2&&options.damage
            break
            case 'Lira': case 'Ume':
                this.anim.sword=smoothAnim(this.anim.sword,this.goal.anim.sword,0,1,5)
                this.trigger.display.extra.damage=this.life<=this.base.life*0.2&&options.damage
            break
            case 'Sakura':
                this.anim.sword=smoothAnim(this.anim.sword,this.goal.anim.sword,0,1,5)
                this.anim.sword2=smoothAnim(this.anim.sword2,this.goal.anim.sword2,0,1,5)
                this.trigger.display.extra.damage=this.life<=this.base.life*0.2&&options.damage
                if(!this.armed){
                    this.goal.anim.sword=false
                }else if(this.battle.attackManager.attacks.length<=0&&this.life>0){
                    this.goal.anim.sword=true
                }
                if(this.battle.attackManager.attacks.length<=0){
                    this.goal.anim.sword2=false
                }
            break
            case 'Slow King':
                this.fades.shield=smoothAnim(this.fades.shield,this.block>0,0,1,5)
            break
            case 'Bolt':
                for(let a=0,la=this.shocks.length;a<la;a++){
                    this.shocks[a][1]-=0.05
                    if(this.shocks[a][1]<=0){
                        delete this.shocks[a]
                        this.shocks.splice(a,1)
                        a--
                        la--
                    }
                }
                if(this.time%5==0){
                    this.shocks.push([random(0,360),1])
                }
            break
            case 'Glitch': case 'Glitched Giant':
                if(this.time%5==0){
                    let part=floor(random(0,6))
                    switch(part){
                        case 0: this.color.skin.head=this.colorChances[floor(random(0,this.colorChances.length))]; break
                        case 1: this.color.skin.body=this.colorChances[floor(random(0,this.colorChances.length))]; break
                        case 2: this.color.skin.arms[0]=this.colorChances[floor(random(0,this.colorChances.length))]; break
                        case 3: this.color.skin.arms[1]=this.colorChances[floor(random(0,this.colorChances.length))]; break
                        case 4: this.color.skin.legs[0]=this.colorChances[floor(random(0,this.colorChances.length))]; break
                        case 5: this.color.skin.legs[1]=this.colorChances[floor(random(0,this.colorChances.length))]; break
                    }
                }
            break
        }
    }
}